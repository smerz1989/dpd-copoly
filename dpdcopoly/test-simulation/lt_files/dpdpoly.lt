import copolyff.lt
import a_bead.lt
import b_bead.lt
import a_bead_alchemical.lt
import b_bead_alchemical.lt


DPDPoly {

# Definitions of individual polymers to follow

DPDPoly_sub1 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.7353402293923721,-0.664182637320728,0.13467060302402986))
push(move(32.013333333333335,4.573333333333333,20.58))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7353402293923721,-0.664182637320728,0.13467060302402986,-0.1726583121650731,-0.4045178561128692,0.8980837440496048))
push(move(29.534840982757537,2.334680366739961,21.033912415098378))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.1726583121650731,-0.4045178561128692,0.8980837440496048,0.696485673077081,0.5219648457070482,0.4924026878931337))
push(move(31.059037174064333,2.3375311202596216,25.54377994723519))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.696485673077081,0.5219648457070482,0.4924026878931337,0.1360225728762036,0.63654146716888,-0.7591526988970186))
push(move(31.996133578965786,4.179238352468346,22.774001460591613))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.1360225728762036,0.63654146716888,-0.7591526988970186,0.00231476950411131,0.22350342491852906,-0.9747003954507407))
push(move(32.01419451174684,6.807357269327474,20.21297157153347))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.00231476950411131,0.22350342491852906,-0.9747003954507407,-0.001218573317018189,-0.9250139504109742,-0.37993118669590026))
push(move(32.013139845672804,5.821284719221252,15.61302285990162))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.001218573317018189,-0.9250139504109742,-0.37993118669590026,0.0014309157876647564,-0.8787302247386423,-0.4773166083542285))
push(move(32.00899002068323,2.8566496907245633,18.590296564350915))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0014309157876647564,-0.8787302247386423,-0.4773166083542285,0.0020078895055348745,-0.11201229864985736,-0.9937047918425818))
push(move(32.018864435533004,2.305794724803002,13.703447300078322))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub1 inherits .../COPOLYFF



DPDPoly_sub2 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.32381291738695533,0.8277251173847296,-0.45827538073060864))
push(move(29.448569021492272,4.366695944564639,13.087254886274396))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.32381291738695533,0.8277251173847296,-0.45827538073060864,-0.6308069808450802,-0.6041875913873967,-0.4868674432847308))
push(move(28.32642968982421,7.235089576054729,11.499150144799717))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6308069808450802,-0.6041875913873967,-0.4868674432847308,-0.08472305451730272,-0.7137180950557646,-0.6952902162573761))
push(move(27.444523884835224,2.4472193995740676,11.540499124941059))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.08472305451730272,-0.7137180950557646,-0.6952902162573761,0.8427664381896375,-0.0696006337522064,-0.5337606977311493))
push(move(27.7378437690088,2.276764777989008,6.668847053139884))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8427664381896375,-0.0696006337522064,-0.5337606977311493,0.02168452415795058,-0.03237402817954153,0.9992405634838257))
push(move(29.60042011684212,2.2691727460148647,10.175076126483898))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.02168452415795058,-0.03237402817954153,0.9992405634838257,-0.7271972541675961,0.3784411637143474,0.5726835418777452))
push(move(27.89314403228173,2.044908406003802,13.82520987907394))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7271972541675961,0.3784411637143474,0.5726835418777452,-0.46039873990377944,0.7435690369552642,0.4849103912852693))
push(move(25.110612471335568,4.605716263583591,13.710896607161734))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.46039873990377944,0.7435690369552642,0.4849103912852693,-0.033749181585762615,0.5582345815512714,0.8289964684499979))
push(move(24.981094851504388,6.748026414905196,16.892296700353697))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub2 inherits .../COPOLYFF



DPDPoly_sub3 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.5452499633252988,-0.29032967655729325,0.7863912235038599))
push(move(27.693413997893515,5.414685468528312,18.00913876447268))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5452499633252988,-0.29032967655729325,0.7863912235038599,-0.11634018169534902,0.5552061160594252,0.8235357495660413))
push(move(29.509178131494394,4.447844113055969,20.62793945160804))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.11634018169534902,0.5552061160594252,0.8235357495660413,-0.7584198142883971,0.6517647470892058,0.0014490502050347048))
push(move(27.330495441755076,7.146628801117867,20.57812568546219))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7584198142883971,0.6517647470892058,0.0014490502050347048,-0.9164662443676194,-0.07938326578404481,0.3921580294322311))
push(move(23.861214512312156,9.301545863028384,20.638730550002645))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9164662443676194,-0.07938326578404481,0.3921580294322311,-0.8246713814596545,-0.007734921302091797,0.5655592662081274))
push(move(23.105268457222785,6.780644435875384,22.386110102063814))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8246713814596545,-0.007734921302091797,0.5655592662081274,-0.7278813000207428,0.684660214682919,-0.03780480803353782))
push(move(20.613951588669767,9.271088490884443,22.86570201714564))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7278813000207428,0.684660214682919,-0.03780480803353782,-0.761063844125068,0.33314098052108543,-0.5565958248702769))
push(move(18.206528302413076,11.388500807473708,22.131678601826774))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.761063844125068,0.33314098052108543,-0.5565958248702769,-0.6660958700913343,0.023922037787016227,-0.7454824129081684))
push(move(15.559528032899138,11.483564661361395,19.16920392439746))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub3 inherits .../COPOLYFF



DPDPoly_sub4 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.00791307742229361,0.9975492539464818,0.06951884029906372))
push(move(18.33177959744512,13.476467682002427,18.29718498217065))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.00791307742229361,0.9975492539464818,0.06951884029906372,0.01091616825893349,0.5172644492935411,0.8557559972139208))
push(move(18.29179356744017,18.51724161495332,18.648474661995618))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.01091616825893349,0.5172644492935411,0.8557559972139208,0.27622571174182714,-0.6970922546479618,0.6616356585633383))
push(move(18.357439269678437,14.692355520297465,20.308734994899197))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.27622571174182714,-0.6970922546479618,0.6616356585633383,0.9791882908644601,-0.19329315805169056,0.06187120561571311))
push(move(20.188234752317396,13.731320517901674,23.19096675793645))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9791882908644601,-0.19329315805169056,0.06187120561571311,0.517519764186896,0.7524754132007445,-0.4073745772680326))
push(move(22.951010863452794,13.785577969563775,20.59898541480363))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.517519764186896,0.7524754132007445,-0.4073745772680326,0.7091765441367498,0.6654605101866605,0.23287537145083845))
push(move(23.440599281488517,18.460269076634713,20.630812118674893))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7091765441367498,0.6654605101866605,0.23287537145083845,0.4980896470146225,0.590435793510452,0.6350529720255876))
push(move(27.502912991319697,18.056885498519435,22.093713219324))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.4980896470146225,0.590435793510452,0.6350529720255876,-0.6390104698520824,0.7294264927808845,0.24413645989241156))
push(move(25.260072588050086,20.617073924857603,22.950599204751843))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub4 inherits .../COPOLYFF



DPDPoly_sub5 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.2869956125203985,0.7621096786666574,0.5803639858542616))
push(move(22.622854471172104,20.468720024119346,21.031161021022537))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2869956125203985,0.7621096786666574,0.5803639858542616,-0.3177713488670778,0.7616025674479506,0.5647857107752353))
push(move(21.719045544429683,22.86876204806062,22.85884802490526))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3177713488670778,0.7616025674479506,0.5647857107752353,-0.1687622148644292,0.3093903220861783,0.935840233925355))
push(move(20.62136767080803,25.26568328498301,24.588470857736986))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.1687622148644292,0.3093903220861783,0.935840233925355,-0.19112578370792488,0.003797953181203117,0.9815582052805961))
push(move(20.47294228008837,25.1532324824935,29.768887522390667))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.19112578370792488,0.003797953181203117,0.9815582052805961,0.01851218101474996,-0.8628999134587898,0.5050356804295022))
push(move(19.125639475513807,25.29540562567051,32.27003142208332))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.01851218101474996,-0.8628999134587898,0.5050356804295022,0.20264631906620997,-0.9248114530855576,-0.32196000622856136))
push(move(20.553283628129453,21.40831759555624,31.96070097442117))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.20264631906620997,-0.9248114530855576,-0.32196000622856136,-0.6332412541809055,-0.20419663636656463,-0.7465314780369108))
push(move(20.659954847948367,18.293292606242296,29.83234496845369))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6332412541809055,-0.20419663636656463,-0.7465314780369108,-0.621650036543615,0.7827521239613596,-0.02916066699001378))
push(move(18.668684873844793,20.80060493630551,29.73893749288287))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub5 inherits .../COPOLYFF



DPDPoly_sub6 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.07428754896656543,-0.9749026262695885,-0.20987193562074707))
push(move(23.034132301502446,20.829100227507745,30.84924296170411))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.07428754896656543,-0.9749026262695885,-0.20987193562074707,-0.5372663848939442,-0.5095126539347605,-0.6721173165031155))
push(move(22.833801226731506,18.20008239565683,30.28328176077548))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5372663848939442,-0.5095126539347605,-0.6721173165031155,-0.7946384288718435,0.40261403623071323,-0.4543695689525235))
push(move(20.323835857620757,18.258810380796607,27.45867689614003))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7946384288718435,0.40261403623071323,-0.4543695689525235,-0.6543739184520064,0.6364587763571811,0.40830748321294164))
push(move(17.55300188687623,20.875669001457027,27.26375183043809))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6543739184520064,0.6364587763571811,0.40830748321294164,-0.5989444754320962,0.3108433002691611,0.737998616548261))
push(move(16.31482402475208,22.15806536880878,29.960166465776))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5989444754320962,0.3108433002691611,0.737998616548261,-0.8519628689829455,-0.3420419037508545,0.3964424371240291))
push(move(13.763174961929895,22.84253297152599,31.93344516979144))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8519628689829455,-0.3420419037508545,0.3964424371240291,0.8669182946057943,-0.4979302447005895,0.022762730288617125))
push(move(11.868870924154173,20.37312576888126,32.02899428293695))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8669182946057943,-0.4979302447005895,0.022762730288617125,0.9969528984385614,0.07800488717275667,-0.00039480642982226143))
push(move(17.319947741308685,20.799636021028714,32.02683558498819))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub6 inherits .../COPOLYFF



DPDPoly_sub7 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.10068381700036284,0.018521552600538692,-0.9947460585915898))
push(move(16.349701044627345,18.203119787726585,32.15324520613498))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.10068381700036284,0.018521552600538692,-0.9947460585915898,-0.7849416693481333,-0.012953974006198092,-0.6194342340219925))
push(move(15.863804891585678,18.292504074348617,27.35263973126237))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7849416693481333,-0.012953974006198092,-0.6194342340219925,-0.9207228672016767,0.33627987912527313,0.19795263248417613))
push(move(10.407823197572398,18.10506035963854,27.46423110920299))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9207228672016767,0.33627987912527313,0.19795263248417613,-0.5573617482409944,0.4023167888377052,0.726284436716814))
push(move(9.112919057180724,20.758161389108185,28.80405977319327))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5573617482409944,0.4023167888377052,0.726284436716814,-0.8001156171550831,-0.35029947794079563,0.48693456946385155))
push(move(6.908088789859464,20.631250779306697,32.0246492595085))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8001156171550831,-0.35029947794079563,0.48693456946385155,-0.6117661451494162,-0.7910383463784629,0.0007198665503451576))
push(move(3.843657131347258,18.4512201643939,32.01082856039802))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6117661451494162,-0.7910383463784629,0.0007198665503451576,0.05110024363975008,-0.998363929220501,0.02565599211413765))
push(move(2.387689941932674,14.786192405306988,32.029968422640756))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.05110024363975008,-0.998363929220501,0.02565599211413765,0.47043652993553975,-0.8814303717744915,0.042071023468533766))
push(move(4.205584973625292,11.38010509773463,32.19254232937404))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub7 inherits .../COPOLYFF



DPDPoly_sub8 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.024205691723158975,-0.5148595043480382,-0.856932771733405))
push(move(2.162267975941506,11.242079138222525,29.803544815227454))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.024205691723158975,-0.5148595043480382,-0.856932771733405,-0.018691797086480614,-0.06352095957878105,-0.9978054441702896))
push(move(2.255218280615056,9.265009102771485,26.512907095456715))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.018691797086480614,-0.06352095957878105,-0.9978054441702896,0.3431133094190909,0.32258352491982817,-0.882163888599946))
push(move(2.028776260272846,10.788429773431156,22.677490534327877))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.3431133094190909,0.32258352491982817,-0.882163888599946,0.8827936737800601,-0.3703125024392247,-0.2890397551741004))
push(move(4.550269158831475,11.422738289723878,20.61220038521603))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8827936737800601,-0.3703125024392247,-0.2890397551741004,0.565397345728122,0.05291079818808674,0.8231198508593351))
push(move(6.792020145312245,8.790353875079475,21.117933768961514))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.565397345728122,0.05291079818808674,0.8231198508593351,-0.2696373782785789,0.3619685000147529,0.8923421368691071))
push(move(6.786423085885081,11.632001191373092,23.86765020443037))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2696373782785789,0.3619685000147529,0.8923421368691071,-0.9487649096918122,-0.052415843989253995,0.3116050792852739))
push(move(4.817003719349708,11.441669274206212,27.654083872283476))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9487649096918122,-0.052415843989253995,0.3116050792852739,-0.7662824969782979,-0.019122030785494237,-0.6422191859196854))
push(move(2.1255907269216276,11.374506990974332,25.398418281869006))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub8 inherits .../COPOLYFF



DPDPoly_sub9 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.9754640473921928,-0.17737267261166226,0.13041789469178605))
push(move(2.0625776098789688,13.949558003331475,26.51713630293264))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9754640473921928,-0.17737267261166226,0.13041789469178605,0.10536688656744496,0.9074568378633491,0.4067184611375962))
push(move(4.655949107292779,13.47799451024227,26.863865689577487))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.10536688656744496,0.9074568378633491,0.4067184611375962,-0.46791643178821635,0.810361482857468,-0.3526591555080188))
push(move(2.3004527490270723,15.99822270824776,27.435339485061213))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.46791643178821635,0.810361482857468,-0.3526591555080188,-0.050506772547651055,-0.25211975674157205,-0.966377097300733))
push(move(2.260029715641568,17.62736961041872,25.05810967862502))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.050506772547651055,-0.25211975674157205,-0.966377097300733,0.39679211923945296,-0.6357029705197162,-0.6621463187105041))
push(move(2.047575919540588,14.735911902789699,22.596891805134643))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.39679211923945296,-0.6357029705197162,-0.6621463187105041,0.7271179926108243,-0.1480434698916914,-0.6703600195745814))
push(move(4.687403561974397,13.73845980133948,21.007432816483277))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7271179926108243,-0.1480434698916914,-0.6703600195745814,0.6976581545639058,0.1466552938171699,-0.7012598121708423))
push(move(6.949137559390815,13.737938808428625,18.077940286636487))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6976581545639058,0.1466552938171699,-0.7012598121708423,0.7654627951996762,0.31001973954914647,-0.5638745164085516))
push(move(9.392490074399753,14.727519902480658,16.278056312580127))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub9 inherits .../COPOLYFF



DPDPoly_sub10 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.7540191090888835,0.19106220276368574,-0.6284508077836279))
push(move(8.924255171173149,17.66606616826549,13.517369327534059))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7540191090888835,0.19106220276368574,-0.6284508077836279,0.3855775922282654,0.4629716092990709,-0.798114784573298))
push(move(11.431395689211893,18.30135482904412,11.42774790442132))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.3855775922282654,0.4629716092990709,-0.798114784573298,0.0005927289881694617,0.00962706356879693,-0.9999534830777824))
push(move(11.428782264758825,20.67330767405309,8.333198509402717))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0005927289881694617,0.00962706356879693,-0.9999534830777824,0.001381353156432309,-0.971688220002902,-0.23626276678954153))
push(move(11.433305214847703,18.332369213440877,8.206314755940745))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.001381353156432309,-0.971688220002902,-0.23626276678954153,-0.008301797547981164,-0.3946476390098801,-0.9187950376342918))
push(move(11.435493281870171,15.952562482305588,7.1853649786974065))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.008301797547981164,-0.3946476390098801,-0.9187950376342918,0.5273774631673025,-0.33031908179020575,-0.7827913614421762))
push(move(11.378547753158403,15.72933019099308,2.1460749364556517))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5273774631673025,-0.33031908179020575,-0.7827913614421762,0.6756661273157496,-0.47539779066944854,0.5634467366351004))
push(move(14.896100714357098,13.785035901495268,2.048752603902036))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6756661273157496,-0.47539779066944854,0.5634467366351004,-0.25891527751038174,-0.02470126002856449,0.9655841376207065))
push(move(14.23195768153986,13.721674751440613,4.525570440863857))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub10 inherits .../COPOLYFF



DPDPoly_sub11 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.009297629975464083,0.10317609314119242,0.9946196498566471))
push(move(13.718329268324883,13.721535288661942,9.186868324204829))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.009297629975464083,0.10317609314119242,0.9946196498566471,0.21312849860856373,0.7189530698539546,0.6615759415429451))
push(move(13.762456999158388,14.211222109776799,13.907459303455825))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.21312849860856373,0.7189530698539546,0.6615759415429451,0.9372120800091478,0.34716983646518795,-0.033265924512351844))
push(move(15.18367611400181,18.664635906262337,13.735477381392384))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9372120800091478,0.34716983646518795,-0.033265924512351844,0.7786167275547011,-0.027309018001770134,0.6269052632637464))
push(move(18.075866427853672,15.80903084262297,13.754356760812069))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7786167275547011,-0.027309018001770134,0.6269052632637464,0.26785161774510435,0.9625344095270018,-0.04222583744387387))
push(move(18.328762505646136,18.554325893842904,16.2677517887676))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.26785161774510435,0.9625344095270018,-0.04222583744387387,0.4347648865960402,0.8887425602298491,-0.14531398769294496))
push(move(19.328426526082044,20.310150547237356,13.556895197795466))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.4347648865960402,0.8887425602298491,-0.14531398769294496,0.8271222392504869,0.06496252086753058,0.5582550243569652))
push(move(20.6076152417678,23.2127366292282,15.506077631860576))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8271222392504869,0.06496252086753058,0.5582550243569652,0.6539234383741792,-0.7448061802678297,0.13284536341075714))
push(move(22.909109673066897,20.591378874342674,15.97362910068989))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub11 inherits .../COPOLYFF



DPDPoly_sub12 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.08574271138106426,0.02454199494570198,-0.9960149988474614))
push(move(22.257679983369417,20.587177929645225,11.4288297170763))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.08574271138106426,0.02454199494570198,-0.9960149988474614,0.11808462956066508,0.41599020062469316,-0.9016696586032759))
push(move(22.066611781287854,20.641867066182208,9.209319836752138))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.11808462956066508,0.41599020062469316,-0.9016696586032759,0.24200036537790953,-0.06894243176454681,-0.9678237258196087))
push(move(22.846321246789582,22.66085168529966,6.934087522409998))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.24200036537790953,-0.06894243176454681,-0.9678237258196087,0.8135266302030951,0.15311734209330558,-0.5610075770439096))
push(move(23.20787662178757,20.316737088512305,4.645098669753098))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8135266302030951,0.15311734209330558,-0.5610075770439096,0.02128789868162019,0.4504445474602687,0.8925505784172878))
push(move(25.029526434503342,23.071762113030335,5.4285502639145715))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.02128789868162019,0.4504445474602687,0.8925505784172878,-0.31054775082903724,0.3031508968955557,0.9009215438463255))
push(move(23.31866485630907,22.66097767840416,9.290183855608996))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.31054775082903724,0.3031508968955557,0.9009215438463255,0.2986518359906581,0.8253030633926947,0.47925143131141795))
push(move(22.936451325437837,25.114982825107834,11.500712930079638))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.2986518359906581,0.8253030633926947,0.47925143131141795,0.6538015075529087,0.733503910153039,0.18578375201224234))
push(move(25.074847088134067,27.51406211029202,12.10835788576007))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub12 inherits .../COPOLYFF



DPDPoly_sub13 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.6757422382147581,-0.026931839522233145,-0.7366458467353616))
push(move(24.903097494025683,29.942626383140546,12.136073285188859))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6757422382147581,-0.026931839522233145,-0.7366458467353616,0.7193062994496312,-0.6913335987175909,-0.06823710761940628))
push(move(27.478686617737353,29.839975773141283,9.328350275463382))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7193062994496312,-0.6913335987175909,-0.06823710761940628,0.13572260640981515,-0.3554213530093304,0.9247999978018725))
push(move(27.45992583803365,27.485229107850948,11.893519353702489))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.13572260640981515,-0.3554213530093304,0.9247999978018725,0.08454525167812839,0.4669452569518122,0.8802353250289879))
push(move(28.485476035669084,27.203462471618845,16.188510687346543))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.08454525167812839,0.4669452569518122,0.8802353250289879,-0.19664172571935074,0.861509495272914,-0.46811688845920196))
push(move(27.85012466591519,29.64030568910117,15.956039545774837))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.19664172571935074,0.861509495272914,-0.46811688845920196,0.8023439346821645,0.037740182613553476,-0.5956675995007938))
push(move(27.415412117665646,31.89153273003695,13.641162254984108))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8023439346821645,0.037740182613553476,-0.5956675995007938,0.7084153374689552,-0.3742132872510558,-0.5984247031026585))
push(move(30.71231726748364,29.774935823123613,13.831121137859675))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7084153374689552,-0.3742132872510558,-0.5984247031026585,0.29726111926763243,-0.06862613126731709,-0.9523267722158373))
push(move(31.97347050163051,29.48378416626383,9.790801328448847))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub13 inherits .../COPOLYFF



DPDPoly_sub14 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.6658303529516166,-0.015532936925568033,0.7459414648340659))
push(move(31.987425620357335,32.046242841251,11.217320678171925))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6658303529516166,-0.015532936925568033,0.7459414648340659,-0.30541064991155814,-0.12572915777105587,0.9438837395605354))
push(move(29.519650839691984,31.988672936477723,13.982012204489054))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.30541064991155814,-0.12572915777105587,0.9438837395605354,-0.2577715526799734,-0.7195689378516567,0.6448056841467779))
push(move(29.64416495566128,31.081586926679602,18.45926079911698))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2577715526799734,-0.7195689378516567,0.6448056841467779,-0.9581065342014498,-0.2803333634300818,-0.058694756737411743))
push(move(27.788550907858365,27.156309837004613,18.312292502168845))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9581065342014498,-0.2803333634300818,-0.058694756737411743,-0.869236030998855,0.06837041322588835,-0.48964702491558043))
push(move(25.050419176053552,29.737498185845055,18.17784241669011))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.869236030998855,0.06837041322588835,-0.48964702491558043,0.019693931861377027,-0.9698138543775303,-0.24304986505908188))
push(move(25.13419375322322,27.365090293680986,16.817073669216214))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.019693931861377027,-0.9698138543775303,-0.24304986505908188,0.0003926215854680826,-0.823134807828898,-0.5678458716841868))
push(move(25.14859663487774,24.90281812167728,16.966199242182128))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0003926215854680826,-0.823134807828898,-0.5678458716841868,-0.0032971241018311982,-0.5201811070768545,-0.8540496149597838))
push(move(25.136294021722808,22.961857838345185,13.779469927949085))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub14 inherits .../COPOLYFF



DPDPoly_sub15 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.9797758023943091,0.005926292839032551,0.20001063995641363))
push(move(22.32435473250781,22.85218170443025,11.514855146306523))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9797758023943091,0.005926292839032551,0.20001063995641363,-0.7927920954151989,0.021520517630895783,0.6091121085383843))
push(move(18.05056166998988,22.878032260404396,12.387303805873927))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7927920954151989,0.021520517630895783,0.6091121085383843,-0.3483486995533832,-0.7427138987025402,0.571864711442785))
push(move(16.3870926598207,23.01335000297086,16.076528050153303))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3483486995533832,-0.7427138987025402,0.571864711442785,-0.8827286964046408,-0.4620319924148727,-0.08553646315406507))
push(move(15.848532968434373,18.18308916435144,16.002252016153644))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8827286964046408,-0.4620319924148727,-0.08553646315406507,-0.546905428486092,0.7420347959149916,0.3876581147658861))
push(move(13.74840638535663,21.632226355678043,15.820839193305071))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.546905428486092,0.7420347959149916,0.3876581147658861,-0.7394643625306283,0.5442834782575217,0.3961665708298284))
push(move(12.383214104796116,22.884792679853437,18.45854319150231))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7394643625306283,0.5442834782575217,0.3961665708298284,-0.3958224636110383,0.9182757911479847,-0.009703024911383671))
push(move(9.132400231984498,25.029842268116884,18.293855367407822))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3958224636110383,0.9182757911479847,-0.009703024911383671,0.0035397835730856158,0.9998662931798016,0.015964513620486984))
push(move(9.151349852119694,30.382453819231404,18.379318634442445))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub15 inherits .../COPOLYFF



DPDPoly_sub16 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.5271713625940936,-0.8103813606021796,-0.2556802785692457))
push(move(9.191995796642146,32.19885615982434,14.56442608908307))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5271713625940936,-0.8103813606021796,-0.2556802785692457,0.6870960850551878,-0.7148089131619164,-0.13018136412756612))
push(move(10.89066597110611,29.587616732055256,13.740564069592786))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6870960850551878,-0.7148089131619164,-0.13018136412756612,0.8642285522889812,-0.31922685719708443,0.38884858628078345))
push(move(13.88441996627114,27.317171205211622,13.675371133372765))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8642285522889812,-0.31922685719708443,0.38884858628078345,0.927883346859574,-0.022288151705967825,-0.3722038862158847))
push(move(16.786494796115598,27.409828343330027,16.39331685991235))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.927883346859574,-0.022288151705967825,-0.3722038862158847,-0.1338800025006809,0.4277838460370464,-0.8939111398792221))
push(move(18.17818854296275,27.214033062091026,11.953002307415023))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.1338800025006809,0.4277838460370464,-0.8939111398792221,-0.9841929622193937,0.1393857160515519,-0.10925124840756388))
push(move(16.04404351743429,29.78216668779486,11.436000931960983))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9841929622193937,0.1393857160515519,-0.10925124840756388,-0.48376426792996435,0.8750545917303454,0.015861732749743982))
push(move(13.504505320060453,27.87594054124362,11.434195786372516))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.48376426792996435,0.8750545917303454,0.015861732749743982,0.2729475181967407,0.9619758727544846,0.01010309598528805))
push(move(14.723249024112725,32.17127924267358,11.479307332741772))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub16 inherits .../COPOLYFF



DPDPoly_sub17 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.011884916503039862,-0.6332807485893883,0.7738308873557451))
push(move(18.35046477022011,31.96979255667345,13.222511338900766))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.011884916503039862,-0.6332807485893883,0.7738308873557451,0.1033512548218118,-0.28241070373719884,0.9537099729694647))
push(move(18.30576540061183,29.588013076795246,16.132902239785228))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.1033512548218118,-0.28241070373719884,0.9537099729694647,0.9807503828079855,-0.044692870793545975,0.19008217676105527))
push(move(19.183016613011677,29.69481725786511,20.905175636043392))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9807503828079855,-0.044692870793545975,0.19008217676105527,0.3640184788038517,0.6169127975632845,-0.6977887554926431))
push(move(20.523125341671026,29.486967812795644,16.56265542841265))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.3640184788038517,0.6169127975632845,-0.6977887554926431,0.357146141759393,0.47857394695595956,0.8021306693559185))
push(move(20.555424856514115,32.02067777923226,18.27439973859937))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.357146141759393,0.47857394695595956,0.8021306693559185,-0.906669454817575,-0.0025899107682819363,0.4218338441412847))
push(move(22.405229330666494,32.00897723492719,20.78975788303597))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.906669454817575,-0.0025899107682819363,0.4218338441412847,-0.9646465160887395,0.001872727249119509,-0.26354049383445316))
push(move(18.315882315660296,32.01428050257122,19.316361430488932))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9646465160887395,0.001872727249119509,-0.26354049383445316,-0.982192243586052,0.0025022415982864305,-0.1878620116638314))
push(move(13.968431863955542,32.02535610557845,18.48483298705083))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub17 inherits .../COPOLYFF



DPDPoly_sub18 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.2536704731649979,-0.5852505210472011,0.7701513608753967))
push(move(16.13754959400579,31.782009868431164,15.985119807503475))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2536704731649979,-0.5852505210472011,0.7701513608753967,-0.9106395960278048,-0.0683794651588141,0.4075043249965714))
push(move(15.298732357680592,29.846750244015272,18.5317947437756))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9106395960278048,-0.0683794651588141,0.4075043249965714,-0.6234350138195598,0.34984097101713196,0.6992425033860539))
push(move(11.34110280300329,31.421847112866725,18.131493433771496))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6234350138195598,0.34984097101713196,0.6992425033860539,-0.713326949942027,0.0011586176579707309,0.7008304503169989))
push(move(11.437759636945982,32.01333764406687,22.862248072361215))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.713326949942027,0.0011586176579707309,0.7008304503169989,-0.6115729119385376,-0.6990830724220285,-0.37048809864285076))
push(move(6.546448136923306,31.42963480623853,22.84215239459784))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6115729119385376,-0.6990830724220285,-0.37048809864285076,0.23467067896594404,0.2891779413369927,-0.9280656176573733))
push(move(9.27239282605183,29.538127814576082,21.550478670917986))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.23467067896594404,0.2891779413369927,-0.9280656176573733,-0.7501362224024954,0.3913722724984918,-0.533032261837011))
push(move(7.07156535665801,32.0767216823349,20.765441153879372))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7501362224024954,0.3913722724984918,-0.533032261837011,-0.7061954151771822,0.0003288844721297478,-0.7080168976922311))
push(move(4.404334610039787,32.07796384669521,18.09133084664074))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub18 inherits .../COPOLYFF



DPDPoly_sub19 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.987721705186273,0.006317398220009728,-0.15609587945762943))
push(move(4.763642280340092,29.468437502956533,16.989949000317743))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.987721705186273,0.006317398220009728,-0.15609587945762943,-0.6539740924380343,0.6699805128286419,0.3513459816900138))
push(move(2.153019265653762,29.485134863254984,16.57737580964058))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6539740924380343,0.6699805128286419,0.3513459816900138,0.47009551623117896,0.42421130156972264,0.7739864192864517))
push(move(2.2832562704705044,32.00953249451826,18.322530317658508))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.47009551623117896,0.42421130156972264,0.7739864192864517,-0.06416201239925252,0.0006009792326556389,0.997939314281605))
push(move(4.949649431716947,32.00879671875627,21.181873605435882))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.06416201239925252,0.0006009792326556389,0.997939314281605,0.3804529043163393,0.0010694551183975992,0.9247996776940465))
push(move(1.9064518746669017,32.01306186662153,24.183130793009596))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.3804529043163393,0.0010694551183975992,0.9247996776940465,0.9945941344144399,-7.900854262682834e-05,0.1038388248490964))
push(move(6.575531033465141,32.01336708050452,25.1340442005516))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9945941344144399,-7.900854262682834e-05,0.1038388248490964,0.9479903174234471,-0.004916665511518101,-0.3182611890753257))
push(move(11.880749175182448,32.012269528655544,25.224479494498592))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9479903174234471,-0.004916665511518101,-0.3182611890753257,0.7050582590038363,-0.010324501058619165,-0.7090742246678903))
push(move(14.674161729820506,31.97136426939616,22.41515584490958))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub19 inherits .../COPOLYFF



DPDPoly_sub20 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.006086554323809918,-0.810972891597234,0.5850520685809806))
push(move(15.974318094111595,30.479361647270554,25.319404439967947))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.006086554323809918,-0.810972891597234,0.5850520685809806,0.47560200129677643,-0.5433538472973284,0.6917870575471129))
push(move(15.99707595740345,27.447102470978997,27.506936874090417))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.47560200129677643,-0.5433538472973284,0.6917870575471129,0.5075162648935164,-0.8608557333217485,0.036805533220001733))
push(move(18.53352215742169,27.5555863687246,29.041895606516167))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5075162648935164,-0.8608557333217485,0.036805533220001733,-0.031192088799921136,-0.6261318374986595,-0.7790930468608034))
push(move(18.307338919233747,23.52840418730966,27.67447920932262))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.031192088799921136,-0.6261318374986595,-0.7790930468608034,-0.003236978490526648,0.6077254975216201,-0.7941405679301059))
push(move(18.293460676021382,22.73673190129937,23.04581653089632))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.003236978490526648,0.6077254975216201,-0.7941405679301059,0.022093758116757345,0.9887830549218586,0.14771572750277892))
push(move(18.297675509677536,25.34265794200421,25.30371722385697))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.022093758116757345,0.9887830549218586,0.14771572750277892,-0.6387221140305422,0.6638837064122548,-0.38896334712756936))
push(move(18.453415247653002,29.895331590442822,24.115250069142544))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6387221140305422,0.6638837064122548,-0.38896334712756936,-0.9530960880037911,-0.038950863347763376,-0.3001510907465331))
push(move(14.089148693967424,29.716973970171964,22.740845764177934))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub20 inherits .../COPOLYFF



DPDPoly_sub21 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.042248434309975144,0.5672083767705379,0.8224899556345275))
push(move(13.718403058786189,29.78591073549778,27.465863293717682))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.042248434309975144,0.5672083767705379,0.8224899556345275,-0.5391711829852186,0.5336643276761134,0.6515342053985512))
push(move(13.880276280035726,31.959147414374897,30.6172013430076))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5391711829852186,0.5336643276761134,0.6515342053985512,-0.543312070694132,-0.5223911349703417,-0.6572058246413012))
push(move(11.23923444657262,32.239758219162255,30.46168948543735))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.543312070694132,-0.5223911349703417,-0.6572058246413012,-0.6008103355130038,-0.1666876974390639,-0.7818197696804646))
push(move(11.397606619288903,29.572076167868218,27.61409309323413))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6008103355130038,-0.1666876974390639,-0.7818197696804646,-0.4277741002003671,0.07730543870140955,-0.9005738106035224))
push(move(8.9790079531404,31.61268520191914,27.520512125344123))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4277741002003671,0.07730543870140955,-0.9005738106035224,0.304594584064501,-0.25418669091133017,-0.9179385957252922))
push(move(10.193945080311082,29.78959654433587,25.080077924184803))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.304594584064501,-0.25418669091133017,-0.9179385957252922,0.5784987907772732,0.3722004185553143,-0.7258140240423036))
push(move(11.170897407663377,29.78353538627221,20.91494514177677))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5784987907772732,0.3722004185553143,-0.7258140240423036,0.7448739584136815,0.6602042255206824,-0.09640107199491628))
push(move(13.78315848645051,32.098861063721486,20.576868121522264))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub21 inherits .../COPOLYFF



DPDPoly_sub22 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.829605567040675,-0.38609507676705174,0.4033425279230602))
push(move(15.780389928140236,28.77850492821952,20.62351000965067))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.829605567040675,-0.38609507676705174,0.4033425279230602,0.046868505165410135,-0.8500391707791933,0.5246301090907585))
push(move(18.71899751660652,27.410888837473706,22.052219580072062))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.046868505165410135,-0.8500391707791933,0.5246301090907585,-0.3981730967962684,-0.336902693541712,0.8532026488894704))
push(move(15.972550979865833,25.293341053493783,22.77449547790915))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3981730967962684,-0.336902693541712,0.8532026488894704,-0.02181268999934949,-0.1335019215978214,0.9908084797198101))
push(move(16.002804134011065,25.11266006677199,27.872460594778943))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.02181268999934949,-0.1335019215978214,0.9908084797198101,0.5733875615127803,-0.571172299453513,0.5873575645545175))
push(move(15.766490952601005,24.03217566741924,32.134460816956064))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5733875615127803,-0.571172299453513,0.5873575645545175,0.9389715510256519,-0.1469815522889101,-0.31101261976200284))
push(move(18.232716071745553,22.891363312977205,30.15670206221367))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9389715510256519,-0.1469815522889101,-0.31101261976200284,0.9329131325668714,-0.3580468614295957,0.03841265552761088))
push(move(23.033262096355305,22.894674428249015,29.727510863934317))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9329131325668714,-0.3580468614295957,0.03841265552761088,0.5790911485875982,-0.7862914408249596,0.21540476251212567))
push(move(24.928250316667786,20.321654582012435,30.432390378247838))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub22 inherits .../COPOLYFF



DPDPoly_sub23 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.5806893769748726,0.7790143171437357,-0.23650907203237204))
push(move(27.67488296880165,20.320439694097946,30.425122641556342))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5806893769748726,0.7790143171437357,-0.23650907203237204,-0.12773897205178925,0.8759644062958575,0.46515493539453917))
push(move(29.591359726231957,22.8914576801494,29.644560507231187))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.12773897205178925,0.8759644062958575,0.46515493539453917,-0.29153044600897543,0.8885933960484413,0.35413525036192856))
push(move(27.25426875534802,23.20478324132903,31.956767793716534))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.29153044600897543,0.8885933960484413,0.35413525036192856,-0.2690470889391463,0.9630936068182916,0.008022994397662214))
push(move(27.644109718294743,28.826733124605077,32.009973377545535))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2690470889391463,0.9630936068182916,0.008022994397662214,0.5530250330266058,0.8325733985805459,-0.031382301094107445))
push(move(24.909258058481935,31.59909376510153,32.02669610164805))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5530250330266058,0.8325733985805459,-0.031382301094107445,0.9773517886399997,0.07970660681578312,-0.1960365733022983))
push(move(29.76759306065641,32.02361506953898,31.88947287641341))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9773517886399997,0.07970660681578312,-0.1960365733022983,0.6419086683237247,-0.6839433296244832,-0.34666234781562016))
push(move(32.27272732619466,32.19961156897068,30.549736321518264))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6419086683237247,-0.6839433296244832,-0.34666234781562016,-0.09689996906423591,-0.9941716967847785,0.047254981826519445))
push(move(32.02150330114126,29.622110072609257,30.672250155660088))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub23 inherits .../COPOLYFF



DPDPoly_sub24 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.7992812117856138,0.07054814520949541,-0.5968018965234785))
push(move(31.993909513304434,31.921677221123844,27.49077752040307))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7992812117856138,0.07054814520949541,-0.5968018965234785,-0.6702677617333351,-0.6473089852843229,-0.36294931485148907))
push(move(29.504049307865387,32.14144345200051,25.63166551980355))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6702677617333351,-0.6473089852843229,-0.36294931485148907,0.5870109572832444,-0.5989069554941664,-0.544728000648138))
push(move(29.472657122225364,29.486785644816216,26.125521901449563))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5870109572832444,-0.5989069554941664,-0.544728000648138,-0.005640252918466807,0.6028838826362509,-0.7978090069712517))
push(move(32.06708618978937,29.52646566201749,23.25324661815396))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.005640252918466807,0.6028838826362509,-0.7978090069712517,-0.7772426751882527,0.41290572576568607,0.47476592705892495))
push(move(29.449317075069384,31.9815918979612,22.82409196322685))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7772426751882527,0.41290572576568607,0.47476592705892495,-0.26034648655147336,-0.20413453782744143,0.943688930424788))
push(move(27.48897136972869,31.958562975714205,26.049712890675433))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.26034648655147336,-0.20413453782744143,0.943688930424788,0.0026808264875290795,-0.9343136115411871,-0.35644198470186933))
push(move(27.459459785693603,30.421368814140244,30.036811911870117))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0026808264875290795,-0.9343136115411871,-0.35644198470186933,0.007350999795753571,-0.1383770043488042,-0.9903523451123109))
push(move(27.495318877584097,29.74634856487545,25.205749915668854))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub24 inherits .../COPOLYFF



DPDPoly_sub25 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.9089353122256997,-0.051207957823683835,-0.4137805496210494))
push(move(25.308645834664436,32.232562219264906,24.660080584614583))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9089353122256997,-0.051207957823683835,-0.4137805496210494,-0.9991187730622533,-0.03502478997786691,0.02312880026253019))
push(move(21.637035890503995,32.02570960320228,22.988629646077857))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9991187730622533,-0.03502478997786691,0.02312880026253019,-0.30702326119758144,-0.7371883012863354,0.6019054124446539))
push(move(18.040607092894746,31.977776164448557,24.828329866773))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.30702326119758144,-0.7371883012863354,0.6019054124446539,0.38457728349963577,-0.7224674773578812,0.5745790260496637))
push(move(20.546461316404272,29.407149645983715,25.126652466448828))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.38457728349963577,-0.7224674773578812,0.5745790260496637,-0.29750432068375576,0.09972122504381768,0.94949821297897))
push(move(20.533588195979032,27.294458022887348,28.552976941960274))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.29750432068375576,0.09972122504381768,0.94949821297897,-0.9298556257137784,0.33340799429215034,0.15558799655025735))
push(move(19.12011014875148,29.885251898260627,29.678915376964408))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9298556257137784,0.33340799429215034,0.15558799655025735,-0.9661053296050397,-0.031763305008789156,0.25618662057893665))
push(move(13.746135392087913,29.728159517096028,29.6886867814595))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9661053296050397,-0.031763305008789156,0.25618662057893665,-0.8088289734590668,-0.03175174669068467,0.5871861019091331))
push(move(10.67477571470757,29.607588867833673,31.918403786785255))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub25 inherits .../COPOLYFF



DPDPoly_sub26 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.5182864416462819,-0.8030234010785582,-0.2941642087777849))
push(move(9.139591585299115,32.46837411249976,30.731680864762698))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5182864416462819,-0.8030234010785582,-0.2941642087777849,-0.703744959916076,-0.43908151745735685,-0.5585252477910603))
push(move(7.322153262305742,29.652468879198892,29.70015608748396))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.703744959916076,-0.43908151745735685,-0.5585252477910603,-0.13082651791544825,-0.8383498669798735,-0.529201211964738))
push(move(4.815336521033705,29.77037898125684,27.299747751424867))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.13082651791544825,-0.8383498669798735,-0.529201211964738,0.3250799556487462,-0.7276599875300058,-0.6040148714917878))
push(move(6.797710913266969,26.29178802824619,27.57875492861248))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.3250799556487462,-0.7276599875300058,-0.6040148714917878,0.006664273464393887,-0.11982914549226935,-0.9927721608454702))
push(move(6.857259107685445,25.19973308900226,23.5057531130557))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.006664273464393887,-0.11982914549226935,-0.9927721608454702,0.0015514273154678818,-0.2720670474358928,-0.962277046786839))
push(move(6.859965082371691,25.17240660925028,18.304794861705947))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0015514273154678818,-0.2720670474358928,-0.962277046786839,0.03257143599246253,-0.453318334813965,-0.890753382749054))
push(move(6.870418797423602,22.891975647492448,15.343419466090682))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.03257143599246253,-0.453318334813965,-0.890753382749054,0.05716693935575602,-0.30633718235768315,-0.9502049630210583))
push(move(7.119856115749812,21.55533026937647,11.197376656954988))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub26 inherits .../COPOLYFF



DPDPoly_sub27 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.6860503152824208,-0.7275538877308961,-0.000552583522750922))
push(move(4.668080685628865,20.557632382044027,9.398447749077773))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6860503152824208,-0.7275538877308961,-0.000552583522750922,-0.6210408365757081,0.12253185723531404,0.774140958267814))
push(move(2.3310981254485097,18.07927079639476,9.396565411839607))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6210408365757081,0.12253185723531404,0.774140958267814,-0.007438590282144475,0.053364024866089155,0.9985474191167417))
push(move(2.291698005396626,21.026494598764284,12.360660629360337))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.007438590282144475,0.053364024866089155,0.9985474191167417,-0.000967623196069211,-0.9653299062308104,0.2610311012920976))
push(move(2.2868782019300995,18.396502020149256,15.332594797520269))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.000967623196069211,-0.9653299062308104,0.2610311012920976,-0.00013296164791688149,-0.41614705180625927,-0.9092973185895572))
push(move(2.2866665122052465,16.006926165136175,13.717982585081153))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.00013296164791688149,-0.41614705180625927,-0.9092973185895572,-0.008041801015676453,-0.9401075432635662,-0.3407831224332661))
push(move(2.2859309967935904,15.431913124105806,8.854854003269281))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.008041801015676453,-0.9401075432635662,-0.3407831224332661,-0.019623243638261137,-0.781422968236462,0.6236930920105104))
push(move(2.2691341737582587,13.957350007639484,12.975024008031761))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.019623243638261137,-0.781422968236462,0.6236930920105104,-0.02913124556713168,-0.9872260902347604,0.15663976918872266))
push(move(2.133321748769829,9.354815281904761,13.705292367279368))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub27 inherits .../COPOLYFF



DPDPoly_sub28 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.011174834443309228,0.4236537946499317,-0.9057552568734437))
push(move(4.528975564763003,11.858790345282927,13.772824706339083))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.011174834443309228,0.4236537946499317,-0.9057552568734437,0.014239892931858213,0.8100324057023088,-0.5862121861249725))
push(move(4.572719521139901,13.517185662554954,10.227240326917583))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.014239892931858213,0.8100324057023088,-0.5862121861249725,0.36666432179254044,0.7594526627753249,-0.5373908522927098))
push(move(4.634726738090855,17.874416849394827,9.419377191076656))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.36666432179254044,0.7594526627753249,-0.5373908522927098,0.39150968195301383,-0.4659913807689917,-0.7934558601371967))
push(move(6.881316587789838,18.29886221338829,6.843712474569285))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.39150968195301383,-0.4659913807689917,-0.7934558601371967,0.20969382579781518,-0.6588638539677312,-0.7224450991992843))
push(move(6.917190056142805,15.157732480753213,4.793606798318254))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.20969382579781518,-0.6588638539677312,-0.7224450991992843,0.5030405456736783,-0.8542062138452018,-0.131460844499696))
push(move(8.246624418520913,14.009026898565343,2.1399023005820457))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5030405456736783,-0.8542062138452018,-0.131460844499696,0.249823783131852,-0.010702485986356036,0.9682321695623427))
push(move(9.121520717251004,11.414588982118424,4.217543551015244))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.249823783131852,-0.010702485986356036,0.9682321695623427,0.0912747638338742,0.6953412916302195,0.7128600182652189))
push(move(9.455285696991146,13.957247679497751,6.824263081803528))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub28 inherits .../COPOLYFF



DPDPoly_sub29 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.8134501803706565,-0.25594877054867604,-0.5222920934779384))
push(move(11.583931059240161,10.208057493770216,6.803021507723926))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8134501803706565,-0.25594877054867604,-0.5222920934779384,-0.5845894939106558,-0.8110065760599977,0.022879186976862975))
push(move(9.005342904120086,9.396715282556208,5.147386979323666))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5845894939106558,-0.8110065760599977,0.022879186976862975,0.8793818080886822,-0.365968906274698,0.3045560625611998))
push(move(9.179919102938518,6.8729487964773,6.8971077675964745))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8793818080886822,-0.365968906274698,0.3045560625611998,0.6580363852255396,0.7221056737844401,-0.21342800099243023))
push(move(13.884692259659749,7.366095441943218,6.8372507153196995))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6580363852255396,0.7221056737844401,-0.21342800099243023,0.44714390261346043,0.8941152987026485,-0.024903071727758377))
push(move(13.46592310289556,11.576256813663923,5.506982105103111))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.44714390261346043,0.8941152987026485,-0.024903071727758377,0.7801818140149435,-0.07650673834387549,0.620856711382211))
push(move(15.924578569455553,11.445081080665453,6.723642020686036))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7801818140149435,-0.07650673834387549,0.620856711382211,-0.08665014499617865,-0.5296314045537847,0.8437904524717772))
push(move(18.319812404260215,11.100271303544702,9.36963270131508))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.08665014499617865,-0.5296314045537847,0.8437904524717772,-0.795902229235098,-0.5449432292828347,0.2637736119428885))
push(move(15.558894049671684,9.209908758158107,10.28464132915763))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub29 inherits .../COPOLYFF



DPDPoly_sub30 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.669460993201703,0.005699973685932106,0.742825342110357))
push(move(18.609256164848333,9.144440892991025,13.267704494445459))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.669460993201703,0.005699973685932106,0.742825342110357,-0.2714404904547853,-0.6253941157103489,0.7315751910614086))
push(move(16.084208088001628,9.165939841757115,16.069465494079427))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2714404904547853,-0.6253941157103489,0.7315751910614086,0.28238126237141453,-0.9587095947304035,0.0337155102792751))
push(move(17.58190658642759,6.777445534099042,16.036574617177596))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.28238126237141453,-0.9587095947304035,0.0337155102792751,0.139372731223391,-0.8624568167812054,-0.48656292602186885))
push(move(17.51545223293456,4.306738198469125,16.240351927107582))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.139372731223391,-0.8624568167812054,-0.48656292602186885,0.2374893726255233,-0.6137444575651575,0.7529386022100247))
push(move(18.283001579119155,2.4389773821846226,13.588988004868764))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.2374893726255233,-0.6137444575651575,0.7529386022100247,0.0024629283489709867,0.08186084718635489,0.9966407254782841))
push(move(18.29465545839327,2.2930410984466376,18.710745363783705))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0024629283489709867,0.08186084718635489,0.9966407254782841,0.022083499049583934,0.8416270934312889,0.539607407910721))
push(move(18.306384020607886,3.2161443145286577,23.050852154720854))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.022083499049583934,0.8416270934312889,0.539607407910721,0.028455839531206697,0.9990926699753738,-0.03168756850963786))
push(move(18.465044238616905,8.786749977231551,22.874172899751017))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub30 inherits .../COPOLYFF



DPDPoly_sub31 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.6390471570104291,0.7323640880023551,-0.2350778035488816))
push(move(13.573410603792274,9.125009050195713,22.859590015397714))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6390471570104291,0.7323640880023551,-0.2350778035488816,-0.33189768450009816,0.7589010771819512,-0.5602794678332834))
push(move(11.482859344535038,11.520833285719405,22.090566645461152))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.33189768450009816,0.7589010771819512,-0.5602794678332834,-0.5094204710357291,-0.02766447028189094,-0.8600729392172263))
push(move(11.371402662255802,14.160013139821247,19.14236059420736))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5094204710357291,-0.02766447028189094,-0.8600729392172263,-0.3877589039634825,-0.39976499941451027,-0.8305606405556161))
push(move(9.283653989751603,11.401403748352198,18.377568992294226))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3877589039634825,-0.39976499941451027,-0.8305606405556161,-0.9153421208534912,0.08305573439553594,-0.39401845994248913))
push(move(8.735698711094068,11.442700454740462,13.496811415024569))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9153421208534912,0.08305573439553594,-0.39401845994248913,-0.2940674936850965,-0.6211389326174536,0.72643701416201))
push(move(6.915922024435047,11.616245513798091,17.358354338804073))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2940674936850965,-0.6211389326174536,0.72643701416201,-0.32629933671822886,-0.9366550395141392,0.12730310212249463))
push(move(6.802611109577317,7.35956989714153,18.272131419836782))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.32629933671822886,-0.9366550395141392,0.12730310212249463,-0.6549922602437172,-0.7556049832252618,0.0068006136471968895))
push(move(4.5128195769124915,4.718045717932501,18.29590572755224))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub31 inherits .../COPOLYFF



DPDPoly_sub32 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.0809750396633423,0.7254590626902211,-0.6834853263327209))
push(move(2.0264566975829865,7.601221408820477,18.47066252747267))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0809750396633423,0.7254590626902211,-0.6834853263327209,0.3434381249305636,0.8727347426870482,-0.3469644409030277))
push(move(2.3390431113485013,10.40169730463763,15.832217052077402))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.3434381249305636,0.8727347426870482,-0.3469644409030277,0.7710326947250029,-0.6304594736107325,0.08960711913446574))
push(move(4.468672958329935,13.807308692636278,16.003370348872323))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7710326947250029,-0.6304594736107325,0.08960711913446574,0.022182308170519006,-0.8946465073393818,-0.44622367945871455))
push(move(4.5906277823332164,8.560617287965561,16.093889504146667))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.022182308170519006,-0.8946465073393818,-0.44622367945871455,0.25611869316741803,-0.25262001109214605,-0.9330521662833317))
push(move(4.64014349588014,6.891638945753145,12.554035248294026))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.25611869316741803,-0.25262001109214605,-0.9330521662833317,0.7578737507520998,0.36105530557501064,-0.5433842510020693))
push(move(6.518976095871049,6.658610970773328,9.068828002215755))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7578737507520998,0.36105530557501064,-0.5433842510020693,0.9998634809561365,-0.009012639326101822,-0.013848891026182591))
push(move(9.39295767255381,9.155906276818774,9.146337898991572))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9998634809561365,-0.009012639326101822,-0.013848891026182591,0.4249569350511743,-0.9039539488603604,-0.0477374244348503))
push(move(10.584185135269522,6.6219677054124695,9.012521678344974))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub32 inherits .../COPOLYFF



DPDPoly_sub33 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.6216419736440255,-0.7658315655321157,0.16450917858462893))
push(move(9.241594331324723,7.091936774420791,13.174921077127953))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6216419736440255,-0.7658315655321157,0.16450917858462893,0.9413149459493496,-0.3373024259700164,0.012379255515353758))
push(move(11.303411475154602,4.5518820193595015,13.72055322409329))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9413149459493496,-0.3373024259700164,0.012379255515353758,0.44267170282796997,-0.018680062775876066,-0.8964891626618108))
push(move(16.26481765931602,4.575297389425681,13.26728365619113))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.44267170282796997,-0.018680062775876066,-0.8964891626618108,-0.7365092626052971,-0.28615329592328625,-0.6129195684009783))
push(move(12.284510445512305,4.510481156737046,11.733652799228889))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7365092626052971,-0.28615329592328625,-0.6129195684009783,0.4845574963339217,-0.8704559464439372,-0.086663014296705))
push(move(11.273607818516636,2.6360805742328233,9.113622138615709))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.4845574963339217,-0.8704559464439372,-0.086663014296705,0.1774654793062039,-0.07145697519574466,0.9815293700906225))
push(move(13.527288552901702,2.2779626179216734,11.511382175612123))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.1774654793062039,-0.07145697519574466,0.9815293700906225,0.9564450254754433,-0.003118519595591055,0.2918958514244599))
push(move(12.146936740135365,2.2844322236138286,13.943845963945254))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9564450254754433,-0.003118519595591055,0.2918958514244599,0.9247338556503591,-0.0034724328667100637,-0.3805985265657331))
push(move(16.128342922270775,2.2694817969606955,12.305193591350195))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub33 inherits .../COPOLYFF



DPDPoly_sub34 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.1506378579624034,0.6586368481112984,0.7372284164751881))
push(move(16.011042212142208,2.2375672598692224,6.9188882622546))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.1506378579624034,0.6586368481112984,0.7372284164751881,-0.3275672974060761,0.882772986668014,0.3367662686186279))
push(move(15.513107109254465,4.414698634186897,9.355804933633188))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3275672974060761,0.882772986668014,0.3367662686186279,0.024827681837925986,0.9985036692539108,-0.048723800149736464))
push(move(13.842280241419147,8.08224252943321,9.148554905371824))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.024827681837925986,0.9985036692539108,-0.048723800149736464,0.3474932211795063,0.563396228532804,0.7495553021020551))
push(move(15.688932552286442,11.485932717243333,9.010751222881892))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.3474932211795063,0.563396228532804,0.7495553021020551,0.3620670079830633,0.6857126948019412,0.6314313754618566))
push(move(16.031014329951415,11.630871554640187,13.869732588729823))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.3620670079830633,0.6857126948019412,0.6314313754618566,0.8146817892970654,-0.0795286744726421,-0.5744290836337907))
push(move(16.93654099581497,13.848757633645604,11.186533876826143))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8146817892970654,-0.0795286744726421,-0.5744290836337907,0.36597815509702936,-0.6442310137003529,0.6715849841817418))
push(move(19.834411257963634,11.25958656932203,11.187971635243018))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.36597815509702936,-0.6442310137003529,0.6715849841817418,-0.5083362776732151,0.047794344678131304,0.8598313377739426))
push(move(18.326891286432346,11.401325281062865,13.737883909408813))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub34 inherits .../COPOLYFF



DPDPoly_sub35 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.42964836542600354,-0.03893133878050727,0.9021566565444831))
push(move(17.745838117830257,13.650621963820024,16.134267611783667))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.42964836542600354,-0.03893133878050727,0.9021566565444831,-0.5905848745142228,0.41105096918249195,0.6944397790515415))
push(move(15.997866932249348,13.49223463157231,19.804580284697487))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5905848745142228,0.41105096918249195,0.6944397790515415,-0.762049131212714,0.08498438469276187,-0.6419180445947447))
push(move(14.00593416701271,16.25361978847217,20.531837182822823))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.762049131212714,0.08498438469276187,-0.6419180445947447,-0.4503171231755347,-0.5618225015340544,-0.693952422969275))
push(move(13.769257621657518,13.740771088375041,17.92729380509198))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4503171231755347,-0.5618225015340544,-0.693952422969275,-0.14046190190956032,-0.4852635454971632,-0.8630120193389381))
push(move(11.24092730066647,12.803955108934892,16.27087725996484))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.14046190190956032,-0.4852635454971632,-0.8630120193389381,0.3784791533230878,-0.5555297221748096,-0.7403649493865964))
push(move(13.099311051611293,11.426259868929797,13.811074856006005))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.3784791533230878,-0.5555297221748096,-0.7403649493865964,-0.3873923905738759,-0.8544230101175846,-0.34624912347479453))
push(move(13.716137561401318,9.170854431137567,11.42897539213388))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3873923905738759,-0.8544230101175846,-0.34624912347479453,-0.7551604033089754,-0.6355494806645421,0.16065373603267544))
push(move(11.065146793560707,6.939757834487435,11.992950369073277))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub35 inherits .../COPOLYFF



DPDPoly_sub36 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.01835974096906228,-0.3549313849754275,0.9347120582676645))
push(move(13.92982837627637,8.122323613171925,13.426094378745736))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.01835974096906228,-0.3549313849754275,0.9347120582676645,-0.40116379434973437,-0.227950701782692,0.8871899952432413))
push(move(13.876999021372365,7.101024013409933,16.1156876111604))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.40116379434973437,-0.227950701782692,0.8871899952432413,0.6365086687351816,-0.3656646186365132,0.6790773897740818))
push(move(11.657985108406177,6.83140884333151,18.450367871029005))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6365086687351816,-0.3656646186365132,0.6790773897740818,0.920879314846715,-0.3284512295105803,0.2100025650329844))
push(move(15.986317581445538,5.889252352256053,18.366074153142375))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.920879314846715,-0.3284512295105803,0.2100025650329844,0.8855650195766033,0.18512981010168042,0.426029986637098))
push(move(18.50234963806254,4.390220395789462,20.011195749422455))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8855650195766033,0.18512981010168042,0.426029986637098,0.662242376196407,-0.7492326003892261,-0.009249090968024334))
push(move(20.58825549364777,6.851300166873946,20.57998674442521))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.662242376196407,-0.7492326003892261,-0.009249090968024334,0.4386185454841406,-0.5743467385428931,-0.6911870915190172))
push(move(20.6382419784422,1.9737634763073526,19.981365186981645))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.4386185454841406,-0.5743467385428931,-0.6911870915190172,0.3703754811531726,0.8164079755410645,-0.4430575813971548))
push(move(22.007755728284035,4.992543079381647,18.3430994794195))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub36 inherits .../COPOLYFF



DPDPoly_sub37 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.15889440382642994,0.6886829691697842,-0.7074378675248685))
push(move(24.897595611163503,2.08444040980583,18.255281300174715))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.15889440382642994,0.6886829691697842,-0.7074378675248685,0.36257996516758156,0.782055242121874,-0.5068780594272869))
push(move(25.445121406353632,4.457536511670335,15.817558689205493))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.36257996516758156,0.782055242121874,-0.5068780594272869,0.895791320636182,0.348767322997207,-0.2755345065182343))
push(move(27.22122457947461,7.096317485181593,15.00690396155868))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.895791320636182,0.348767322997207,-0.2755345065182343,0.6313771693908985,-0.028179767514207043,-0.7749637221669038))
push(move(31.608005775238063,6.856993431782781,13.921930472911159))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6313771693908985,-0.028179767514207043,-0.7749637221669038,-0.039800184471453205,0.7141177947349838,-0.6988932111266226))
push(move(32.012497106166606,6.882472334541063,9.126009670142796))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.039800184471453205,0.7141177947349838,-0.6988932111266226,-0.8958146123215932,0.4444275802129221,0.0005534412344033691))
push(move(31.335300947035602,11.75002026358563,9.133220179147223))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8958146123215932,0.4444275802129221,0.0005534412344033691,-0.9989810370706484,-0.04015379351891381,-0.020604864457016737))
push(move(28.313096998837885,8.717802340688918,9.128295188300003))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9989810370706484,-0.04015379351891381,-0.020604864457016737,-0.7255155902941993,0.6875901657514937,-0.029101412369382684))
push(move(25.36676707575002,11.510116533900224,9.010113906994576))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub37 inherits .../COPOLYFF



DPDPoly_sub38 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.9627478712513232,0.2634140643525819,-0.06107018177719308))
push(move(25.218737072538154,14.187369561116283,11.379366955972067))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9627478712513232,0.2634140643525819,-0.06107018177719308,-0.8491137163138824,-0.13725810853105566,0.5100648080490404))
push(move(22.571008307522003,14.911805330981599,11.21141303802045))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8491137163138824,-0.13725810853105566,0.5100648080490404,0.14298081090125195,0.3961873693031219,0.9069686081219637))
push(move(21.1153615582822,13.524064339614926,13.844275252493336))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.14298081090125195,0.3961873693031219,0.9069686081219637,0.9989870520566644,-0.0357834868904336,-0.02728391264275554))
push(move(22.96633496201243,16.007221046354314,13.719084265485519))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9989870520566644,-0.0357834868904336,-0.02728391264275554,0.9452664547375025,0.32604505684909296,-0.01288217575819241))
push(move(25.787800679745306,13.356698642827356,13.716663567681067))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9452664547375025,0.32604505684909296,-0.01288217575819241,-0.10968123503149431,0.91428214958896,-0.38994637788413544))
push(move(27.645419549255916,17.621149471089506,13.65531728238967))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.10968123503149431,0.91428214958896,-0.38994637788413544,-0.9357540983263959,0.09958818180243743,-0.3382993667015039))
push(move(25.196988287810637,18.281599639307913,11.616166138218016))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9357540983263959,0.09958818180243743,-0.3382993667015039,-0.9927887318277467,0.02211308880244154,-0.1178199696972876))
push(move(20.445170139218813,18.387440261108097,11.052240448566607))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub38 inherits .../COPOLYFF



DPDPoly_sub39 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.011183260299618386,-0.9534776607202173,-0.30125617868613586))
push(move(20.56334380233718,15.949923611810025,8.13869182981941))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.011183260299618386,-0.9534776607202173,-0.30125617868613586,-0.3148224956570217,-0.933105188012421,-0.17378580014658512))
push(move(20.51711031887652,12.008086215919134,6.893247998454542))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3148224956570217,-0.933105188012421,-0.17378580014658512,-0.7392195515190687,-0.6731498595713649,0.020584489573428004))
push(move(18.24892674596643,9.090202364708551,6.86110580733746))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7392195515190687,-0.6731498595713649,0.020584489573428004,-0.8173577752840566,-0.0140129787269975,-0.5759599843825041))
push(move(15.712717386400843,7.633098539827841,7.027032306542672))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8173577752840566,-0.0140129787269975,-0.5759599843825041,-0.8700053081479262,-0.1323690960620397,-0.47494124500000073))
push(move(14.765117453820261,9.030475098417122,4.406201962079736))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8700053081479262,-0.1323690960620397,-0.47494124500000073,-0.5827475953508938,-0.7457307477412203,-0.32294100387852825))
push(move(11.413043199727724,6.978914042192068,4.679813741106424))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5827475953508938,-0.7457307477412203,-0.32294100387852825,-0.8065966502951774,-0.03212487115157596,-0.5902286306052037))
push(move(11.036451005936279,4.2589732673648095,2.339888354929143))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8065966502951774,-0.03212487115157596,-0.5902286306052037,-0.7443859573396092,0.6676315213194959,-0.012557796630341622))
push(move(8.148766540205377,6.848905484566796,2.291173096539736))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub39 inherits .../COPOLYFF



DPDPoly_sub40 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.9997587418998863,-0.021964904177008436,-3.1292991005896056e-05))
push(move(8.576679352799005,9.26310144991715,2.286820154151322))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9997587418998863,-0.021964904177008436,-3.1292991005896056e-05,0.999985972491213,0.00529576424837211,-9.849786000798428e-05))
push(move(13.864918025035156,9.146917763960994,2.2866546294119305))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.999985972491213,0.00529576424837211,-9.849786000798428e-05,0.908182797127414,-0.41856304097760233,-0.002997954203791746))
push(move(19.193862667409245,9.319328338456248,2.285774369645769))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.908182797127414,-0.41856304097760233,-0.002997954203791746,-0.9086830212255187,-0.41718673595955696,-0.015823851486744565))
push(move(19.213587795984463,6.681824292035837,2.26899841848696))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9086830212255187,-0.41718673595955696,-0.015823851486744565,-0.7566545302454897,0.02813916533409191,0.6532090853878856))
push(move(13.835245042778896,6.85912588737505,2.192459134865611))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7566545302454897,0.02813916533409191,0.6532090853878856,0.7234748224113338,0.5700171509875928,0.3894414319469322))
push(move(16.608063998363033,6.778720909967132,4.5183100247341095))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7234748224113338,0.5700171509875928,0.3894414319469322,0.1942820882635408,0.9809233022876038,0.006629118277697963))
push(move(18.250646783412382,10.337968056716766,4.5692389801711775))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.1942820882635408,0.9809233022876038,0.006629118277697963,0.015842134359825684,0.9998733272676467,0.001534991091459823))
push(move(18.332176541083065,15.483703361186688,4.577138638693879))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub40 inherits .../COPOLYFF



DPDPoly_sub41 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.5666155085876282,-0.2460721535283166,0.7863811802719596))
push(move(20.799842506650993,18.263310531602656,4.539876882601112))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5666155085876282,-0.2460721535283166,0.7863811802719596,0.7308616922651304,-0.594073414845709,0.33603268375696443))
push(move(22.63966844679662,17.46430322533003,7.093291803970025))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7308616922651304,-0.594073414845709,0.33603268375696443,0.7085459190688838,-0.41764342820272043,0.5688028194813297))
push(move(25.339074910288286,14.573642126012096,6.62690711408502))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7085459190688838,-0.41764342820272043,0.5688028194813297,-0.38286788572196256,0.7714723042728544,0.508175821761255))
push(move(25.22772374658355,15.938806770277905,9.170917419860826))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.38286788572196256,0.7714723042728544,0.508175821761255,-0.015149392459973599,0.7902864761636018,-0.612550227737294))
push(move(23.36591313297832,18.549529683606533,9.24586040070399))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.015149392459973599,0.7902864761636018,-0.612550227737294,0.8786674635940036,0.47617079441416943,0.034711136084244656))
push(move(25.159542440822683,19.49556747948473,6.414075884360887))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8786674635940036,0.47617079441416943,0.034711136084244656,0.7037459330938516,0.3318071838382329,-0.6282082890309594))
push(move(27.064972392360897,20.554137864864003,9.39198911794467))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7037459330938516,0.3318071838382329,-0.6282082890309594,0.08283463047181655,0.007469516227284341,-0.9965353131334223))
push(move(27.48505891131771,20.59201867693908,4.338172274345751))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub41 inherits .../COPOLYFF



DPDPoly_sub42 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.6732345838731368,0.7392562564969622,-0.01598068544406096))
push(move(24.70872767887836,21.44438755956343,2.338731435460754))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6732345838731368,0.7392562564969622,-0.01598068544406096,0.9587813907098574,0.283529926552295,-0.018682226251766496))
push(move(27.348442270998667,24.342969382803496,2.2760720748615344))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9587813907098574,0.283529926552295,-0.018682226251766496,0.48821313324928556,-0.25949920404489507,0.8332515224246406))
push(move(29.742671559303524,22.93302068544065,2.240643091836177))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.48821313324928556,-0.25949920404489507,0.8332515224246406,0.6918825679635944,-0.3259910783080086,0.6442269235383479))
push(move(30.196005201252685,22.82940847355332,7.1361136944764505))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6918825679635944,-0.3259910783080086,0.6442269235383479,0.27404868313536573,-0.6749445961812091,-0.6850891265795689))
push(move(31.953451567076957,21.891377793992962,4.299148492860971))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.27404868313536573,-0.6749445961812091,-0.6850891265795689,0.012252424156073995,-0.9758838434837651,-0.21794632855281942))
push(move(32.00830392632725,18.365963449258217,2.60558234341237))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.012252424156073995,-0.9758838434837651,-0.21794632855281942,-0.5360926163673614,-0.7515070480900505,0.384502097975259))
push(move(32.05702330418041,13.642072710092249,2.456812677842246))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5360926163673614,-0.7515070480900505,0.384502097975259,-0.7707583842628124,0.25356144278285564,0.5844981675099209))
push(move(29.288253111046753,14.552933207025553,4.55648637220052))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub42 inherits .../COPOLYFF



DPDPoly_sub43 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.030347358067548368,0.9907411294028438,0.13232933298365013))
push(move(32.16012155967783,15.791352505680688,6.173569881646555))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.030347358067548368,0.9907411294028438,0.13232933298365013,-0.018020630970815923,0.907137105880635,0.4204491978752242))
push(move(32.01419631389505,20.55533039441237,6.809875368171269))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.018020630970815923,0.907137105880635,0.4204491978752242,9.007637920895733e-06,-0.29559938691059423,0.955311992166404))
push(move(32.01308064275995,23.19321718150352,9.604261940824841))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(9.007637920895733e-06,-0.29559938691059423,0.955311992166404,0.0014693771829668,-0.9961615818904224,-0.08752110429071079))
push(move(32.0142415372991,19.071255365104026,11.60607839007326))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0014693771829668,-0.9961615818904224,-0.08752110429071079,-0.02169759674793937,-0.7378313217025075,-0.6746363131421956))
push(move(32.022941365421744,16.508158233249183,9.016923749876542))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.02169759674793937,-0.7378313217025075,-0.6746363131421956,-0.8550570554327,-0.4704768345715995,-0.21801142191694448))
push(move(31.85769219166219,13.747762079428755,6.738540542807331))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8550570554327,-0.4704768345715995,-0.21801142191694448,-0.554297524908821,0.43914323353633083,0.7070413526231761))
push(move(27.058119951954914,13.776371567107795,7.751057607919667))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.554297524908821,0.43914323353633083,0.7070413526231761,0.7704339854679645,0.4494127367312892,0.45217216422469125))
push(move(29.801596519074206,15.376707657471647,9.361219880421908))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub43 inherits .../COPOLYFF



DPDPoly_sub44 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.7647491689509549,0.1549384022120275,-0.6254220975539702))
push(move(27.460537625290304,16.003024740230508,6.877366466898229))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7647491689509549,0.1549384022120275,-0.6254220975539702,-0.02732432348204297,0.9016062436379373,-0.43169382990649424))
push(move(24.764521826572633,16.54923831868356,4.67252869219934))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.02732432348204297,0.9016062436379373,-0.43169382990649424,0.9536825253111072,0.2986373422985469,0.03613002492512242))
push(move(27.393358929816575,18.219684608072065,5.816018018281207))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9536825253111072,0.2986373422985469,0.03613002492512242,0.6560908111856462,0.6370891594639824,0.4045519130732633))
push(move(29.803482874454758,18.127144902213043,4.8634284763778455))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6560908111856462,0.6370891594639824,0.4045519130732633,-0.00899715234120042,0.7045117012687815,0.7096353387657047))
push(move(29.723801254860064,20.48263284134817,7.2529912006970765))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.00899715234120042,0.7045117012687815,0.7096353387657047,0.030703029387746075,-0.006063093902923999,0.9995101614684763))
push(move(29.737292048392092,23.310141667117556,10.084119145476244))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.030703029387746075,-0.006063093902923999,0.9995101614684763,-0.7093384554823222,-0.4228925914589964,0.5639156068624523))
push(move(29.903500107868044,20.447146733242175,13.102929567280265))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7093384554823222,-0.4228925914589964,0.5639156068624523,-0.9911484958774768,0.02778488933297928,0.12981779171041774))
push(move(25.15818085937929,20.580172380475982,13.724457893622901))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub44 inherits .../COPOLYFF



DPDPoly_sub45 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.0308490664103171,-0.9564645428995163,-0.29021356494421674))
push(move(27.66398663449446,20.13380845805214,11.459066376972595))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0308490664103171,-0.9564645428995163,-0.29021356494421674,0.5163290168034582,-0.5090763694026309,-0.6886549183173024))
push(move(27.51814315659941,15.611982300839433,10.087039260144518))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5163290168034582,-0.5090763694026309,-0.6886549183173024,0.4767773699744411,0.516896625787463,0.7109860882814728))
push(move(29.468488411406426,18.354653726718073,9.05230831507625))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.4767773699744411,0.516896625787463,0.7109860882814728,0.23227243201816572,-0.008828130292767532,0.9726107039509182))
push(move(29.988550380869796,18.290266210612224,13.77099172823345))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.23227243201816572,-0.008828130292767532,0.9726107039509182,-0.5223798681002634,-0.013606875069861326,0.8526043199247729))
push(move(31.203670829434117,18.28870351327703,16.318159791368448))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5223798681002634,-0.013606875069861326,0.8526043199247729,-0.8937431014350812,-0.33981848140344395,0.2928253205135439))
push(move(27.55342442915451,18.226836402865484,17.745491958389486))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8937431014350812,-0.33981848140344395,0.2928253205135439,-0.1627562729440377,-0.9824411245829601,0.09121311498646725))
push(move(25.172545011794455,15.995552368152044,18.294193338113676))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.1627562729440377,-0.9824411245829601,0.09121311498646725,0.5341697899879936,-0.8446079562106693,-0.03605600878936464))
push(move(26.766304107200067,13.47556408447738,18.186615947873456))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub45 inherits .../COPOLYFF



DPDPoly_sub46 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.5894052592125033,-0.7794681867192322,0.21220458596664177))
push(move(25.139036341597667,13.932117743208027,22.161595350020676))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5894052592125033,-0.7794681867192322,0.21220458596664177,-0.6365058051694489,-0.06482880473559954,0.7685425076481749))
push(move(23.09645798427159,11.230878106249033,22.896988337860524))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6365058051694489,-0.06482880473559954,0.7685425076481749,-0.27174051230209406,0.41071114594001207,0.8703295057473563))
push(move(22.579876554863723,13.67146455080359,25.25162699465787))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.27174051230209406,0.41071114594001207,0.8703295057473563,-0.40029144292945945,0.6617681839083757,0.6339003324530297))
push(move(21.593923293485943,13.501823058252201,27.709300877206733))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.40029144292945945,0.6617681839083757,0.6339003324530297,-0.188699171708894,0.4477293790116579,-0.8740314787044071))
push(move(21.086651272908533,16.140088350937376,27.616294087542663))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.188699171708894,0.4477293790116579,-0.8740314787044071,-0.34919630565586257,0.41130726331546436,-0.8419550316140646))
push(move(20.54276400799445,15.995924594964256,22.840459661150167))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.34919630565586257,0.41130726331546436,-0.8419550316140646,0.3708236472628936,0.6697771314426154,0.6433416019714151))
push(move(19.046062404046136,18.5436333186523,22.6961845738769))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.3708236472628936,0.6697771314426154,0.6433416019714151,0.7468854202502112,-0.0017121301790165948,0.664950552769088))
push(move(21.949623681016252,18.53697731124589,25.281219204052693))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub46 inherits .../COPOLYFF



DPDPoly_sub47 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.7625641419136892,0.6458116218496803,-0.0377263641413327))
push(move(22.887137794894375,15.833932579202163,23.058767951165812))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7625641419136892,0.6458116218496803,-0.0377263641413327,0.757578702649011,0.05831319445803231,-0.6501338943977163))
push(move(25.35544504263973,17.924329201956255,22.936653294938413))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.757578702649011,0.05831319445803231,-0.6501338943977163,0.9043534258789707,-0.2532124967498998,-0.3435524888436274))
push(move(26.055488185979215,16.077810385983792,20.339773909530443))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9043534258789707,-0.2532124967498998,-0.3435524888436274,0.7854991937090267,-0.6177172340638704,0.03763556061693105))
push(move(31.61342409800635,16.172139785879416,20.559325783282343))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7854991937090267,-0.6177172340638704,0.03763556061693105,0.05471354703194127,-0.7416794013185155,0.6685193291379031))
push(move(32.01638914325697,11.390152802948414,20.625378084691764))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.05471354703194127,-0.7416794013185155,0.6685193291379031,-0.0007789589668998553,-0.9387995035802037,0.34446318424541533))
push(move(32.014392686479056,10.736737426161232,25.45857407392334))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0007789589668998553,-0.9387995035802037,0.34446318424541533,0.0007303523874824783,-0.16933071462268662,-0.9855590168380381))
push(move(32.01456932777654,9.196915492342026,21.43011807969197))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0007303523874824783,-0.16933071462268662,-0.9855590168380381,0.0012803489576975805,-0.009030146691265471,-0.9999584077136812))
push(move(32.02123703585985,9.14988895186273,16.22260748814812))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub47 inherits .../COPOLYFF



DPDPoly_sub48 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.31436851286353457,0.9480960704910522,0.04781505243535143))
push(move(31.682609785599304,9.050912332341044,11.28137925428746))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.31436851286353457,0.9480960704910522,0.04781505243535143,0.037093587956493125,0.9992848558127535,-0.007337756864214904))
push(move(30.86902624395534,11.504578419388626,11.40512427998961))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.037093587956493125,0.9992848558127535,-0.007337756864214904,-0.2349321156267598,0.873431545071919,0.42652577544670767))
push(move(31.928260819530163,15.668642553256008,11.232785207183097))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2349321156267598,0.873431545071919,0.42652577544670767,-0.8206148710108295,-0.5655520033081056,0.08211068767260406))
push(move(29.65061996952755,16.034374066781023,13.617174682817774))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8206148710108295,-0.5655520033081056,0.08211068767260406,-0.39411468934726884,-0.9014700345844507,-0.17895638682934742))
push(move(28.992203101285636,13.645167981882436,11.526567012519566))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.39411468934726884,-0.9014700345844507,-0.17895638682934742,0.12004448032292156,-0.44280792559224275,0.8885440134155957))
push(move(27.554114495231318,11.238975890807371,12.665210559710925))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.12004448032292156,-0.44280792559224275,0.8885440134155957,0.25575663953035344,-0.023544975960939633,0.9664544352648705))
push(move(29.590526460731517,11.438133348412295,15.955230768589272))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.25575663953035344,-0.023544975960939633,0.9664544352648705,0.025016016411710053,-0.08145410192909124,0.9963631005822197))
push(move(29.712722258468137,11.04025429363657,20.822168090151944))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub48 inherits .../COPOLYFF



DPDPoly_sub49 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.7309126213913715,0.6813530366551771,0.039048422907498395))
push(move(28.544961986625236,8.996450001305053,18.06875747739784))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7309126213913715,0.6813530366551771,0.039048422907498395,-0.8466815753165152,0.06799972014778508,-0.5277370065471694))
push(move(25.60497930314525,11.737086939944149,18.22582370365442))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8466815753165152,0.06799972014778508,-0.5277370065471694,-0.08556511557301598,-0.23598520771950404,-0.9679822274889963))
push(move(25.147200165413533,9.269335179992037,15.950931006665677))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.08556511557301598,-0.23598520771950404,-0.9679822274889963,0.2956353438747704,-0.015603298445475098,-0.9551734295559459))
push(move(25.19807305550008,10.614855587484058,13.622569055577063))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.2956353438747704,-0.015603298445475098,-0.9551734295559459,0.6207942837021363,-0.4262186341833796,0.6579909826111647))
push(move(26.66132368101535,9.189421456593475,11.058922723037325))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6207942837021363,-0.4262186341833796,0.6579909826111647,0.7561146066330112,0.09850196536660992,0.6469838208604))
push(move(27.345056400052847,9.14080156869929,15.89819516493394))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7561146066330112,0.09850196536660992,0.6469838208604,0.8821010422719381,0.41343202197052603,-0.2257691618271261))
push(move(29.56612257740788,9.567840809664245,13.544469057326408))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8821010422719381,0.41343202197052603,-0.2257691618271261,0.7766904811246994,0.5424774927745959,0.32010945997154067))
push(move(32.238300175532665,11.434216462395385,14.645794937675955))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub49 inherits .../COPOLYFF



DPDPoly_sub50 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.03184879783205086,0.08128285246333374,-0.996182087759099))
push(move(32.034859209824965,13.327516405424015,18.51608097133214))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.03184879783205086,0.08128285246333374,-0.996182087759099,-0.7989253246954907,0.1385587082910898,-0.5852519200454702))
push(move(31.87816164770609,13.727431808518288,13.61481890795678))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7989253246954907,0.1385587082910898,-0.5852519200454702,-0.47635350672577287,0.007519507852802806,0.8792216976574854))
push(move(29.74418245758524,13.72479159760013,16.838048086390362))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.47635350672577287,0.007519507852802806,0.8792216976574854,-0.3365616395593613,0.3243250886729517,0.8840472270384635))
push(move(28.172423786600653,13.785928963579755,20.45462398404369))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3365616395593613,0.3243250886729517,0.8840472270384635,0.3574855627376359,0.4235098246690369,0.8323722129209729))
push(move(27.46527997368872,15.920838809440468,22.824046443830763))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.3574855627376359,0.4235098246690369,0.8323722129209729,0.7763197778783556,0.6293123472345746,0.0359662632617124))
push(move(29.970553301026428,15.916156292356037,24.64140297332432))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7763197778783556,0.6293123472345746,0.0359662632617124,0.9918082690502991,-0.10147698140261677,0.07758079458772403))
push(move(30.937066460670863,18.735192076583896,22.984891485187962))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9918082690502991,-0.10147698140261677,0.07758079458772403,0.27418558295702417,-0.8248405576152482,0.49442928777680983))
push(move(31.941164990395897,15.714532922200627,24.79554730288464))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub50 inherits .../COPOLYFF



DPDPoly_sub51 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.7821917510187831,0.5942533118994955,0.18718724832277162))
push(move(29.567861554220237,18.423890982993576,25.170225799904237))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7821917510187831,0.5942533118994955,0.18718724832277162,0.44565045959822014,0.08890935003043335,0.890781003017611))
push(move(32.241966897871414,20.45548484059064,25.81016916462436))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.44565045959822014,0.08890935003043335,0.890781003017611,-0.05249646458567332,-0.9411273368003481,0.333951279579955))
push(move(32.01916609140556,18.912937697596515,30.069975070451793))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.05249646458567332,-0.9411273368003481,0.333951279579955,-0.6372650707489144,-0.7702396922951854,0.0249809130417444))
push(move(31.997578017754982,16.07421730756964,27.36482584244315))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6372650707489144,-0.7702396922951854,0.0249809130417444,-0.697656579889042,0.1705974233192685,0.6958245581282333))
push(move(29.627381197724556,16.02207211417435,30.16373349718211))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.697656579889042,0.1705974233192685,0.6958245581282333,-0.5176546951478912,0.5785255795332257,-0.6303505139341835))
push(move(27.22185360218232,17.24202150130231,32.12800937285087))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5176546951478912,0.5785255795332257,-0.6303505139341835,-0.6542839879516779,0.3526062232280423,-0.6690151825264541))
push(move(27.61850179489485,18.267175136764312,27.717511766992402))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6542839879516779,0.3526062232280423,-0.6690151825264541,-0.7244668287249002,0.02264081689393259,0.6889377384696396))
push(move(25.178095643890927,18.343441967240118,30.0382362335345))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub51 inherits .../COPOLYFF



DPDPoly_sub52 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.9994369980264524,0.03233984933815749,0.00893426665475542))
push(move(24.44475112100575,15.756879539999439,31.96420079643628))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9994369980264524,0.03233984933815749,0.00893426665475542,-0.9733311474524045,-0.229327518576981,0.005946984303830887))
push(move(19.059901598996888,15.931122861583784,32.01233757906526))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9733311474524045,-0.229327518576981,0.005946984303830887,0.5564771231735927,-0.8098821234222875,-0.18553748285844726))
push(move(15.971892369389176,13.760580872431625,32.015969362701036))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5564771231735927,-0.8098821234222875,-0.18553748285844726,0.9376572594709723,-0.17719065469002748,-0.2990022335232718))
push(move(20.613840424059656,13.669561293458765,31.494232007224493))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9376572594709723,-0.17719065469002748,-0.2990022335232718,0.9260861512930775,-0.3043589389779416,-0.22300241399455045))
push(move(22.91569534649145,12.448398853763637,29.80171401691453))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9260861512930775,-0.3043589389779416,-0.22300241399455045,0.8650980991505847,0.25734640086215566,-0.4305555815563652))
push(move(27.213113544426143,11.500705013580381,29.905120849049595))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8650980991505847,0.25734640086215566,-0.4305555815563652,0.7409225533069662,0.6135539934697939,0.27310303385051166))
push(move(27.667188350418577,13.861856615933004,27.436916503689684))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7409225533069662,0.6135539934697939,0.27310303385051166,0.5374146093569212,-0.04023674477315015,0.8423577280584587))
push(move(29.865649407031206,13.697255738159168,30.882841918871854))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub52 inherits .../COPOLYFF



DPDPoly_sub53 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.5993585447390142,-0.8004473862733331,0.007301825560826171))
push(move(27.351076721232992,12.27105219167789,31.980155339917598))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5993585447390142,-0.8004473862733331,0.007301825560826171,0.7274022748065031,-0.22797909273943823,-0.6472337011312276))
push(move(29.706508538351095,9.125357084622706,32.0088509385705))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7274022748065031,-0.22797909273943823,-0.6472337011312276,0.8699014606907473,0.48720803685961783,0.0768100091622282))
push(move(30.29591184728953,11.348095440567663,29.35987684495986))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8699014606907473,0.48720803685961783,0.0768100091622282,-0.028916251883487874,-0.8659966624642097,0.4992130116271615))
push(move(31.909428176966003,10.359152176352783,32.20336294397776))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.028916251883487874,-0.8659966624642097,0.4992130116271615,-0.6872069300035026,-0.5831789097859855,-0.43318471179854723))
push(move(30.144455279143504,6.812207350671746,31.974637908030697))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6872069300035026,-0.5831789097859855,-0.43318471179854723,-0.13357933517302556,0.6471468033520142,-0.7505714996760814))
push(move(27.71371047186197,6.798573884425697,29.558568944498898))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.13357933517302556,0.6471468033520142,-0.7505714996760814,0.05991944920401183,0.4896378263929835,-0.8698646208303005))
push(move(29.609964659610245,9.401634041593278,28.971378269507756))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.05991944920401183,0.4896378263929835,-0.8698646208303005,-0.3762361446362232,-0.017423437499995482,-0.9263599663710401))
push(move(28.023267987503864,9.328154364821057,25.064650282927186))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub53 inherits .../COPOLYFF



DPDPoly_sub54 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.8304910358350357,-0.00011936052716874297,-0.5570319785709918))
push(move(27.439130602532973,4.571568240795558,25.151128958957294))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8304910358350357,-0.00011936052716874297,-0.5570319785709918,0.9632996977133643,0.04977583771320514,0.2637727399965541))
push(move(29.81535478263886,4.571226723116775,23.55733348199379))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9632996977133643,0.04977583771320514,0.2637727399965541,0.06732887086317094,-0.5208821089122087,0.850969242548437))
push(move(32.18399588182788,4.81674598212968,26.450377903605613))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.06732887086317094,-0.5208821089122087,0.850969242548437,-0.8354821649446404,-0.4513287753225439,-0.31348347424588285))
push(move(30.11879455371145,2.2236996391509924,27.392507142836493))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8354821649446404,-0.4513287753225439,-0.31348347424588285,-0.7378612263322113,0.14888579760844453,-0.658326537476671))
push(move(27.542330300540016,2.3093109581896205,24.708766276496767))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7378612263322113,0.14888579760844453,-0.658326537476671,-0.8508205299744884,0.5121388012114999,0.11755115510950308))
push(move(24.861898536790065,3.284437252800319,22.70225641656157))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8508205299744884,0.5121388012114999,0.11755115510950308,0.11851012167066015,-0.3688542383392356,0.9219012430411337))
push(move(23.460803978283057,4.766125202971112,25.272678543406375))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.11851012167066015,-0.3688542383392356,0.9219012430411337,0.5707168994803155,-0.8205270153695637,-0.03190043410819333))
push(move(25.179972711858287,2.294454237626217,25.176584965388585))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub54 inherits .../COPOLYFF



DPDPoly_sub55 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.8256054613274486,0.4466218784777615,0.34482534693854267))
push(move(22.49417370650508,2.913139299182363,27.40598169902824))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8256054613274486,0.4466218784777615,0.34482534693854267,0.4908953450204798,-0.07597666090627904,0.8678993646931401))
push(move(25.343672343756168,4.45461218629563,28.59611355039847))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.4908953450204798,-0.07597666090627904,0.8678993646931401,0.6430126916846786,-0.6344521549156862,0.4289582047883763))
push(move(25.19663454770611,2.4948750947502303,32.18391261847628))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6430126916846786,-0.6344521549156862,0.4289582047883763,0.9962820166771601,-0.07054863337730412,-0.04944728075724371))
push(move(27.559011576656992,2.2687661394614014,30.073981643254715))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9962820166771601,-0.07054863337730412,-0.04944728075724371,0.855534942795475,0.5167216594059169,0.032537491555730505))
push(move(31.000147471703674,2.0839172547792777,31.895873761879923))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.855534942795475,0.5167216594059169,0.032537491555730505,-0.5140770078376921,0.10093906849060734,-0.8517840891123138))
push(move(31.930038548206586,4.908756859965577,30.24021945080931))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5140770078376921,0.10093906849060734,-0.8517840891123138,-0.8006198795059264,-0.10872089592302385,0.5892262513921209))
push(move(29.682186659402753,2.3426989833384773,29.712119124197496))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8006198795059264,-0.10872089592302385,0.5892262513921209,-0.1844074095005195,0.6223726538739194,0.7606879695586373))
push(move(29.038225263631404,4.516060476589315,32.3684857417334))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub55 inherits .../COPOLYFF



DPDPoly_sub56 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.7720340928605771,0.6045120656300724,-0.19628683595342994))
push(move(27.257353595876594,4.636203125727609,28.12204473305601))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7720340928605771,0.6045120656300724,-0.19628683595342994,-0.6886293617451964,0.6583736824651995,-0.30386460205100585))
push(move(29.868868328018223,6.681050859460269,27.458076692579304))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6886293617451964,0.6583736824651995,-0.30386460205100585,-0.860181707489039,0.4707862362127545,-0.19608097789910606))
push(move(25.007478713045288,6.787227310844617,27.12926490995423))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.860181707489039,0.4707862362127545,-0.19608097789910606,0.6656102875552374,0.555532687247691,0.4983436349548304))
push(move(24.935752513468238,9.380995541977478,26.333558274453292))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6656102875552374,0.555532687247691,0.4983436349548304,0.05386752196980282,-0.5981844725912966,0.7995458878810553))
push(move(27.777890632945965,9.099472790550692,29.203477361742575))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.05386752196980282,-0.5981844725912966,0.7995458878810553,-0.6450560924531473,0.26495721378973425,0.7167288974569519))
push(move(25.169297413001672,6.78754168619941,29.800022986942373))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6450560924531473,0.26495721378973425,0.7167288974569519,-0.3927732513509673,0.867258998116744,0.3059264669961251))
push(move(25.30934683545509,10.11342877725214,31.946303443070285))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3927732513509673,0.867258998116744,0.3059264669961251,-0.7245527216485512,0.6892190846168363,-0.0006379275877059176))
push(move(22.416997669767632,12.864729248295465,31.943756893632347))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub56 inherits .../COPOLYFF



DPDPoly_sub57 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.6314474818329997,0.7736122181678518,-0.05289814352299658))
push(move(25.084141782453326,13.73891944000434,29.881011188166266))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6314474818329997,0.7736122181678518,-0.05289814352299658,-0.8251904699006118,0.5634741772200269,-0.03946568118531925))
push(move(27.093743436873833,16.200964880421814,29.71266116730467))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8251904699006118,0.5634741772200269,-0.03946568118531925,-0.9720880680687549,-0.23461022272878299,0.0016826495494933))
push(move(21.833434757977365,15.958636623869257,29.72554239431277))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9720880680687549,-0.23461022272878299,0.0016826495494933,-0.7801612564073747,-0.6255780319600475,-0.0007347991973004206))
push(move(18.40374168348178,14.10366185423898,29.727703248383282))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7801612564073747,-0.6255780319600475,-0.0007347991973004206,-0.0651111712856268,-0.9883208724611687,-0.13777658883644997))
push(move(16.11935495596927,11.376759777710749,29.720160556625572))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0651111712856268,-0.9883208724611687,-0.13777658883644997,0.9082484737924247,-0.15862822391581993,-0.3871973610848141))
push(move(18.062578621793232,8.925156105963792,29.005795134178868))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9082484737924247,-0.15862822391581993,-0.3871973610848141,0.5588676347219675,0.06682474531470717,-0.8265599919388172))
push(move(20.776170655141794,10.563433441605206,27.73490343612748))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5588676347219675,0.06682474531470717,-0.8265599919388172,-0.029820615306167732,-0.4518257082093823,-0.8916076829547016))
push(move(20.68876919375568,9.23917414031746,25.121683900807863))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub57 inherits .../COPOLYFF



DPDPoly_sub58 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.7326368296089708,0.04685565732916292,0.6790050244856572))
push(move(17.920313709075593,6.643162298619692,25.062863644960018))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7326368296089708,0.04685565732916292,0.6790050244856572,-0.9990951439899125,0.02643033405185687,-0.03332162507566395))
push(move(14.876074040142202,6.837856101866682,27.884253380509584))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9990951439899125,0.02643033405185687,-0.03332162507566395,-0.819596934626533,-0.5576435294279565,-0.1315087785584006))
push(move(11.875125654273244,6.803083343833314,24.861245719894775))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.819596934626533,-0.5576435294279565,-0.1315087785584006,-0.2130020475123741,-0.5457502960974582,-0.8104238039847257))
push(move(11.424544943590597,4.489478764167921,27.330436795222923))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2130020475123741,-0.5457502960974582,-0.8104238039847257,0.615138248429513,0.3837337663845431,-0.6887331354417353))
push(move(11.302144119235702,5.334999604464807,22.681182754954705))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.615138248429513,0.3837337663845431,-0.6887331354417353,0.8460103672984962,-0.5328866315176373,0.01727125858904051))
push(move(15.436570787684792,6.992249144512436,22.83841382944095))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8460103672984962,-0.5328866315176373,0.01727125858904051,0.5009269575673893,-0.7520249496335996,0.42840478324927833))
push(move(16.02236907930229,2.3618152603917824,22.77754590726935))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5009269575673893,-0.7520249496335996,0.42840478324927833,0.6810260593742687,-0.024975070103136744,0.7318331451406791))
push(move(18.583484655366306,2.267892215636043,25.529730263947034))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub58 inherits .../COPOLYFF



DPDPoly_sub59 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.31508287520947204,0.7719343520989534,0.5521232994533931))
push(move(14.605524546267233,2.0532617437415395,27.433940088674678))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.31508287520947204,0.7719343520989534,0.5521232994533931,0.4883578695918858,0.8688593931335855,-0.08117848342517794))
push(move(13.537075383537346,4.6708988071149244,29.306195686927854))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.4883578695918858,0.8688593931335855,-0.08117848342517794,-0.01714876720393414,-0.21382499171371694,-0.9767214509275477))
push(move(16.015492154912586,4.561798366299467,27.199564768289022))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.01714876720393414,-0.21382499171371694,-0.9767214509275477,-0.46921742215310047,-0.13298692802520629,-0.8730117340118733))
push(move(13.468450612835051,3.8152284926093105,25.39761818903409))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.46921742215310047,-0.13298692802520629,-0.8730117340118733,0.033286176148917185,0.10710343631584565,-0.9936905375451257))
push(move(13.703163512924831,3.906431646812415,22.897316083481293))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.033286176148917185,0.10710343631584565,-0.9936905375451257,-0.35940905708768,0.09534183631408133,-0.9282968619636737))
push(move(13.702436520763948,4.568114455735573,18.41244868240052))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.35940905708768,0.09534183631408133,-0.9282968619636737,-0.8496018398612092,0.00018475672908485174,0.5274245723981766))
push(move(11.185842548053587,4.574211155007192,16.395473388751256))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8496018398612092,0.00018475672908485174,0.5274245723981766,-0.22494855954953483,-0.0012452756496262793,0.9743698449999085))
push(move(10.221274971492624,4.5688714786033255,20.573519969479346))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub59 inherits .../COPOLYFF



DPDPoly_sub60 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.7006374497880891,-0.7087893633291684,0.08200489245084687))
push(move(9.35002074951257,4.522394182714174,24.898726680917544))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7006374497880891,-0.7087893633291684,0.08200489245084687,0.6933254655207307,-0.6487262622714344,0.3137738604469729))
push(move(7.019589170815021,2.1648480431996293,25.171487994251496))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6933254655207307,-0.6487262622714344,0.3137738604469729,0.180786535169957,0.057407759604766295,0.9818454959098216))
push(move(11.75843660162464,2.2689033022624185,25.98868800075932))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.180786535169957,0.057407759604766295,0.9818454959098216,-0.6303633018506115,0.0018572148270033003,0.7762980474232052))
push(move(7.396755110353954,2.284614991373074,27.219863325958375))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6303633018506115,0.0018572148270033003,0.7762980474232052,-0.7433084098176669,0.068101732318281,0.6654733367683341))
push(move(6.89936994100516,2.283219380976085,31.97267207766238))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7433084098176669,0.068101732318281,0.6654733367683341,-0.3987932015809752,0.9169891502575455,-0.0097406715754365))
push(move(2.0320675030195106,2.7761263406063064,32.02279104158629))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3987932015809752,0.9169891502575455,-0.0097406715754365,0.7063485681464137,0.6448316680317704,-0.29199969209037885))
push(move(6.025174946210043,4.293352257511101,31.9513195413016))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7063485681464137,0.6448316680317704,-0.29199969209037885,0.21964099115194743,0.8102919617215215,-0.5433090941400469))
push(move(6.79171644664521,7.1212506970099385,30.055184552846416))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub60 inherits .../COPOLYFF



DPDPoly_sub61 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.9103178074289113,-0.08673068892485089,-0.40472123378498476))
push(move(4.490719633600957,4.603027519953985,29.534324187185987))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9103178074289113,-0.08673068892485089,-0.40472123378498476,-0.6051416066127948,0.6151063625564407,0.505418439205249))
push(move(2.026980852530633,4.368294375035485,28.438962335466346))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6051416066127948,0.6151063625564407,0.505418439205249,0.3869805592510876,0.7412214561520156,0.548485915682072))
push(move(2.3394171615023986,6.789755095633532,31.33110683413125))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.3869805592510876,0.7412214561520156,0.548485915682072,0.7423308041722237,0.2274577145253136,-0.6302443694948336))
push(move(4.54127062157409,9.18415780601808,32.00258457254385))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7423308041722237,0.2274577145253136,-0.6302443694948336,0.9132828971116035,-0.12009174114494636,-0.38922014792686604))
push(move(4.458062613274671,7.438929627582186,29.53236110051688))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9132828971116035,-0.12009174114494636,-0.38922014792686604,0.478850611788101,0.8734548870896293,0.08819666552316086))
push(move(7.056780676565036,8.853381894931937,30.930532091531006))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.478850611788101,0.8734548870896293,0.08819666552316086,0.4299136732902987,0.4939694584034126,-0.755756844284378))
push(move(6.694459860110344,11.518264720061545,29.94426989858555))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.4299136732902987,0.4939694584034126,-0.755756844284378,0.6751454176989068,-0.08656229979082566,-0.7325883108643572))
push(move(9.106897189667494,11.208959320256795,27.32657696607636))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub61 inherits .../COPOLYFF



DPDPoly_sub62 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.007379723457141524,-0.9928239454281836,0.11935724974257447))
push(move(9.142973288483406,9.410291228855197,24.00954263782901))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.007379723457141524,-0.9928239454281836,0.11935724974257447,0.0024378882466044058,-0.8147890452265948,0.5797524199860066))
push(move(9.163439873991067,6.656838976725704,24.340562542843426))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0024378882466044058,-0.8147890452265948,0.5797524199860066,-0.5526322211823321,0.23347758844572378,0.8000536505789168))
push(move(9.15740686489272,4.586312952521182,27.44198088187388))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5526322211823321,0.23347758844572378,0.8000536505789168,-0.5093874588148379,0.6994071967968802,-0.5013521615300883))
push(move(6.922419849095392,7.603631311692701,27.584919609288686))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5093874588148379,0.6994071967968802,-0.5013521615300883,-0.005563113301800427,-0.47637183282026774,-0.8792263239154354))
push(move(6.867488768042539,7.730452387635558,25.188184939873626))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.005563113301800427,-0.47637183282026774,-0.8792263239154354,0.41582719540870977,-0.83967133155754,-0.34934195070004775))
push(move(6.892093155507905,5.006743234116758,22.791915067963558))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.41582719540870977,-0.83967133155754,-0.34934195070004775,0.7180556166407748,-0.5129318381737689,-0.4704222154600219))
push(move(9.54783787705119,2.3180783768682476,22.936388047710558))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7180556166407748,-0.5129318381737689,-0.4704222154600219,0.3871562739168018,0.004208441398951642,-0.9220045057307746))
push(move(10.639357514510655,2.3299433439100583,20.336957038496134))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub62 inherits .../COPOLYFF



DPDPoly_sub63 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.6014496065027438,0.7989048705869299,0.0030624483955181115))
push(move(6.818804378481775,3.7601664378010775,20.56882775164058))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6014496065027438,0.7989048705869299,0.0030624483955181115,0.28931582554406854,0.9541314189357333,0.0770038212651724))
push(move(9.156365021587906,6.865145745924184,20.580730093521776))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.28931582554406854,0.9541314189357333,0.0770038212651724,-0.0011336504642434138,0.9583599965544182,0.2855605572218276))
push(move(9.163817784475777,11.493759870779618,21.19297263842656))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0011336504642434138,0.9583599965544182,0.2855605572218276,-0.010959420744103852,0.9784753721255123,-0.20607240776191738))
push(move(9.146462542308809,15.236456222234832,23.07511225981293))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.010959420744103852,0.9784753721255123,-0.20607240776191738,0.0580464344149205,0.1935312981270021,-0.9793754377647991))
push(move(9.136027046205168,13.974963358254632,20.67041725136501))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0580464344149205,0.1935312981270021,-0.9793754377647991,0.5882286656034679,0.8045604165842937,0.08166745390956824))
push(move(9.431116113830752,16.185513227516946,18.272358756852597))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5882286656034679,0.8045604165842937,0.08166745390956824,0.5700673135515729,0.6381149103791698,-0.5175254768336307))
push(move(11.37267955032803,17.034185350819804,20.98094566654311))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5700673135515729,0.6381149103791698,-0.5175254768336307,0.024576986634771498,0.30313016217346983,-0.9526321832211214))
push(move(11.490798685439053,18.4910552720223,16.402512548066113))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub63 inherits .../COPOLYFF



DPDPoly_sub64 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.17607402988790463,0.7679962693941373,0.6157756622307516))
push(move(13.751369955341788,16.006840127270095,16.03623521684254))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.17607402988790463,0.7679962693941373,0.6157756622307516,0.9186489989886257,-0.0908416989562155,0.3844890146518419))
push(move(14.366391841654599,18.68943059552194,18.18712316761973))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9186489989886257,-0.0908416989562155,0.3844890146518419,0.8609543128995566,-0.40113688637706696,-0.3128048424934695))
push(move(15.773754248583279,15.806854250898725,16.88267879323772))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8609543128995566,-0.40113688637706696,-0.3128048424934695,0.7742359235451183,0.3653155095616506,-0.5168203877228038))
push(move(20.422468266800912,15.867776061191073,15.986808930367848))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7742359235451183,0.3653155095616506,-0.5168203877228038,0.8360442180453965,0.5412009073438451,0.09017562510490562))
push(move(20.90427411158797,18.227638951107107,13.45793811125474))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.8360442180453965,0.5412009073438451,0.09017562510490562,0.2710335752707287,-0.884004929945656,0.3808885465693898))
push(move(22.804676506098293,17.409863468486222,16.24375361400064))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.2710335752707287,-0.884004929945656,0.3808885465693898,0.0009468767736283921,-0.9576280288397351,-0.2880063572300083))
push(move(22.880333316628032,11.782510972497711,16.23493102732044))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0009468767736283921,-0.9576280288397351,-0.2880063572300083,-0.018398895623280818,-0.7331326364904611,-0.679836758312162))
push(move(22.812897594084255,9.095429634876485,13.743190003984765))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub64 inherits .../COPOLYFF



DPDPoly_sub65 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.011013294965162181,0.9339451458453437,-0.3572466541283908))
push(move(20.645472175401604,9.01432889975068,10.511267757563072))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.011013294965162181,0.9339451458453437,-0.3572466541283908,0.0038955748763907978,0.9900199122254213,0.14087369482465986))
push(move(20.596967132923172,13.127634601182656,8.937872675656257))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0038955748763907978,0.9900199122254213,0.14087369482465986,-0.7609218985720587,0.515217998379055,0.3943960933120073))
push(move(20.672237900810106,15.81656013914244,11.479183085236455))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7609218985720587,0.515217998379055,0.3943960933120073,-0.5340213531812825,0.8444562228218154,0.041411134782133985))
push(move(15.777476969485301,16.39089733533941,11.435879495781359))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5340213531812825,0.8444562228218154,0.041411134782133985,0.13970011033585086,0.8619196731205665,-0.48742010243719636))
push(move(18.457705005708366,19.318435247266528,11.650910900336381))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.13970011033585086,0.8619196731205665,-0.48742010243719636,-0.4471762509773697,-0.16801962968418202,-0.8785230814284931))
push(move(16.48367943071486,20.748014828493716,8.9719066673678))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4471762509773697,-0.16801962968418202,-0.8785230814284931,0.7854312967155385,-0.018894166472713546,-0.6186603984522114))
push(move(15.986397370190012,18.38987924088662,6.795776500045474))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7854312967155385,-0.018894166472713546,-0.6186603984522114,0.814093067153206,0.5806633416212865,0.009086347466764176))
push(move(19.20087485003404,20.682650559453002,6.831654289065455))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub65 inherits .../COPOLYFF



DPDPoly_sub66 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.22745612850582958,-0.5693036848680345,0.7900360903153839))
push(move(19.066020383297932,18.03482312512817,6.62907831599121))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.22745612850582958,-0.5693036848680345,0.7900360903153839,-0.14628792403356558,-0.9797231878693555,0.1369025873862784))
push(move(18.301000702457397,16.120042784145088,9.286263952781333))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.14628792403356558,-0.9797231878693555,0.1369025873862784,-0.6513641461922519,-0.6858825854678939,-0.3244839410619819))
push(move(18.389060883812142,13.501072829085393,7.262606391856583))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6513641461922519,-0.6858825854678939,-0.3244839410619819,-0.5894390011412066,0.7079828290383433,0.3890012567081507))
push(move(15.789996932425867,13.475970696393842,8.03538085753519))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5894390011412066,0.7079828290383433,0.3890012567081507,-0.5834405688536856,0.7135813142427149,-0.3878128550980842))
push(move(16.20959803442452,16.1188539241707,8.700946552109075))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5834405688536856,0.7135813142427149,-0.3878128550980842,-0.4059551139293381,0.43227260898288994,-0.8051961481513332))
push(move(13.742627744298932,15.980020764208096,6.6744948775846416))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4059551139293381,0.43227260898288994,-0.8051961481513332,0.31151967539076386,-0.015393908676623607,-0.9501150032601784))
push(move(13.771452119056288,18.71506138591647,3.864979145064352))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.31151967539076386,-0.015393908676623607,-0.9501150032601784,0.40516759766227206,-0.7752182556500973,-0.4846399425464266))
push(move(15.239582168563183,15.906047973657111,2.108880022259404))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub66 inherits .../COPOLYFF



DPDPoly_sub67 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.6964571833110964,0.1573681617974363,-0.7001304546060468))
push(move(16.023684570118146,18.165256033652312,4.7006585790733455))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.6964571833110964,0.1573681617974363,-0.7001304546060468,0.41213772147752764,0.9028587571810702,0.122427787355507))
push(move(18.470467574658546,18.718119516100934,2.2409706925230832))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.41213772147752764,0.9028587571810702,0.122427787355507,-0.9128193565523854,0.4048865417029689,-0.05317622261029))
push(move(17.100370300237078,20.523921813345513,5.020494024232657))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9128193565523854,0.4048865417029689,-0.05317622261029,-0.8128519357631196,0.5717612210151952,-0.1111792996441438))
push(move(14.162348468597937,20.629011779259535,1.9900015396769304))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8128519357631196,0.5717612210151952,-0.1111792996441438,-0.8169797025995589,-0.14263002865696914,0.5587493538838755))
push(move(13.586210367966794,22.995786965307296,4.539838417820741))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8169797025995589,-0.14263002865696914,0.5587493538838755,-0.33357263580206925,0.00581432471735851,-0.9427064708975648))
push(move(11.536527258906023,20.17059040943267,3.7858550959666473))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.33357263580206925,0.00581432471735851,-0.9427064708975648,0.9108661352524255,0.3582728787886807,-0.20484976928173856))
push(move(12.805078932821429,23.00940244608542,2.3322902573955586))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9108661352524255,0.3582728787886807,-0.20484976928173856,0.9991577203958203,-0.04015907040679388,-0.008432012659499137))
push(move(18.20234528044746,22.79247052949805,2.286742074920581))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub67 inherits .../COPOLYFF



DPDPoly_sub68 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.4690517339776999,0.8187323951396315,0.33116119338086025))
push(move(15.361416925452318,24.992783366597216,2.3169681314782977))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4690517339776999,0.8187323951396315,0.33116119338086025,-0.8291084353078354,0.017096412957398176,0.5588263730045164))
push(move(13.698860538630568,27.894784732403867,3.4907707575848623))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8291084353078354,0.017096412957398176,0.5588263730045164,-0.8481568758184347,-0.48727327283870947,-0.20783327832415316))
push(move(11.760799072105835,25.0670289623494,4.74381621295253))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8481568758184347,-0.48727327283870947,-0.20783327832415316,-0.9469248259922312,-0.09672562306386735,-0.306557543966038))
push(move(8.910579614865393,25.14387698937251,2.3174452204160096))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9469248259922312,-0.09672562306386735,-0.306557543966038,-0.4649988393512212,-0.8852889185228424,-0.0062936589257124795))
push(move(4.18663863559772,24.29335045345692,2.2917567069746902))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4649988393512212,-0.8852889185228424,-0.0062936589257124795,0.30303223531351625,-0.9529794565969292,0.0012726606441447127))
push(move(6.9979489189722965,21.50251142669018,2.291558176767483))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.30303223531351625,-0.9529794565969292,0.0012726606441447127,0.28966921762902814,-0.8833637513808764,0.36845654710493586))
push(move(6.802116635478614,16.06816345152299,2.3027410694555694))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.28966921762902814,-0.8833637513808764,0.36845654710493586,0.6456273594936549,-0.17323284875893546,0.7437443732789611))
push(move(8.970769221054983,15.486276919232196,4.800967227938475))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub68 inherits .../COPOLYFF



DPDPoly_sub69 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.4782500406733255,-0.3402147152083761,-0.8096485942380472))
push(move(11.700883164210875,12.551746468039733,4.826154008172937))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.4782500406733255,-0.3402147152083761,-0.8096485942380472,0.9265291431733952,-0.13666320594516926,-0.3505237723623927))
push(move(13.25174246091271,11.44850525720191,2.2006423664638763))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9265291431733952,-0.13666320594516926,-0.3505237723623927,0.7892723989030772,0.6139670203273099,0.009673586728104658))
push(move(18.407677729334807,11.562493130852538,2.2888447948059953))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7892723989030772,0.6139670203273099,0.009673586728104658,0.24171630535219762,0.9699517576204596,-0.02769143578553252))
push(move(19.16547298709433,16.048736451431534,2.2731230274006626))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.24171630535219762,0.9699517576204596,-0.02769143578553252,0.1965264468854608,0.9273444316931317,0.31844883526607315))
push(move(20.54300733595917,20.13107811739894,2.0442177614884542))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.1965264468854608,0.9273444316931317,0.31844883526607315,0.4091258428060979,0.7762467069727029,0.47964267393783316))
push(move(20.591057744397833,22.775607605635525,4.583121568212596))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.4091258428060979,0.7762467069727029,0.47964267393783316,0.4553923447275737,0.8757404291311541,0.16030131985952092))
push(move(23.10046898654991,24.983426653643605,5.042482882482476))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.4553923447275737,0.8757404291311541,0.16030131985952092,0.00760671887772512,0.9870611727431192,0.16016360101750202))
push(move(23.120947089670988,27.640701203572984,5.473660475686836))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub69 inherits .../COPOLYFF



DPDPoly_sub70 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.05156873974073169,0.9962140592270324,-0.06998723655032577))
push(move(20.491813135045575,27.31664713787391,2.6120176151587753))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.05156873974073169,0.9962140592270324,-0.06998723655032577,0.7989946048158943,0.5991004831673639,-0.051828877507853754))
push(move(20.739426013324262,32.100076630762274,2.2759663334690354))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7989946048158943,0.5991004831673639,-0.051828877507853754,0.45807382243478817,-0.8889105480308778,0.002531955652608795))
push(move(25.52824266686744,31.0930523197939,2.285316423801069))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.45807382243478817,-0.8889105480308778,0.002531955652608795,-0.6389956908674469,-0.7692102939235689,0.00017542762370929808))
push(move(22.664540065951954,28.364315922046288,2.286607202186569))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6389956908674469,-0.7692102939235689,0.00017542762370929808,0.0754711567313791,-0.9971479852110582,9.547512647116127e-06))
push(move(20.610621839055106,25.17331824892539,2.2866664900823537))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0754711567313791,-0.9971479852110582,9.547512647116127e-06,0.42661934092950465,-0.9044312786555859,-1.1588660317822029e-05))
push(move(23.10702398499355,22.51808316943272,2.2866631788138814))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.42661934092950465,-0.9044312786555859,-1.1588660317822029e-05,0.5878910708001611,-0.8089400943293562,-0.00011251600966247449))
push(move(23.959438074852073,18.073841362749906,2.2865755230536697))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5878910708001611,-0.8089400943293562,-0.00011251600966247449,0.896287905718995,-0.44347260800524263,-0.00018976534537744577))
push(move(27.671717395094092,16.237049656327166,2.2857895457322663))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub70 inherits .../COPOLYFF



DPDPoly_sub71 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.5400676758266869,0.7950887010854292,0.2759725764155663))
push(move(24.960444806127434,13.494283393323407,2.3035000260082144))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5400676758266869,0.7950887010854292,0.2759725764155663,-0.8697615680170949,0.1462652419807268,0.4712974578636765))
push(move(23.140607210389547,16.173451903023295,3.233430278147325))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8697615680170949,0.1462652419807268,0.4712974578636765,-0.46827968044087614,-0.8662806615736824,-0.173988379697191))
push(move(20.439794711411945,14.254507809218454,4.75310342983293))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.46827968044087614,-0.8662806615736824,-0.173988379697191,0.00036760246889019075,-0.9994306725272684,-0.03373715577989242))
push(move(20.579999570189052,11.436528706836107,2.282041625239543))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.00036760246889019075,-0.9994306725272684,-0.03373715577989242,0.4145724069769304,-0.6939591745411481,0.5886853008556632))
push(move(20.44197503025964,8.326697969270146,4.553002062623332))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.4145724069769304,-0.6939591745411481,0.5886853008556632,0.7169329761918697,-0.591315827155829,0.3692596650105259))
push(move(23.13450887644325,7.16049600496724,5.909398521605597))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7169329761918697,-0.591315827155829,0.3692596650105259,-0.13798459224471096,-0.9686613313472351,0.20653202525434877))
push(move(24.881247163367807,4.665251278253167,6.839469829065393))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.13798459224471096,-0.9686613313472351,0.20653202525434877,-0.7240733220030818,-0.6891373350987948,0.0284175603518831))
push(move(22.44935951690929,2.350700360531371,6.934913635462032))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub71 inherits .../COPOLYFF



DPDPoly_sub72 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.11622601009870971,-0.16743927456033902,-0.9790074585575138))
push(move(20.612722657187618,3.2066572601701453,4.5438774143936085))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.11622601009870971,-0.16743927456033902,-0.9790074585575138,0.9264079126835251,-0.3759507517169553,0.02072224893225815))
push(move(20.33428393033308,2.8055286453752895,2.1985023119501843))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9264079126835251,-0.3759507517169553,0.02072224893225815,0.9981575527711265,0.020571546437356838,-0.057081619836260686))
push(move(22.879394199734268,2.2868066644996037,4.594579196307644))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.9981575527711265,0.020571546437356838,-0.057081619836260686,0.35197220330335977,0.9214027031848046,0.1647198429622653))
push(move(25.04484634773477,2.902611068131716,1.929119455127024))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.35197220330335977,0.9214027031848046,0.1647198429622653,-0.5187563072513536,0.8521186376933771,0.06917890561813068))
push(move(23.757393126230472,4.5852568735625665,5.0054748407254595))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5187563072513536,0.8521186376933771,0.06917890561813068,0.7513715073334662,0.42767043285122663,-0.5025324455518064))
push(move(22.768773496701208,6.641330135259817,2.2326458445716693))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7513715073334662,0.42767043285122663,-0.5025324455518064,0.992036274546464,0.044377721744556085,0.11787556064229582))
push(move(27.785007143551116,6.8777199405453935,2.3117252080758885))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.992036274546464,0.044377721744556085,0.11787556064229582,0.9724810776235869,0.04086228106590848,0.22937050300803263))
push(move(32.201972841846434,7.063314599377491,3.353515806678535))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub72 inherits .../COPOLYFF



DPDPoly_sub73 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.00144757865417298,0.9934331809458589,0.11440463063981508))
push(move(32.02056351149975,4.262190161925191,6.300430705668387))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.00144757865417298,0.9934331809458589,0.11440463063981508,0.0005125143152647594,0.9426369856032664,-0.33381918863639953))
push(move(32.01334879816746,9.21344831611701,6.8706219084560445))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.0005125143152647594,0.9426369856032664,-0.33381918863639953,0.07791520709910048,-0.10251980319364526,-0.9916748007567))
push(move(32.02451741245067,11.534364153440416,3.7251114061431982))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.07791520709910048,-0.10251980319364526,-0.9916748007567,-0.4605037675414413,-0.8768379293208742,0.1381720875735035))
push(move(32.26068577235355,8.888005583431752,3.722611991935125))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4605037675414413,-0.8768379293208742,0.1381720875735035,-0.6651880660552726,0.09525369434633894,0.7405751619457818))
push(move(29.68599479408119,7.081620278382765,4.426774616724616))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6651880660552726,0.09525369434633894,0.7405751619457818,-0.8757826559798273,0.4807977108364516,-0.042875409494806255))
push(move(29.41075854694264,9.29610986354679,6.8955271781751035))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8757826559798273,0.4807977108364516,-0.042875409494806255,-0.8674435596216978,-0.16888325281793137,-0.46799585231973223))
push(move(27.72734318085246,8.156904431975533,4.330885540363667))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8674435596216978,-0.16888325281793137,-0.46799585231973223,-0.9898373878404274,0.11189414305718769,0.08775902450880502))
push(move(25.0904531000268,8.454986278099486,4.564672326024576))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub73 inherits .../COPOLYFF



DPDPoly_sub74 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.8313801363046548,0.5549343013831235,-0.02924021385828852))
push(move(27.507223454397657,11.484484664276284,4.5725620200572905))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8313801363046548,0.5549343013831235,-0.02924021385828852,-0.6989663647077622,0.37849703331188134,0.6067833359456405))
push(move(24.24233097557441,13.663753506180473,4.457733495611854))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6989663647077622,0.37849703331188134,0.6067833359456405,-0.18891301383746173,-0.29941075184307164,0.9352353045536794))
push(move(22.904628016437993,13.976834520811785,8.568145148039438))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.18891301383746173,-0.29941075184307164,0.9352353045536794,-0.004645026826261356,-0.9388838027961055,0.3442028886760062))
push(move(22.86727552028087,11.484409800142396,11.265101507940063))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.004645026826261356,-0.9388838027961055,0.3442028886760062,0.002454213826640027,-0.9208635134540252,0.38987737357225755))
push(move(22.86708650065725,6.3886929626881805,11.350023199625982))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.002454213826640027,-0.9208635134540252,0.38987737357225755,0.04337963008093011,-0.26770004732570557,0.9625252684246043))
push(move(22.882813083464015,5.6544471179856215,13.733404905061288))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.04337963008093011,-0.26770004732570557,0.9625252684246043,-0.6685286516927768,0.3713420524838568,0.6443403773805538))
push(move(23.08298028659753,5.056390759886665,16.140364285423324))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6685286516927768,0.3713420524838568,0.6443403773805538,-0.7979954441103082,0.5992615080859812,-0.06394463312669384))
push(move(20.59255093935304,6.926599991563706,15.940802255197639))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub74 inherits .../COPOLYFF



DPDPoly_sub75 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.7073950374629209,-0.004463099383404938,0.7068043164247986))
push(move(19.816151015696306,6.876211349886104,11.093762231660735))
mon[0] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7073950374629209,-0.004463099383404938,0.7068043164247986,-0.9039041508517839,-0.008453174683947125,-0.4276515285962136))
push(move(16.834518768630726,6.857399624699077,14.072904621146026))
mon[1] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9039041508517839,-0.008453174683947125,-0.4276515285962136,0.2246764917485176,-0.49192018745039723,-0.8411509990687429))
push(move(15.915701817643024,6.839734939875224,9.248397255531895))
mon[2] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.2246764917485176,-0.49192018745039723,-0.8411509990687429,0.7454797895919869,-0.6494482945348851,0.1499226335001363))
push(move(18.14612326555658,3.98569406722254,9.162477969980747))
mon[3] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.7454797895919869,-0.6494482945348851,0.1499226335001363,-0.06964410042608231,0.07904190648515963,0.9944355566325215))
push(move(21.018444222660552,2.394319519286479,10.274604256866905))
mon[4] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.06964410042608231,0.07904190648515963,0.9944355566325215,-0.11024775827731581,0.5061901716124667,0.855346094839842))
push(move(17.984912567063855,4.168658609469639,11.464376475524377))
mon[5] = new BBEAD.rot(0.0,1,0,0)
pop()
push(rotvv(-0.11024775827731581,0.5061901716124667,0.855346094839842,0.5406118293999379,-0.2885973671612301,0.7902217470941043))
push(move(20.566524570078034,4.46925773182027,13.780777226348222))
mon[6] = new ABEAD.rot(0.0,1,0,0)
pop()
push(rotvv(0.5406118293999379,-0.2885973671612301,0.7902217470941043,0.23432371199850718,-0.606129465639298,0.760065437234887))
push(move(21.384278272795353,2.353959153519481,16.43328866151295))
mon[7] = new BBEAD.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub75 inherits .../COPOLYFF



DPDPoly_sub76 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.7215695738993366,0.002697179884228427,0.6923366776673051))
push(move(24.395103472437974,2.293639740187643,13.312382543245327))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7215695738993366,0.002697179884228427,0.6923366776673051,0.8066849803704169,0.440474793154278,0.3940067246132689))
push(move(27.233502483183965,2.3042494900885804,16.035789699085566))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8066849803704169,0.440474793154278,0.3940067246132689,0.4869894645873789,0.7190291099618482,0.4958209358310422))
push(move(29.684793234956313,5.181972931820491,15.896009842954282))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.4869894645873789,0.7190291099618482,0.4958209358310422,-0.45584062029548833,-0.7142642066631669,0.5310705903817884))
push(move(29.658308620023753,5.884421804245715,18.504569283455893))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.45584062029548833,-0.7142642066631669,0.5310705903817884,-0.7558965908192355,-0.5714655516055362,0.3194486927755963))
push(move(27.790126184622892,2.2131877965247333,18.10336457221304))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7558965908192355,-0.5714655516055362,0.3194486927755963,-0.745847532258465,-0.01452088039873589,0.6659584091040547))
push(move(24.897954147187868,2.285545148764688,20.516337866573558))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.745847532258465,-0.01452088039873589,0.6659584091040547,-0.5944178849295315,0.5489320649840226,0.5876571841714173))
push(move(22.169861185550555,2.103767047201332,23.121632483071217))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5944178849295315,0.5489320649840226,0.5876571841714173,0.033043444779940284,0.9994512111712701,0.0023253484376041644))
push(move(22.25651848004943,4.724853877600542,23.1277307699088))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub76 inherits .../COPOLYFF



DPDPoly_sub77 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.12835969030637406,0.6651495704529289,0.7355948877138394))
push(move(25.058312578593487,4.503593233412236,20.57598756258783))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.12835969030637406,0.6651495704529289,0.7355948877138394,0.7331520926157309,0.3757738781903814,0.5668174323033257))
push(move(25.501900290585983,6.802229007507389,23.118069523174764))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7331520926157309,0.3757738781903814,0.5668174323033257,0.868957411526501,0.014846839816086638,0.4946641166495086))
push(move(29.656771842889764,6.860513289767844,24.131166493388484))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.868957411526501,0.014846839816086638,0.4946641166495086,0.3687125986118764,0.37167408579010436,0.8520031652388197))
push(move(32.11048257690427,6.915141978056813,26.8800818791365))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3687125986118764,0.37167408579010436,0.8520031652388197,-0.18412503718990805,0.9693034638228641,0.16293791977563857))
push(move(31.999671394203244,9.222230931396687,29.54502498661817))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.18412503718990805,0.9693034638228641,0.16293791977563857,-0.31933115967411113,0.6045151877875667,-0.7297869539772208))
push(move(31.193131001885703,11.7444257776942,27.691874558815716))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.31933115967411113,0.6045151877875667,-0.7297869539772208,-0.831836807961677,-0.05600281100789951,-0.5521876583910053))
push(move(30.013902664478216,12.981423607042503,25.006826728583498))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.831836807961677,-0.05600281100789951,-0.5521876583910053,-0.8648115716138264,-0.49827571717321745,0.06182439064268717))
push(move(27.42687729219179,11.490865472724495,25.19177021508231))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub77 inherits .../COPOLYFF



DPDPoly_sub78 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.9988803141145387,0.04348627011982434,0.01862961044965606))
push(move(27.0454714752487,11.427273158425402,20.41664549871675))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9988803141145387,0.04348627011982434,0.01862961044965606,-0.9122104364065202,-0.3376629784959645,-0.23206859473927033))
push(move(21.47195481454648,11.669916293543636,20.52059433298284))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9122104364065202,-0.3376629784959645,-0.23206859473927033,0.29234767649742727,-0.4763943905465679,-0.8292051740687101))
push(move(20.647987069270744,9.059186198234862,18.789109618059413))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.29234767649742727,-0.4763943905465679,-0.8292051740687101,0.5345118414426463,-0.8220560511139046,-0.1962675219811086))
push(move(22.987616713812052,9.200073415275948,16.22162160274846))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5345118414426463,-0.8220560511139046,-0.1962675219811086,-0.926670536805074,-0.1357503110907636,0.35050473499819784))
push(move(22.203831825789536,6.6663643792867235,18.21781863575849))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.926670536805074,-0.1357503110907636,0.35050473499819784,-0.8725667051367865,0.35045401495767387,0.34030769677863426))
push(move(18.11112108413994,8.485703234647245,18.066111894078002))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8725667051367865,0.35045401495767387,0.34030769677863426,-0.9753206428654652,0.13578923219710398,0.17410033894228025))
push(move(16.03499963177083,9.143988149787004,20.62371042993519))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9753206428654652,0.13578923219710398,0.17410033894228025,-0.8116940768019095,-0.010051741019425915,-0.583996308367762))
push(move(13.599545644210064,9.113828323015639,18.871454033610473))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub78 inherits .../COPOLYFF



DPDPoly_sub79 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.9835419081432316,-0.18039665620192694,0.010117378965660515))
push(move(11.027446783044937,7.882018752980829,20.526007290015116))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9835419081432316,-0.18039665620192694,0.010117378965660515,0.6427035919959804,-0.7659584291932477,0.015484753252049675))
push(move(15.793815935834623,7.007793618018859,20.57503739499564))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6427035919959804,-0.7659584291932477,0.015484753252049675,-0.21073890151632976,-0.877596804539609,-0.4305960567046079))
push(move(15.811577244607697,2.1804090233481097,20.64127205692399))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.21073890151632976,-0.877596804539609,-0.4305960567046079,-0.25727525754063635,0.02228342018537367,-0.9660812031305864))
push(move(14.657056248739497,2.2738946475583695,18.252332687122824))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.25727525754063635,0.02228342018537367,-0.9660812031305864,-0.9999616474177747,0.005010335447098467,0.00718333016348436))
push(move(14.551919206514272,2.2895119725436253,15.911194378225343))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9999616474177747,0.005010335447098467,0.00718333016348436,-0.8031879083153375,0.45794753067726945,0.3810160666988001))
push(move(11.446451020278394,2.2899814737124906,18.27539640905676))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8031879083153375,0.45794753067726945,0.3810160666988001,-0.47227044406885577,0.7113309760377704,-0.5205467031767261))
push(move(9.211981091331708,5.334143805891895,18.444352803542504))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.47227044406885577,0.7113309760377704,-0.5205467031767261,-0.022033626088014544,0.15090645847999373,-0.9883024638795755))
push(move(9.151827637526882,5.7461297696531695,15.74621286195048))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub79 inherits .../COPOLYFF



DPDPoly_sub80 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.03737388908536872,0.00984187454959133,-0.9992528858702309))
push(move(9.155356902581488,2.2353316546130806,14.10055409058337))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.03737388908536872,0.00984187454959133,-0.9992528858702309,-0.6282957553866401,-0.013103732444224855,-0.777864214345384))
push(move(8.964757071445721,2.2855233706244036,9.004551614797276))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6282957553866401,-0.013103732444224855,-0.777864214345384,-0.7015943758809299,0.6500002156613277,-0.29200180028978606))
push(move(4.390898378331228,2.1359641366756685,8.201896086016017))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7015943758809299,0.6500002156613277,-0.29200180028978606,-0.33347820268148265,0.7475057727870689,-0.574480119748573))
push(move(4.50352924829508,6.418679431804643,7.147799906622303))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.33347820268148265,0.7475057727870689,-0.574480119748573,-0.3936856812601559,-0.44772405014541833,-0.8028416776003285))
push(move(2.2830023383319946,6.860904014798391,4.5706411501936595))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3936856812601559,-0.44772405014541833,-0.8028416776003285,0.5793364444393484,-0.7330408136296235,-0.35639928408681393))
push(move(2.154256071973616,3.746938620622922,2.3569362613351763))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5793364444393484,-0.7330408136296235,-0.35639928408681393,0.9390488809092049,-0.2162914245591112,0.2672175498079423))
push(move(5.880362243237682,2.3091247215716155,2.3575980954765647))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9390488809092049,-0.2162914245591112,0.2672175498079423,0.8534328538385176,-0.04541157619494852,0.519220716782886))
push(move(9.15260280064873,2.1350072139871354,4.348399223020775))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub80 inherits .../COPOLYFF



DPDPoly_sub81 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.7622324957859197,0.25014004152870445,-0.5970189125915408))
push(move(6.762237686483565,4.542516074590255,4.311055912088626))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7622324957859197,0.25014004152870445,-0.5970189125915408,-0.38611352399074494,0.9200261874741861,-0.06684430381986417))
push(move(4.32910013721061,5.340993089129825,2.4052999362104064))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.38611352399074494,0.9200261874741861,-0.06684430381986417,-0.4700337271252517,0.8820516600331062,-0.03245249447401305))
push(move(4.795939173605759,9.22778611004877,3.9706486302175517))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4700337271252517,0.8820516600331062,-0.03245249447401305,0.21314023179964836,0.7395877368370974,-0.6384208808525709))
push(move(2.288024488740248,9.171216454158033,2.2643781419210014))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.21314023179964836,0.7395877368370974,-0.6384208808525709,0.704715971192069,0.48087150732643535,0.5216684707632054))
push(move(5.413735709785072,11.371514387721637,2.1201570290541776))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.704715971192069,0.48087150732643535,0.5216684707632054,-0.7033674082711814,0.45313488359271087,0.5476705818768263))
push(move(5.6755283545949995,11.48272088521588,4.771989766524384))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7033674082711814,0.45313488359271087,0.5476705818768263,-0.4384745894827627,0.8963348526403947,-0.06575611241584134))
push(move(2.245261169300542,13.412761003907438,4.587260671962863))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4384745894827627,0.8963348526403947,-0.06575611241584134,0.013209315703600637,0.9978301004856367,-0.0645027483404141))
push(move(2.310766248251247,18.36100669493023,4.267391140687708))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub81 inherits .../COPOLYFF



DPDPoly_sub82 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.2928459083257754,-0.9560830822077747,-0.012100160863920342))
push(move(3.3240763090803873,20.987614260077716,2.351083811215834))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.2928459083257754,-0.9560830822077747,-0.012100160863920342,-0.13254457985657267,-0.9911267662158015,-0.009983368231836308))
push(move(4.747782604672625,16.33949910958636,2.2922573953094934))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.13254457985657267,-0.9911267662158015,-0.009983368231836308,-0.018635320583821773,-0.6329116445801602,0.7739997254402453))
push(move(2.3462217656884676,13.67552490515867,2.277430991957442))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.018635320583821773,-0.6329116445801602,0.7739997254402453,-0.05417223033874086,0.2693361500647256,0.9615214026366953))
push(move(4.671093298547923,13.734899170305784,5.4774723540611605))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.05417223033874086,0.2693361500647256,0.9615214026366953,-0.3354438791054931,0.9209233207231224,0.19843800371641554))
push(move(2.089893967316353,14.949948017081761,6.827080557507535))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3354438791054931,0.9209233207231224,0.19843800371641554,0.053293876057419004,0.9523389420312911,0.30035029925987733))
push(move(2.2767227995786534,20.30837320963623,6.893906313863765))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.053293876057419004,0.9523389420312911,0.30035029925987733,0.8524786883447985,0.4692654717416679,0.2303692751844346))
push(move(2.5306274119146086,22.825667581826753,9.310938587205019))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8524786883447985,0.4692654717416679,0.2303692751844346,0.9632531852158278,-0.00516121437070986,-0.26854545804720253))
push(move(6.80806380648306,22.802748616669636,8.118431639418718))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub82 inherits .../COPOLYFF



DPDPoly_sub83 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.6844692243456162,-0.11234020967098805,-0.7203343378007112))
push(move(9.208638367734752,21.039659507651088,7.11042854521789))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6844692243456162,-0.11234020967098805,-0.7203343378007112,-0.8765847445092385,0.34715476579127685,-0.3332907953755653))
push(move(6.817601140210757,20.64722459032082,4.594104718398668))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8765847445092385,0.34715476579127685,-0.3332907953755653,-0.3752991824083865,-0.14918413956876728,0.9148194445816743))
push(move(4.355301742012971,22.96173144668757,5.265116458343982))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3752991824083865,-0.14918413956876728,0.9148194445816743,0.3690922378605414,-0.6991768194676231,0.6123093132316675))
push(move(6.0076997086120265,20.32528291319483,6.568299207889505))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3690922378605414,-0.6991768194676231,0.6123093132316675,0.4783901417180446,-0.3750812487012757,0.7940131794748001))
push(move(6.73625535097585,18.45145623400856,9.215023607817468))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.4783901417180446,-0.3750812487012757,0.7940131794748001,0.6252848658037516,-0.6821158738824405,-0.37912632616896796))
push(move(9.094817423257753,17.90483176606478,11.692176015249672))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6252848658037516,-0.6821158738824405,-0.37912632616896796,-0.021666835866030548,0.07498977495400529,-0.996948886290517))
push(move(9.127247885663753,15.843150721690426,7.7653032241193305))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.021666835866030548,0.07498977495400529,-0.996948886290517,-0.047031386590114084,0.6770619809663325,-0.734421624549112))
push(move(8.94897152278619,18.409610189732717,4.981417280370267))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub83 inherits .../COPOLYFF



DPDPoly_sub84 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.5362458386031139,0.8436639428825128,-0.025914321538008784))
push(move(11.318331597772964,18.273777863182175,2.2017917779132565))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5362458386031139,0.8436639428825128,-0.025914321538008784,-0.3211668116527521,0.8638532875976082,0.3880842390507631))
push(move(9.207611598725368,21.59452784113292,2.0997902838326508))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3211668116527521,0.8638532875976082,0.3880842390507631,-0.008041198230324651,0.7883136282773409,0.6152210680749118))
push(move(9.149886401273449,24.106318599043405,4.822048210002745))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.008041198230324651,0.7883136282773409,0.6152210680749118,-0.0010328986541652862,0.22626415645258202,0.9740654313880417))
push(move(9.14674537358185,27.56150855819648,6.7565818427408875))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0010328986541652862,0.22626415645258202,0.9740654313880417,-0.008077103839987127,-0.16888073500922257,0.985603397790563))
push(move(9.144745683692454,25.232431139062804,9.669953924646315))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.008077103839987127,-0.16888073500922257,0.985603397790563,-0.5712438288181763,0.6874059043365912,0.4485015169654872))
push(move(9.086408623049183,26.299953057624744,14.119134994803938))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5712438288181763,0.6874059043365912,0.4485015169654872,-0.555765053514202,0.8250861199794897,-0.1017747508449283))
push(move(7.284104339135945,27.471432737989524,11.130802030942295))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.555765053514202,0.8250861199794897,-0.1017747508449283,-0.15674234248680702,0.6631086259900558,0.7319281304946058))
push(move(6.736315099014061,29.788890577309065,13.688772953580628))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub84 inherits .../COPOLYFF



DPDPoly_sub85 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.9999685854333205,-0.004950524618461512,-0.006190351564019485))
push(move(4.815986774405447,32.29016210558563,12.98861939137916))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9999685854333205,-0.004950524618461512,-0.006190351564019485,-0.6562806487831615,-0.6647901592210926,-0.35686097325926086))
push(move(2.1156114806158084,32.2767934112429,12.971902593804858))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6562806487831615,-0.6647901592210926,-0.35686097325926086,0.1305819741071005,-0.012655410048486292,-0.9913567413574174))
push(move(2.280445073562888,29.721743892828336,11.6098862521653))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.1305819741071005,-0.012655410048486292,-0.9913567413574174,0.8659605797513125,0.4240347976581139,-0.26515422812358336))
push(move(2.610799644818125,32.228802030257974,9.212515984901716))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8659605797513125,0.4240347976581139,-0.26515422812358336,0.5531524946003356,-0.0006986135444907884,0.8330797258705442))
push(move(7.030256235270284,32.04758326931272,10.155509988667266))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5531524946003356,-0.0006986135444907884,0.8330797258705442,0.3313197948615862,-0.35874473780197325,0.8726565227122696))
push(move(6.918133745291431,32.22336200789052,15.699610857804368))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3313197948615862,-0.35874473780197325,0.8726565227122696,0.2681013163576527,-0.9618548086500408,0.054378407884813254))
push(move(9.254966617218663,29.638722841909583,16.015129776141812))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.2681013163576527,-0.9618548086500408,0.054378407884813254,-0.0165504751209629,-0.9995358410900895,0.02557702386122306))
push(move(9.164328396671106,24.16479237479192,16.155201641918485))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub85 inherits .../COPOLYFF



DPDPoly_sub86 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.0004658406208029149,-0.5717217812182782,-0.820447431511072))
push(move(9.147186216374164,22.837395460260453,12.206224025605268))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0004658406208029149,-0.5717217812182782,-0.820447431511072,0.03765714027468988,-0.7313719641159279,0.68093831577577))
push(move(9.145409989070833,20.657448516263212,9.07789844874553))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.03765714027468988,-0.7313719641159279,0.68093831577577,-0.4061106839037056,0.02497972556102789,0.9134824167602572))
push(move(9.26379959829021,20.57254588453568,14.314895031942942))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4061106839037056,0.02497972556102789,0.9134824167602572,-0.5361561907207953,-0.5833080797067167,-0.6101542618884414))
push(move(6.654767238288674,20.81064707727387,14.680209467508025))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5361561907207953,-0.5833080797067167,-0.6101542618884414,-0.330917016067393,-0.8013404949730223,-0.49834459924177393))
push(move(7.0432102558696865,18.156668333251297,11.78782908617733))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.330917016067393,-0.8013404949730223,-0.49834459924177393,-0.7512300063060509,0.32870878262681735,0.572367027220652))
push(move(4.606577899928217,15.850802226424687,11.595737997510712))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7512300063060509,0.32870878262681735,0.572367027220652,0.021176013578466633,0.9700094710715964,0.2421429381178114))
push(move(4.5907849577410715,19.22975344362247,13.656347869489528))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.021176013578466633,0.9700094710715964,0.2421429381178114,0.038429930618547534,0.9989852597495692,0.023485979556737525))
push(move(4.797850167383555,24.612409329552193,13.78289322625444))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub86 inherits .../COPOLYFF



DPDPoly_sub87 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.6907375996410299,0.7136071221140081,-0.11681799394918335))
push(move(2.223599199075816,25.16309825260059,15.956108122299893))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6907375996410299,0.7136071221140081,-0.11681799394918335,-0.03677836381518545,0.888344969169848,-0.4577013957873623))
push(move(4.644216186650833,27.663859067042118,15.546731796536271))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.03677836381518545,0.888344969169848,-0.4577013957873623,-0.14718830789351234,-0.10101986470324097,0.9839362728118033))
push(move(2.128871396399356,27.45115455034709,14.777234376780422))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.14718830789351234,-0.10101986470324097,0.9839362728118033,0.3812863239986292,-0.37178007098173943,0.8464043466053474))
push(move(4.249246641331137,27.392779314844933,18.18705607132307))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3812863239986292,-0.37178007098173943,0.8464043466053474,-0.6020706939562734,-0.7978000048274563,0.03203173077312797))
push(move(4.635432557173755,25.00708711960408,20.341462957712224))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6020706939562734,-0.7978000048274563,0.03203173077312797,-0.4094798504985437,-0.7113410457930227,-0.5712444035662664))
push(move(2.02774110011678,24.449076608010056,18.305245958526513))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4094798504985437,-0.7113410457930227,-0.5712444035662664,0.5526145703600739,-0.8333845552832295,-0.009344497906505))
push(move(2.0320224638921456,20.48448983886282,16.709578643589325))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5526145703600739,-0.8333845552832295,-0.009344497906505,0.852701021736154,0.04160892839073956,0.5207395362446501))
push(move(4.5743827620959765,20.60854843020359,18.262183236413563))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub87 inherits .../COPOLYFF



DPDPoly_sub88 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.8235428746537127,0.32409305631850704,0.46555431955168053))
push(move(1.932281139682852,18.39056427503507,18.845002417837083))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8235428746537127,0.32409305631850704,0.46555431955168053,0.07574561475662153,0.5274108154901703,0.8462271760875651))
push(move(5.016793236713816,19.60442815941209,20.588697827849582))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.07574561475662153,0.5274108154901703,0.8462271760875651,-0.1383698846313613,-0.41460207137701754,0.8994214237147069))
push(move(2.2666878279145486,20.719011997221237,22.58098143598038))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.1383698846313613,-0.41460207137701754,0.8994214237147069,0.981963983810146,-0.18296893018759988,0.047635124495610894))
push(move(4.664862314427518,18.54992638144029,22.876292502191244))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.981963983810146,-0.18296893018759988,0.047635124495610894,0.6031998023833266,-0.6587800480257158,-0.44962078102324343))
push(move(7.122959981208,19.814144878632774,22.8165594535255))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6031998023833266,-0.6587800480257158,-0.44962078102324343,-0.04264290217814112,-0.9990771009738452,0.0051506507863364635))
push(move(6.87608698594212,16.134954278431685,21.22806158451523))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.04264290217814112,-0.9990771009738452,0.0051506507863364635,0.43370373532825285,-0.5467767546852492,0.7161956789161658))
push(move(6.86275944996915,13.717927708985707,22.847987944607834))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.43370373532825285,-0.5467767546852492,0.7161956789161658,0.710683549979084,-0.16874101000687114,0.6829753753474481))
push(move(9.241217547939243,13.153198974625235,25.133714569709976))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub88 inherits .../COPOLYFF



DPDPoly_sub89 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.02020268374448814,-0.502983339312298,0.8640599585351527))
push(move(11.672293339523542,11.419266518461091,26.235906078031846))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.02020268374448814,-0.502983339312298,0.8640599585351527,-0.36425887579588173,-0.7481567283545598,0.5545962326068593))
push(move(11.589545481736229,9.35910489057059,29.774995808527926))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.36425887579588173,-0.7481567283545598,0.5545962326068593,0.8217213047335982,-0.5663504931217037,0.06341306086064716))
push(move(9.377656323335497,6.7062773866478045,29.729567122248252))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8217213047335982,-0.5663504931217037,0.06341306086064716,0.6354428642596486,0.5703745303230573,-0.5204663883674386))
push(move(13.849944914610136,7.801182117867027,29.949433109813032))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6354428642596486,0.5703745303230573,-0.5204663883674386,-0.02186973239719424,0.270215530208577,-0.9625514438402618))
push(move(12.052981889547855,9.107653889738296,27.538312623268368))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.02186973239719424,0.270215530208577,-0.9625514438402618,0.9850821342815775,0.1602045305211172,0.06283070204733174))
push(move(13.740981206538558,9.147503399504263,25.15361884809204))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9850821342815775,0.1602045305211172,0.06283070204733174,0.6592710430827226,0.5970299767438584,-0.45707428129555383))
push(move(15.959251770039572,9.742933030953617,27.787463095534964))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6592710430827226,0.5970299767438584,-0.45707428129555383,0.011052503716732482,0.3275096021602387,-0.9447832040497087))
push(move(16.008454172750913,11.200906694687708,23.581574106763146))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub89 inherits .../COPOLYFF



DPDPoly_sub90 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.7102143018132044,-0.013783466069885975,0.7038505960522327))
push(move(16.046176088815688,15.84685607860233,22.730080305738923))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7102143018132044,-0.013783466069885975,0.7038505960522327,0.3632423048654256,-0.7557893698379806,0.5448279144793898))
push(move(18.46463514111262,15.799919895814067,25.12686933285545))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3632423048654256,-0.7557893698379806,0.5448279144793898,0.029519115714036873,-0.08574366519745284,0.9958798349630182))
push(move(18.32674810312332,11.101725727658561,26.150715175996172))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.029519115714036873,-0.08574366519745284,0.9958798349630182,-0.3580554657089821,0.7521942879998151,0.5531727004981131))
push(move(18.533929042891273,15.598643097013866,27.464622270164963))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3580554657089821,0.7521942879998151,0.5531727004981131,-0.9258564118115181,0.06767475046224433,0.37176609966129714))
push(move(15.990914605414716,16.008788411972073,29.75942792468417))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9258564118115181,0.06767475046224433,0.37176609966129714,-0.7254693403712759,-0.5900492676176382,0.3543107364519948))
push(move(11.265485959829011,16.129924260723516,30.38317497566838))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7254693403712759,-0.5900492676176382,0.3543107364519948,0.29399332737425976,-0.9327859809346085,0.20851435737442967))
push(move(11.489174828185035,12.347367989711133,31.95802495287726))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.29399332737425976,-0.9327859809346085,0.20851435737442967,0.5156855478442132,-0.8567530279337428,0.006531835192130213))
push(move(13.522242532767862,8.969656670909847,31.983776427271476))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub90 inherits .../COPOLYFF



DPDPoly_sub91 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.0016344125620905738,0.007946795474248664,-0.9999670880270347))
push(move(13.733091535237465,11.387656693951389,29.293814172638932))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0016344125620905738,0.007946795474248664,-0.9999670880270347,0.0033694052438873116,0.004282861172803211,-0.999985151994007))
push(move(13.72460291148983,11.42892984514035,24.10030026607547))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.0033694052438873116,0.004282861172803211,-0.999985151994007,0.28144897508460803,0.0009600983582391541,-0.9595757149047522))
push(move(13.768057268891786,11.432101743509719,18.916548171070517))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.28144897508460803,0.0009600983582391541,-0.9595757149047522,0.9127072727430318,0.0829979088957408,-0.40009596523948016))
push(move(16.09579622824422,11.437018625033044,16.01592361692277))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9127072727430318,0.0829979088957408,-0.40009596523948016,0.8523474520148145,0.1689709288010987,0.4949269100220229))
push(move(20.76320464812402,12.068212161638552,15.850143063685874))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8523474520148145,0.1689709288010987,0.4949269100220229,0.6077619957316575,0.3948053713188736,0.6890240019927021))
push(move(20.34580327657175,12.279547850256371,18.48374686321553))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6077619957316575,0.3948053713188736,0.6890240019927021,0.32788929580244086,0.9443794340266481,-0.02522090969190151))
push(move(22.920549852993787,13.469634890689319,18.295940328369472))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.32788929580244086,0.9443794340266481,-0.02522090969190151,-0.07972136690438329,0.9968086938658804,0.004114789459309061))
push(move(22.51586269984767,18.52970458362007,18.316828109108112))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub91 inherits .../COPOLYFF



DPDPoly_sub92 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.026477952072336396,0.9710515573043851,0.23739795936524732))
push(move(20.65768307784404,15.621766627655584,19.363501720303898))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.026477952072336396,0.9710515573043851,0.23739795936524732,-0.4081856167548886,0.8898823008047406,-0.20370074371217306))
push(move(20.78329434997916,20.22843035635186,20.489716451589885))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4081856167548886,0.8898823008047406,-0.20370074371217306,-0.025864802276507778,0.8810561705078386,-0.4723039661206115))
push(move(18.39133824574361,20.562607438363326,18.23250614168135))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.025864802276507778,0.8810561705078386,-0.4723039661206115,-0.013668927329463128,0.9450654183065642,0.32659533913805416))
push(move(20.698580500171133,23.11411489795094,18.942800035143247))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.013668927329463128,0.9450654183065642,0.32659533913805416,-0.9268220038673242,0.3538355268226184,-0.12570359225383262))
push(move(18.357103974204204,22.929554410352342,19.05047475429202))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9268220038673242,0.3538355268226184,-0.12570359225383262,0.03936342575442291,0.9783817620333412,-0.20302622597440698))
push(move(15.994088021590212,24.910162647838003,18.304736197835588))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.03936342575442291,0.9783817620333412,-0.20302622597440698,0.7846381125704095,0.06924701750914528,0.61607457573579))
push(move(18.521747771157745,27.02179194008934,18.201285231659625))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7846381125704095,0.06924701750914528,0.61607457573579,0.26026730246853963,-0.5250627579989581,0.8102900909108277))
push(move(19.41864575208777,25.212391669505063,20.993597364657486))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub92 inherits .../COPOLYFF



DPDPoly_sub93 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.6428393241640307,-0.0006200862727039133,-0.7660007955618237))
push(move(20.491834852510753,25.155334437247674,16.532073097201227))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6428393241640307,-0.0006200862727039133,-0.7660007955618237,-0.9929032849320066,-0.002824356032458996,-0.11889108370366701))
push(move(18.23278616812624,25.153155346725516,13.840213678517188))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9929032849320066,-0.002824356032458996,-0.11889108370366701,-0.9958376536172514,-0.03711748972009467,0.08324457697031003))
push(move(15.169233313933882,25.140194068601513,15.894740262626565))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9958376536172514,-0.03711748972009467,0.08324457697031003,-0.6064594833269187,0.36788570301987406,-0.7048879376159162))
push(move(11.29081080821993,24.894409658487554,14.420510878642766))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6064594833269187,0.36788570301987406,-0.7048879376159162,-0.031668549733431424,0.9282984338381515,-0.37048498038573213))
push(move(11.437788584321774,27.40373385217047,11.557681560279267))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.031668549733431424,0.9282984338381515,-0.37048498038573213,-0.23817289035545175,0.8399712636309659,-0.48756738054747706))
push(move(11.043005528762402,32.158312008092366,11.52147903562835))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.23817289035545175,0.8399712636309659,-0.48756738054747706,0.68025741487801,-0.4712525996772539,-0.5614007809051541))
push(move(10.145271169832387,31.962092632186963,8.9117493168821))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.68025741487801,-0.4712525996772539,-0.5614007809051541,0.9006490158600218,-0.43272037300147004,0.039804886883933126))
push(move(13.998881525840368,30.110610332989882,9.082062637181659))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub93 inherits .../COPOLYFF



DPDPoly_sub94 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.03157735151538147,0.5412061935401179,-0.8402968088390498))
push(move(11.460328460647261,29.84786039128172,6.786397598130403))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.03157735151538147,0.5412061935401179,-0.8402968088390498,-0.6112479533618597,0.35053446366592583,-0.7095784165921196))
push(move(11.582791127731028,31.946755666615115,3.5275749479064773))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6112479533618597,0.35053446366592583,-0.7095784165921196,-0.9908884252512428,0.017252480246466754,0.13357574865392863))
push(move(7.667672387173496,32.022847898843,2.383623116036042))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9908884252512428,0.017252480246466754,0.13357574865392863,-0.5081795346817274,-0.7496767204237609,0.4239556290289551))
push(move(4.555007321971606,32.06911727484014,4.474948496037539))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5081795346817274,-0.7496767204237609,0.4239556290289551,0.3695343354869827,-0.7382347443786934,0.5643171422952873))
push(move(4.456777491476375,27.286070853031426,5.062355478022444))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3695343354869827,-0.7382347443786934,0.5643171422952873,0.7332427783880292,0.32098106240946356,0.5994382249375623))
push(move(6.846708855550781,27.49088588098451,7.974613713124474))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7332427783880292,0.32098106240946356,0.5994382249375623,-0.026399837656460735,0.561463666720311,0.8270801651138154))
push(move(9.19490815585377,29.360213632630526,8.935856477542124))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.026399837656460735,0.561463666720311,0.8270801651138154,-0.7187318784810217,0.10966889574608232,0.6865837313547247))
push(move(6.741209432349294,29.734615321990702,11.279803748622452))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub94 inherits .../COPOLYFF



DPDPoly_sub95 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.9923548559016012,-0.08581570092391756,0.08869895965257384))
push(move(6.656280918600819,29.7145416332152,5.899120434139521))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9923548559016012,-0.08581570092391756,0.08869895965257384,0.6965404090821207,0.6319986111540388,-0.33971931651744214))
push(move(9.328476338948345,29.483458647487822,6.137967407441075))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6965404090821207,0.6319986111540388,-0.33971931651744214,-0.7220692928234557,0.6483307438218182,0.24141910234462077))
push(move(9.210443872992494,32.0320345148756,4.6533944406059415))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7220692928234557,0.6483307438218182,0.24141910234462077,-0.9426412915155704,-0.1612418427273748,0.2922814802270884))
push(move(6.551327278906887,31.97700204241649,7.066488866276109))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9426412915155704,-0.1612418427273748,0.2922814802270884,-0.564660948371297,-0.6794688269488561,0.468487061282564))
push(move(1.8923472737375984,30.780250414665403,6.922490994859434))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.564660948371297,-0.6794688269488561,0.468487061282564,0.43620370332138036,-0.5595449304652877,0.70472391757291))
push(move(4.655887964252839,29.696178600675896,8.639094156092979))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.43620370332138036,-0.5595449304652877,0.70472391757291,-0.1827855275210184,-0.9709091775236184,0.15467650089549467))
push(move(4.558860962297295,27.359751677288585,11.230469030247823))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.1827855275210184,-0.9709091775236184,0.15467650089549467,-0.2543639680111193,-0.7777859127023333,-0.5747591197879652))
push(move(3.750934096137273,24.889299042403053,9.404882890520343))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub95 inherits .../COPOLYFF



DPDPoly_sub96 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.8068235279448398,0.0032050090917949614,0.5907838205903779))
push(move(3.7138114131758586,25.14157858216574,6.756155834537174))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8068235279448398,0.0032050090917949614,0.5907838205903779,0.3781421390405641,-0.01483318899593535,0.9256287048196149))
push(move(6.869196595897126,25.154112968990695,9.066636936186189))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3781421390405641,-0.01483318899593535,0.9256287048196149,-0.0012479848937887838,0.26692021752778505,0.9637178217759722))
push(move(6.856701160091595,25.018294047605078,14.44942422617863))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0012479848937887838,0.26692021752778505,0.9637178217759722,-0.0012253346144423197,0.6475788739941344,0.7619974412762629))
push(move(6.858539822350039,27.433394014370226,17.296001442978444))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0012253346144423197,0.6475788739941344,0.7619974412762629,0.0364411578418348,0.00447566239226704,0.9993257779429574))
push(move(6.847296200008481,29.98873509187025,20.298076042727672))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.0364411578418348,0.00447566239226704,0.9993257779429574,0.5395726356374916,-0.8412615952976712,-0.03376831574757732))
push(move(7.069058453903546,27.459249678073476,23.069053335615635))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5395726356374916,-0.8412615952976712,-0.03376831574757732,0.487216737576856,-0.8732808867537278,-0.0005860508405971393))
push(move(9.079849732798372,26.50790336962534,20.158355145781986))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.487216737576856,-0.8732808867537278,-0.0005860508405971393,0.011699840242290187,-0.6852335508647526,0.7282294243626712))
push(move(9.12657367286729,23.77138640009544,23.066578444195418))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub96 inherits .../COPOLYFF



DPDPoly_sub97 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.6511251156057604,-0.15108054470674576,-0.7437813878005407))
push(move(9.124197091170592,20.577066923376893,25.124611096604824))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6511251156057604,-0.15108054470674576,-0.7437813878005407,0.8769615618718488,-0.47896153138786374,0.039169764485885446))
push(move(11.407474848798179,20.047278040915728,22.516418817426015))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8769615618718488,-0.47896153138786374,0.039169764485885446,0.48959440081417854,-0.861032165834373,0.13755337905691173))
push(move(12.728979181468272,18.608278295283267,25.28561982451134))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.48959440081417854,-0.861032165834373,0.13755337905691173,-0.2684791139077386,-0.8473290325504387,-0.4582057136182972))
push(move(13.656826596309546,16.091423554707813,23.148382608358318))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2684791139077386,-0.8473290325504387,-0.4582057136182972,-0.7897877370996859,-0.03474511317447024,0.612395384892351))
push(move(11.26936324526385,14.001681748095962,22.794534570531333))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7897877370996859,-0.03474511317447024,0.612395384892351,-0.6937512323986764,0.34814955695536925,0.6304768937376672))
push(move(10.68846548034622,15.960836514580315,25.450027167674143))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6937512323986764,0.34814955695536925,0.6304768937376672,-0.4583234977037099,-0.6650496307119182,0.5896172997314262))
push(move(6.813329948071874,16.237881045114637,26.844150485290136))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4583234977037099,-0.6650496307119182,0.5896172997314262,0.6691881152145485,-0.7232983030289267,0.1703726248288591))
push(move(9.143609821823533,13.719176005461247,27.437430445962548))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub97 inherits .../COPOLYFF



DPDPoly_sub98 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.7891920299329236,0.49156649623299487,-0.3681552928745811))
push(move(6.494390257430196,14.306250269818914,29.627312329728454))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7891920299329236,0.49156649623299487,-0.3681552928745811,0.9279954691863636,0.24278380195960547,-0.28263126981213577))
push(move(9.164471845127991,15.969372299614873,28.381728705421633))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9279954691863636,0.24278380195960547,-0.28263126981213577,0.9420079995510644,-0.2940508164742306,-0.16172521792423175))
push(move(13.583208866055019,16.160839424993235,27.468334326764545))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9420079995510644,-0.2940508164742306,-0.16172521792423175,-0.3000820164572963,-0.6797133126736715,-0.6692836438858389))
push(move(16.22955604365336,13.763983621359861,27.168785415976007))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3000820164572963,-0.6797133126736715,-0.6692836438858389,-0.9149779618208126,-0.010220783987483717,0.40337434841213304))
push(move(12.507335536914248,13.723887576958743,25.068775597494962))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9149779618208126,-0.010220783987483717,0.40337434841213304,0.17077713728823116,0.0013545037688069636,0.9853087509502677))
push(move(11.230630483300958,13.708142999559312,29.37259624509716))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.17077713728823116,0.0013545037688069636,0.9853087509502677,0.35060546406640697,0.8158247953264002,0.4598975015124749))
push(move(13.714226616847517,13.733459926877867,32.03200475910721))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.35060546406640697,0.8158247953264002,0.4598975015124749,-0.09690465013949628,0.9952936579050964,-0.00015269327079737034))
push(move(13.25749697478993,18.424464078513555,32.03128508731834))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub98 inherits .../COPOLYFF



DPDPoly_sub99 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.6590858237316657,-0.7520676852241018,-0.0002716571610841141))
push(move(9.227549471010445,16.854119949951645,32.01441868735886))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6590858237316657,-0.7520676852241018,-0.0002716571610841141,-0.018626404978180834,-0.9998264927935754,-0.00020333638970503764))
push(move(6.656423138115285,13.920266785501775,32.013358939363634))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.018626404978180834,-0.9998264927935754,-0.00020333638970503764,0.41126989850621226,-0.911513486790472,-0.00048371661742760517))
push(move(9.1189359515385,11.02397321091048,32.013233000644306))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.41126989850621226,-0.911513486790472,-0.00048371661742760517,0.6393724443897183,-0.7688624285371325,-0.007310495133662848))
push(move(9.955695471904269,6.607961071501389,32.00947848796403))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6393724443897183,-0.7688624285371325,-0.007310495133662848,0.4232713286874797,-0.5968610201934584,-0.6816144840632126))
push(move(14.056170957959674,5.086816346230665,31.956781345892992))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.4232713286874797,-0.5968610201934584,-0.6816144840632126,-0.9680748819881941,-0.23551665733197283,0.08580749957152947))
push(move(11.402484531474718,4.5678229010808336,29.67964343524414))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9680748819881941,-0.23551665733197283,0.08580749957152947,-0.32014461755755874,-0.9349833369784604,-0.15268786271851165))
push(move(9.26043204687297,3.9200921404994498,32.381862475684414))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.32014461755755874,-0.9349833369784604,-0.15268786271851165,0.37113004760055646,-0.4256010771973078,-0.8253037082532103))
push(move(10.639277033278887,2.3388730629914125,29.31564380720319))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub99 inherits .../COPOLYFF



DPDPoly_sub100 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.7873554437073809,-0.018645260697644148,-0.6162172989440255))
push(move(13.554000873869258,2.289405096957963,32.18055787580348))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7873554437073809,-0.018645260697644148,-0.6162172989440255,0.5620835686423367,0.8270640086657909,-0.00521415687989845))
push(move(16.205049869552866,2.2266259543968823,30.105736059882236))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5620835686423367,0.8270640086657909,-0.00521415687989845,-0.03280478182039605,0.9932722031204934,-0.11105933908446222))
push(move(16.02392200674165,5.9237096509515155,32.15764570226516))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.03280478182039605,0.9932722031204934,-0.11105933908446222,0.008248101731769104,0.9995661233163049,-0.0282760311259504))
push(move(15.9914836567567,8.693042462134763,29.382715782723523))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.008248101731769104,0.9995661233163049,-0.0282760311259504,0.6435894114577464,-0.09681293894961908,0.7592232374680117))
push(move(16.06998468343156,11.505926343449865,31.999734255221313))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6435894114577464,-0.09681293894961908,0.7592232374680117,0.25318085552364955,-0.9669180991533254,0.031126257822504323))
push(move(18.22818701970217,8.356582877389926,32.02128804360749))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.25318085552364955,-0.9669180991533254,0.031126257822504323,0.012499010010261076,-0.8679405214038615,-0.4965108518994893))
push(move(18.288443392104806,3.033453678785429,32.272473351516425))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.012499010010261076,-0.8679405214038615,-0.4965108518994893,-0.00124398562241347,0.4843836673490343,-0.8748547966978699))
push(move(18.284883714963215,4.419522325686281,29.76906771249028))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub100 inherits .../COPOLYFF



DPDPoly_sub101 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.5163317356673595,-0.7831067730167287,0.3466198505539722))
push(move(18.65197313172076,4.672082328268215,25.04210555290078))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5163317356673595,-0.7831067730167287,0.3466198505539722,0.40913644773633323,0.04722825310233775,0.9112501628217117))
push(move(20.51593327489265,1.8450629685836877,26.29340494364951))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.40913644773633323,0.04722825310233775,0.9112501628217117,0.02588289541352468,0.07948018918653459,0.9965003638995248))
push(move(20.56240550116741,4.892611161566566,29.297120762007832))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.02588289541352468,0.07948018918653459,0.9965003638995248,0.7364123142197584,-0.6742204329016154,0.05589017197556216))
push(move(20.667120956076726,2.309324223408559,32.1141826004774))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7364123142197584,-0.6742204329016154,0.05589017197556216,0.33655423624401853,0.7416269811104723,-0.5802763711846041))
push(move(22.79764503918549,2.846143252406064,29.466764750537234))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.33655423624401853,0.7416269811104723,-0.5802763711846041,-0.33188815895131607,0.6319778305074275,-0.7003244046119136))
push(move(22.792745775155762,6.993326228969695,28.44924624347133))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.33188815895131607,0.6319778305074275,-0.7003244046119136,-0.9908499051324787,-0.026099691111181347,-0.13242081264989622))
push(move(20.68882066389673,6.861743742123042,25.016888684691125))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9908499051324787,-0.026099691111181347,-0.13242081264989622,-0.696673127467068,0.0012386489665310225,0.7173876352530703))
push(move(17.98017081279543,6.866559582158324,27.806076088079234))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub101 inherits .../COPOLYFF



DPDPoly_sub102 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.47292526275980595,-0.8082502578917701,0.35081792494320413))
push(move(20.855865505166378,7.076359154557887,30.786945070002954))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.47292526275980595,-0.8082502578917701,0.35081792494320413,0.6161366678199317,0.6819415398430362,0.3941209748341995))
push(move(22.46933276894929,4.318872010728146,31.98382179031382))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6161366678199317,0.6819415398430362,0.3941209748341995,-0.22780829259695015,0.9693349626152614,-0.09215808198813591))
push(move(22.76166191021478,9.185699180829227,32.00601605899448))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.22780829259695015,0.9693349626152614,-0.09215808198813591,-0.31218018192266833,-0.06742423672654205,-0.947627303488335))
push(move(20.694313339039056,11.871662882031284,31.26575141505483))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.31218018192266833,-0.06742423672654205,-0.947627303488335,0.4947598912057451,-0.1307534512153448,-0.8591368837672816))
push(move(22.11341725526842,9.0456922117685,30.03826035270908))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.4947598912057451,-0.1307534512153448,-0.8591368837672816,0.1263579140772877,-0.017208888149335747,-0.9918354358051038))
push(move(22.860280961756832,11.29924836960818,27.50460847117634))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.1263579140772877,-0.017208888149335747,-0.9918354358051038,0.5656428295732965,-0.34713365525249085,-0.748028351563869))
push(move(22.782019236825562,8.954634229361451,24.790127360008142))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5656428295732965,-0.34713365525249085,-0.748028351563869,0.8838133735343471,0.05556926078145796,-0.4645276934888158))
push(move(26.31843963477689,9.176984640897725,22.93140326750233))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub102 inherits .../COPOLYFF



DPDPoly_sub103 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.6197777204215934,0.7841156254299693,0.03222209219745397))
push(move(29.85948397913373,10.845582279725386,22.857414197134716))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6197777204215934,0.7841156254299693,0.03222209219745397,0.3345951506503066,0.4483610316574582,0.8288657734834746))
push(move(32.11578176088981,13.70015140669312,22.974718567319563))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3345951506503066,0.4483610316574582,0.8288657734834746,-0.010954257462291615,0.15016868318875337,0.9885997020193794))
push(move(32.030750783281725,13.755102702897409,28.23611958351378))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.010954257462291615,0.15016868318875337,0.9885997020193794,-0.0022759441655556224,0.871104686087077,0.4910920951871351))
push(move(32.01416509625758,15.093184277281058,32.1454181534339))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0022759441655556224,0.871104686087077,0.4910920951871351,0.0006901545384082791,0.9999903900455472,-0.004329376775851809))
push(move(32.01324430873181,20.45560627767434,32.013580997625795))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.0006901545384082791,0.9999903900455472,-0.004329376775851809,0.030059274068141423,0.8843515765706508,-0.4658526902997347))
push(move(32.02154009106696,25.779086529009692,32.099154411803795))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.030059274068141423,0.8843515765706508,-0.4658526902997347,-0.617323068686529,0.3822866749308104,-0.6875820874904987))
push(move(32.24849687183669,27.37679720871522,28.36768325658645))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.617323068686529,0.3822866749308104,-0.6875820874904987,-0.9240614126746821,-0.04252576110452133,0.379871116627932))
push(move(29.635698778845356,27.256554954258032,29.441774778528803))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub103 inherits .../COPOLYFF



DPDPoly_sub104 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.010186448142022063,-0.9866884275445501,-0.16230275174473485))
push(move(29.729776608043387,29.574387533687187,32.13123149293417))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.010186448142022063,-0.9866884275445501,-0.16230275174473485,0.23008743437052515,-0.6482520494260577,-0.7258299063552736))
push(move(29.777368455527885,24.964505413470814,31.372940899426435))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.23008743437052515,-0.6482520494260577,-0.7258299063552736,0.652745920764909,-0.5995142128026268,-0.46314735405960994))
push(move(31.325163719602244,25.07951814838001,27.098450450583098))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.652745920764909,-0.5995142128026268,-0.46314735405960994,-0.66048983723119,-0.7501357944584812,-0.032395443915142))
push(move(31.99580521734091,22.92698311482171,29.798878031016233))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.66048983723119,-0.7501357944584812,-0.032395443915142,0.045539465979587544,0.20171241121451905,-0.9783855376079098))
push(move(29.384335594009407,22.875268263170426,27.003257481445004))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.045539465979587544,0.20171241121451905,-0.9783855376079098,0.3887406001947045,0.721575106399117,-0.5728962485349015))
push(move(32.212086569491234,23.8849792639758,25.152215132223976))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3887406001947045,0.721575106399117,-0.5728962485349015,-0.6927670882840166,0.3828806382914831,-0.6111269738867628))
push(move(31.969754843155442,27.674288918215165,23.193063773908865))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6927670882840166,0.3828806382914831,-0.6111269738867628,-0.7079227748303031,-0.6985727510596298,-0.1041223143881488))
push(move(29.59532452265779,25.331219334690246,22.84382909872431))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub104 inherits .../COPOLYFF



DPDPoly_sub105 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.4648821729434787,-0.8129702699144677,-0.350662095919344))
push(move(29.760935414584946,30.107171375374588,22.002399711661106))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.4648821729434787,-0.8129702699144677,-0.350662095919344,0.324747202523299,-0.38173829262173625,-0.8653410486042673))
push(move(31.360190956325486,27.310447205035,20.796076189667186))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.324747202523299,-0.38173829262173625,-0.8653410486042673,-0.37279491673869913,-0.388996097031658,-0.8424404943661737))
push(move(32.001493467532306,27.47340948610737,16.032073131689714))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.37279491673869913,-0.388996097031658,-0.8424404943661737,-0.5446772095765207,-0.7716787356478112,0.32838798138319664))
push(move(29.466409606508375,25.33436459061847,16.516516504362734))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5446772095765207,-0.7716787356478112,0.32838798138319664,-0.9976668038422076,-0.055018888204911354,-0.04042116341682514))
push(move(28.431751943790196,22.415930345806018,18.184284005269067))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9976668038422076,-0.055018888204911354,-0.04042116341682514,-0.13020988495614622,0.35933944377097204,-0.924078216391922))
push(move(27.45996596400875,25.223714122916228,16.435224046752854))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.13020988495614622,0.35933944377097204,-0.924078216391922,-0.0018608341248466944,0.012220649929840986,-0.9999235935868561))
push(move(27.439272854857222,25.15486897470972,11.140822545977056))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0018608341248466944,0.012220649929840986,-0.9999235935868561,0.0001677230096233741,0.03719046244045816,-0.9993081813797269))
push(move(27.440169651763494,25.353722380299736,5.797629101704446))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub105 inherits .../COPOLYFF



DPDPoly_sub106 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-7.49213275766387e-05,0.027714567442096535,0.9996158747930587))
push(move(27.444254565654866,22.719026811948616,6.087118784709209))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-7.49213275766387e-05,0.027714567442096535,0.9996158747930587,0.3084312771172507,0.013001654152924787,0.951157770448788))
push(move(27.443856065562983,22.866438210403608,11.403989572208232))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3084312771172507,0.013001654152924787,0.951157770448788,-0.08815752987162558,-0.27360069354630295,0.9577948164497004))
push(move(30.085548530155975,22.830368278234463,14.23249010325958))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.08815752987162558,-0.27360069354630295,0.9577948164497004,-0.03255190022203414,-0.5027823955621208,0.8637998822092706))
push(move(27.019245398651233,21.548640704922402,16.01720748302701))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.03255190022203414,-0.5027823955621208,0.8637998822092706,0.14886433319538303,-0.1865987444474184,0.9710923328257417))
push(move(29.940853341277787,20.59546975635816,18.072133449936587))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.14886433319538303,-0.1865987444474184,0.9710923328257417,0.17937511717640722,-0.7170321989746193,0.673564691007161))
push(move(27.74465547747661,20.63935231452832,20.74930247570245))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.17937511717640722,-0.7170321989746193,0.673564691007161,0.9447625420766356,0.028463996148534187,0.32651728899424265))
push(move(30.62835306408155,17.84726562528227,20.653737552262623))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9447625420766356,0.028463996148534187,0.32651728899424265,0.4227042836985401,0.7914480531039577,0.4415099860488538))
push(move(32.19112680965249,20.773316498370143,22.286037581416366))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub106 inherits .../COPOLYFF



DPDPoly_sub107 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.552557097194361,-0.04461639083096876,-0.8322800201911373))
push(move(29.73252157980508,22.871293884136445,22.86832180086352))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.552557097194361,-0.04461639083096876,-0.8322800201911373,0.40414461493210857,0.6988994305951496,-0.5900904304724431))
push(move(31.4000101811994,22.736652009977647,20.356694579199598))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.40414461493210857,0.6988994305951496,-0.5900904304724431,0.2803683356576356,0.17779913859396898,-0.9432820695188741))
push(move(31.13333633493879,25.293764946621586,20.822996065154136))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.2803683356576356,0.17779913859396898,-0.9432820695188741,0.11256021145531249,-0.34697286449771614,-0.9310961443907846))
push(move(31.998062374350337,23.11591439895982,18.34458465561467))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.11256021145531249,-0.34697286449771614,-0.9310961443907846,-0.01492339049507045,-0.8947028881235016,-0.44641240394907994))
push(move(32.01284859835939,22.582621413268594,13.547685661704431))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.01492339049507045,-0.8947028881235016,-0.44641240394907994,-0.25759157971758767,-0.6403688610431735,0.7235843419152093))
push(move(31.960604576401135,20.870204885497202,17.22408689509131))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.25759157971758767,-0.6403688610431735,0.7235843419152093,0.016221555054290845,-0.9775656665053957,0.21000530665076542))
push(move(30.327037934932296,18.391721013275678,18.283190606496888))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.016221555054290845,-0.9775656665053957,0.21000530665076542,0.5848205208517687,-0.811144547773338,-0.005429641632065324))
push(move(32.04118420292952,16.014204579093665,18.26727598037089))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub107 inherits .../COPOLYFF



DPDPoly_sub108 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.6971049435565432,-0.7168044547070677,-0.015364614578053165))
push(move(28.83453135371149,16.154149493014412,16.070687846212635))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6971049435565432,-0.7168044547070677,-0.015364614578053165,-0.8890535645321757,0.45751652926992653,-0.01619829736216844))
push(move(26.087507354636774,13.329497253886709,16.010141775821698))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8890535645321757,0.45751652926992653,-0.01619829736216844,-0.12731304072996355,0.9918323673062979,0.007742404256808247))
push(move(25.178639178064863,18.035510938842563,16.004078554098374))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.12731304072996355,0.9918323673062979,0.007742404256808247,-0.3487921723571862,0.8551109341183285,-0.38357438764030444))
push(move(24.843339339136783,23.0221893855397,16.08580450199775))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3487921723571862,0.8551109341183285,-0.38357438764030444,-0.5866421599757959,0.7048697161948326,-0.39876015263607884))
push(move(22.87277243983727,23.688653459652794,13.468266422425769))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5866421599757959,0.7048697161948326,-0.39876015263607884,-0.349019598222995,0.5704662574775701,0.7434739868588504))
push(move(21.090429290439562,27.531433387094392,13.534826945407337))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.349019598222995,0.5704662574775701,0.7434739868588504,-0.06965781068646826,0.058468240496650545,0.9958560409334242))
push(move(20.575937737382212,27.442788480795624,18.360933946210444))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.06965781068646826,0.058468240496650545,0.9958560409334242,-0.03230878921829292,0.13583696369997153,0.9902042523802957))
push(move(20.421258702618232,28.09311091437308,23.101558453756294))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub108 inherits .../COPOLYFF



DPDPoly_sub109 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.026212958054307407,0.6745576541204493,0.7377566347363874))
push(move(23.072820828947066,29.42850624639467,24.37468756880419))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.026212958054307407,0.6745576541204493,0.7377566347363874,-0.7892308919089424,0.4021471000775986,0.4641037698142444))
push(move(22.97067791562545,32.05702622695194,27.249472316035035))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7892308919089424,0.4021471000775986,0.4641037698142444,-0.919219152480741,-0.39281356301474335,0.027086055900599943))
push(move(17.836310502014168,32.09673358530302,27.45399453501095))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.919219152480741,-0.39281356301474335,0.027086055900599943,0.8919329549714524,-0.45027159964655744,-0.04136532832727562))
push(move(16.96328400633253,29.48986278222393,27.42648843542822))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8919329549714524,-0.45027159964655744,-0.04136532832727562,0.9654643450420374,0.02546486198439328,0.2592877537730348))
push(move(22.539633710635858,29.722370296003266,27.235867704211028))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9654643450420374,0.02546486198439328,0.2592877537730348,0.7135193248471725,0.6548018729576478,0.24924823016581585))
push(move(25.219251918413367,29.707620262868712,29.643733832566614))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7135193248471725,0.6548018729576478,0.24924823016581585,-0.8547406295486185,0.5190384373931431,0.004190072471395202))
push(move(25.301550230236067,32.257001170050366,28.200666806917223))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8547406295486185,0.5190384373931431,0.004190072471395202,-0.9350790598175682,-0.05484527332197326,0.3501701698959102))
push(move(21.39802557278883,32.02804739923389,29.6624660827537))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub109 inherits .../COPOLYFF



DPDPoly_sub110 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.7119381530797326,-0.11924562380387718,0.6920437467335742))
push(move(16.153679726739348,32.0221541368246,29.614111390916975))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7119381530797326,-0.11924562380387718,0.6920437467335742,-0.1279770157050595,-0.8065479988467367,0.5771500749437284))
push(move(18.56787165440802,31.617790610088736,31.960841116990057))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.1279770157050595,-0.8065479988467367,0.5771500749437284,0.3598091463713425,-0.932956957158099,0.011344350039869406))
push(move(15.622672617096924,28.675594449556044,32.00884447198898))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3598091463713425,-0.932956957158099,0.011344350039869406,0.8288117623783857,0.5595270512769157,0.0007358210341052607))
push(move(20.227935389365047,27.313375265250322,32.013180931827364))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8288117623783857,0.5595270512769157,0.0007358210341052607,0.8622753486858146,0.5064397512877535,-3.693717995966015e-05))
push(move(20.678089894482298,32.088483661061254,32.013332683350995))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8622753486858146,0.5064397512877535,-3.693717995966015e-05,0.6142127882734226,-0.7891401546535893,-0.0006833993686463171))
push(move(22.626738432430848,28.72226306236767,32.01307817460506))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6142127882734226,-0.7891401546535893,-0.0006833993686463171,0.06030485452957608,-0.9981692700416842,-0.0046295641930853984))
push(move(25.262348802130063,26.198631068570403,32.0082320411908))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.06030485452957608,-0.9981692700416842,-0.0046295641930853984,-0.5501140077054252,-0.8350712403851475,-0.0055319081596365265))
push(move(22.987804350027695,22.745880129086284,31.985359380546285))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub110 inherits .../COPOLYFF



DPDPoly_sub111 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.3183442050912495,-0.00463596307600304,-0.9479638573970942))
push(move(23.226926896245924,25.099544655462154,29.632008946085655))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3183442050912495,-0.00463596307600304,-0.9479638573970942,-0.025585952224825802,-0.37084495941850376,-0.9283422726142753))
push(move(23.967334013025113,25.088762301017805,27.427228160881555))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.025585952224825802,-0.37084495941850376,-0.9283422726142753,-0.8230517148796223,-0.5673510515339046,0.02643215763204764))
push(move(23.101941283248937,23.287992590779126,25.097120934330164))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8230517148796223,-0.5673510515339046,0.02643215763204764,-0.05413922864143536,-0.6273630149218724,0.7768427070071836))
push(move(20.570349377668954,22.747132036392557,27.536321710815425))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.05413922864143536,-0.6273630149218724,0.7768427070071836,0.9546049096176006,-0.29641823564853054,0.029422714167542035))
push(move(22.936529184323508,21.371204419050546,27.47061582750683))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9546049096176006,-0.29641823564853054,0.029422714167542035,0.04776506142115417,-0.31446144429240885,-0.9480677712911486))
push(move(25.292116031331446,21.28095715448946,27.681855417186362))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.04776506142115417,-0.31446144429240885,-0.9480677712911486,-0.7011638362869229,-0.10030643923686165,-0.7059092667836476))
push(move(23.055637047663346,20.587057395723566,25.106496046644573))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7011638362869229,-0.10030643923686165,-0.7059092667836476,-0.7456312626056499,-0.009198049318036961,-0.6662952919793499))
push(move(20.19492422872878,20.55176786467393,22.5501661573905))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub111 inherits .../COPOLYFF



DPDPoly_sub112 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.9534587194146305,0.2955532887348801,-0.05970530872719289))
push(move(18.60813700821697,19.464387479800067,25.368068564442105))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9534587194146305,0.2955532887348801,-0.05970530872719289,-0.8993475819305249,0.1945280172164561,0.39157729427732646))
push(move(16.125387153153625,20.23399068319887,25.212599487941386))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8993475819305249,0.1945280172164561,0.39157729427732646,-0.8190393902691893,0.44814491127439815,0.3582465850309485))
push(move(13.597098657723372,20.54827025671784,27.54988222384413))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8190393902691893,0.44814491127439815,0.3582465850309485,-0.934252802176348,0.29420360105639504,0.201533974185722))
push(move(10.878785138986172,23.10471707568456,27.507455238376338))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.934252802176348,0.29420360105639504,0.201533974185722,-0.6334105020291987,0.6863472193478061,0.3573774341122465))
push(move(6.7595484859642845,22.701468917989377,29.02485629574289))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6334105020291987,0.6863472193478061,0.3573774341122465,-0.38727387966847676,0.7360932135714913,0.5551447766668808))
push(move(6.924487194452858,27.389491941286767,29.73851526754444))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.38727387966847676,0.7360932135714913,0.5551447766668808,0.09700252427333554,-0.8304189795563939,0.5486299560515435))
push(move(4.523262054138441,26.951988647019785,32.230501697962836))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.09700252427333554,-0.8304189795563939,0.5486299560515435,0.6857047039814899,-0.7253489570344678,-0.06064610017690576))
push(move(7.321336870864983,23.99214217341036,31.983030265067057))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub112 inherits .../COPOLYFF



DPDPoly_sub113 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.07047433857253188,-0.6392462979439322,-0.7657659813335543))
push(move(4.478941271637475,22.837810993728038,30.26034544162568))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.07047433857253188,-0.6392462979439322,-0.7657659813335543,0.2480918205844907,-0.8229378378004443,-0.5111005416504689))
push(move(4.7365964462982095,20.500717522769698,27.46069422579083))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.2480918205844907,-0.8229378378004443,-0.5111005416504689,-0.02862379033697105,-0.870584096462574,0.49118632881340335))
push(move(5.94517207689329,17.974221352800328,27.2397244595017))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.02862379033697105,-0.870584096462574,0.49118632881340335,-0.21121378244560088,-0.641045362576273,0.7378682682054278))
push(move(4.608334754269315,16.599676187880142,29.66167421108983))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.21121378244560088,-0.641045362576273,0.7378682682054278,-0.7149571920116768,-0.6982609778160809,0.03560646640862966))
push(move(4.5610810158192185,13.773429407258961,32.07500018084992))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7149571920116768,-0.6982609778160809,0.03560646640862966,-0.3432235732730298,0.8820541664690732,-0.3227662097621768))
push(move(2.0625046115188432,14.113298171556105,29.788462243258394))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3432235732730298,0.8820541664690732,-0.3227662097621768,0.005622498489451643,0.8242846901606018,-0.5661476283422697))
push(move(2.253871232265101,19.702754083577844,29.905308426106767))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.005622498489451643,0.8242846901606018,-0.5661476283422697,-0.03209647911781792,0.17928459501798685,-0.9832735377388512))
push(move(2.1062549906104118,20.52730926316595,25.383094521375295))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub113 inherits .../COPOLYFF



DPDPoly_sub114 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.052913627411591314,-0.4761698759277585,-0.8777598745061718))
push(move(4.540236098564435,17.956313882069665,25.18373586489889))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.052913627411591314,-0.4761698759277585,-0.8777598745061718,-0.3721753239725636,-0.2767703395310633,-0.8859366271815255))
push(move(4.751635164012016,16.053933121393115,21.676933813423165))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3721753239725636,-0.2767703395310633,-0.8859366271815255,-0.029321660555482614,-0.013371474113384888,-0.999480587056249))
push(move(1.8982022136953718,15.991550050973515,18.894563966353694))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.029321660555482614,-0.013371474113384888,-0.999480587056249,0.8339397311343123,0.3310338091346169,-0.4415440431547648))
push(move(4.586249511511013,15.978512769023988,16.03947174883094))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8339397311343123,0.3310338091346169,-0.4415440431547648,0.7350446080270922,0.5537931904607389,0.39118093819818756))
push(move(7.629860536041413,18.266741670065173,15.859836761081919))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7350446080270922,0.5537931904607389,0.39118093819818756,-0.16797019531480997,0.42219420729040286,0.8908075352265116))
push(move(9.346228098601026,19.56474916812457,18.57266887614396))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.16797019531480997,0.42219420729040286,0.8908075352265116,-0.39813108151197885,0.5291941559595867,0.7492964615106111))
push(move(6.785842096630097,20.388187652180576,20.33597602072014))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.39813108151197885,0.5291941559595867,0.7492964615106111,0.018961756659805575,0.6478899028526827,0.7614979484975096))
push(move(6.858518208314323,22.87140267194798,23.25462490675016))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub114 inherits .../COPOLYFF



DPDPoly_sub115 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.8294106997413067,-0.35081545571912925,-0.4347486712840142))
push(move(6.653758267762812,19.40615455113717,25.067920313157817))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8294106997413067,-0.35081545571912925,-0.4347486712840142,0.046502714233621234,-0.24122400943418987,-0.969354669273017))
push(move(9.228606941625024,18.317072011919258,23.718272858563672))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.046502714233621234,-0.24122400943418987,-0.969354669273017,-0.35148540720848204,-0.37484170115715065,-0.857876277555861))
push(move(6.8687124545604705,18.291120479717137,20.58717444517907))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.35148540720848204,-0.37484170115715065,-0.857876277555861,0.0009147931194580117,-0.2709386900371314,-0.9625961715041838))
push(move(6.84367776770877,15.77366369295075,17.897336569336478))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.0009147931194580117,-0.2709386900371314,-0.9625961715041838,0.016161613785773785,0.020634784886431702,-0.9996564449312225))
push(move(6.876478901857405,15.99089432790631,12.41488688069924))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.016161613785773785,0.020634784886431702,-0.9996564449312225,-0.27339842137451886,0.02417672328417274,-0.961596999392761))
push(move(7.019553021498612,15.998217260243301,7.018792304797095))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.27339842137451886,0.02417672328417274,-0.961596999392761,-0.5486898086755373,0.7311357174686671,-0.4054381043971813))
push(move(4.598355030591165,16.19234966245348,4.402269002947268))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5486898086755373,0.7311357174686671,-0.4054381043971813,-0.2208008888499473,0.9750560722876714,0.022641187645807404))
push(move(3.615005767065105,20.534817102574582,4.5031028144089165))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub115 inherits .../COPOLYFF



DPDPoly_sub116 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.005505175185554526,0.8173455423626496,0.5761214780114369))
push(move(2.311581282337742,22.778368194005395,2.9123512279006523))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.005505175185554526,0.8173455423626496,0.5761214780114369,0.8023002196287197,0.5106778802959555,0.3090670803565754))
push(move(2.295601671544851,25.150838317123565,4.584631705405678))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8023002196287197,0.5106778802959555,0.3090670803565754,0.744781328015228,0.5452952304749873,-0.3846477415260668))
push(move(7.044422360495236,25.79090289166457,4.735565703019114))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.744781328015228,0.5452952304749873,-0.3846477415260668,-0.6103866577225361,0.48308814253065574,-0.6277371859469473))
push(move(7.1331028386355735,28.692638057003485,2.086268993346503))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6103866577225361,0.48308814253065574,-0.6277371859469473,-0.9559536958286805,0.2924222581081435,0.02533287181550505))
push(move(4.661836819919342,27.676590936537295,2.2852540463071307))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9559536958286805,0.2924222581081435,0.02533287181550505,-0.4786504006279474,0.7073872252353122,0.520093364265101))
push(move(2.335915484946529,30.160077708792834,2.2133949544011537))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4786504006279474,0.7073872252353122,0.520093364265101,-0.009278342988289846,-0.5773680792819457,0.8164312667810245))
push(move(2.2919093546433777,31.17905622533922,4.86037682247654))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.009278342988289846,-0.5773680792819457,0.8164312667810245,-0.0002452186961021474,-0.9457158077827519,0.32499469346069004))
push(move(2.290919112329803,27.36006597553804,6.172770625508554))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub116 inherits .../COPOLYFF



DPDPoly_sub117 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.689415453286444,-0.724351467378624,0.004613510190859935))
push(move(2.278253666032514,27.404119340049164,11.458643151468245))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.689415453286444,-0.724351467378624,0.004613510190859935,-0.023256803178987286,-0.9697633037532619,0.2429367320918195))
push(move(4.969648414185857,24.57633860808754,11.476653738609919))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.023256803178987286,-0.9697633037532619,0.2429367320918195,-0.12356271323572017,-0.35483039382663883,0.9267295438878915))
push(move(2.1707866070097652,22.92295271536409,12.581226333927894))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.12356271323572017,-0.35483039382663883,0.9267295438878915,0.2752526267117568,-0.006493530027311802,0.9613500015894642))
push(move(4.374660487475644,22.86773416886705,15.939107463521793))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.2752526267117568,-0.006493530027311802,0.9613500015894642,-0.09065551777935132,-0.0005713373493649827,0.9958821469781407))
push(move(4.564564930700097,22.866480696879453,20.941759792867025))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.09065551777935132,-0.0005713373493649827,0.9958821469781407,-0.26614588292320396,-0.007028003914495239,0.9639071408408624))
push(move(3.534856602281621,22.86244148136709,25.164642948997813))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.26614588292320396,-0.007028003914495239,0.9639071408408624,-0.16190803628787548,-0.3178036208962436,0.9342305102760456))
push(move(2.302518987429413,22.806747788109785,29.13426765239258))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.16190803628787548,-0.3178036208962436,0.9342305102760456,0.01216007971765455,-0.6194623118404563,0.7849322115129035))
push(move(2.347187955635505,20.531208239442197,32.0176461181688))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub117 inherits .../COPOLYFF



DPDPoly_sub118 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.7318340383491361,-0.6788591181967083,0.05974309964157249))
push(move(5.220162663909048,20.72233230358829,29.480627448215206))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7318340383491361,-0.6788591181967083,0.05974309964157249,0.95549637637774,-0.29365079154354795,0.028211475588067234))
push(move(8.064700607281072,18.083700566438385,29.712840634374817))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.95549637637774,-0.29365079154354795,0.028211475588067234,0.7599344453615628,0.6499970382188579,0.0018679024939194354))
push(move(13.550665669663017,18.162135465512087,29.72658942985462))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7599344453615628,0.6499970382188579,0.0018679024939194354,-0.24422388182477783,0.9694101297296789,-0.024468263606642778))
push(move(11.255493843954387,20.81289144081656,29.720683535404955))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.24422388182477783,0.9694101297296789,-0.024468263606642778,0.272963523282843,0.8935956346944505,0.3563393840316265))
push(move(11.476839384051987,26.39387837922677,29.51881725028079))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.272963523282843,0.8935956346944505,0.3563393840316265,0.8603335176916552,-0.4964443286408431,0.11562554603825531))
push(move(13.25437985628502,27.356607587898992,32.330123074494104))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8603335176916552,-0.4964443286408431,0.11562554603825531,-0.7970060137951255,-0.591618260627563,-0.12152879356934773))
push(move(13.740482314568727,25.087672504628106,29.823042233376754))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7970060137951255,-0.591618260627563,-0.12152879356934773,-0.8417220201417659,0.053330904914804717,0.5372707468208487))
push(move(10.476364888303621,25.29448464916673,31.906526763132828))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub118 inherits .../COPOLYFF



DPDPoly_sub119 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.012373039567738928,0.9836778180641234,-0.1795128355869311))
push(move(9.177774329713845,22.500334587802158,30.51057172975795))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.012373039567738928,0.9836778180641234,-0.1795128355869311,-0.4050291852812162,0.8822486115383922,0.23997655408188007))
push(move(9.117082640159627,27.32542776142955,29.630033263135196))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4050291852812162,0.8822486115383922,0.23997655408188007,-0.8791050709867257,0.3167739817760546,0.3561299181972328))
push(move(6.733338336213102,27.824889804145766,31.958880512708337))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8791050709867257,0.3167739817760546,0.3561299181972328,-0.5437675080612459,0.839232574080456,0.00236300214874365))
push(move(3.2532480916540165,29.43838362951618,32.005502347550184))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5437675080612459,0.839232574080456,0.00236300214874365,0.7129353122072717,0.5068665865934021,-0.484571464288884))
push(move(3.950774568088858,32.119405601884274,31.970972452858526))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7129353122072717,0.5068665865934021,-0.484571464288884,0.14352106690394673,-0.02435398654042569,-0.9893475560662903))
push(move(6.873042420259523,32.0119029433933,29.545182304198182))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.14352106690394673,-0.02435398654042569,-0.9893475560662903,-0.9628912474561598,0.05367919301676936,-0.2644976177763962))
push(move(4.4984658959978505,32.02646825466451,28.195519214985737))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9628912474561598,0.05367919301676936,-0.2644976177763962,-0.9944336858066616,0.10421069170717455,0.015549156468765138))
push(move(2.0963898278639173,32.27819143356148,28.23307853861524))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub119 inherits .../COPOLYFF



DPDPoly_sub120 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.008150867851073704,-0.7070954615472554,0.7070711220326766))
push(move(2.283812690417976,29.79372427446392,29.64071944019739))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.008150867851073704,-0.7070954615472554,0.7070711220326766,0.24795254170083433,-0.9684118802897803,0.026419068448911166))
push(move(2.31500465263771,27.08779217921811,32.3465583923285))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.24795254170083433,-0.9684118802897803,0.026419068448911166,0.4218797822115896,-0.017407161127309154,-0.9064846607100363))
push(move(3.4402567516269436,25.277077015745547,29.76393727293604))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.4218797822115896,-0.017407161127309154,-0.9064846607100363,0.23192660534286044,-0.052199577123670474,-0.971331690969798))
push(move(4.547347550965085,26.995683587716325,27.549967799220052))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.23192660534286044,-0.052199577123670474,-0.971331690969798,-0.1530480756300821,0.105585945045989,-0.9825619037774028))
push(move(4.5652253765321245,25.02388102552857,25.052456780640913))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.1530480756300821,0.105585945045989,-0.9825619037774028,-0.1396203675833825,0.9208369848052304,-0.36409531769949083))
push(move(3.830954507011251,27.48991415062169,22.950756014149988))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.1396203675833825,0.9208369848052304,-0.36409531769949083,-0.4024410993019391,0.6341118504536641,-0.6602600417311931))
push(move(3.8224353982266472,29.922797249609374,23.115444596701362))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4024410993019391,0.6341118504536641,-0.6602600417311931,-0.4926878929966735,-0.045553206532523254,-0.8690129719797649))
push(move(2.3720262421255014,29.788694527006072,20.557183293254578))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub120 inherits .../COPOLYFF



DPDPoly_sub121 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.005385340951572939,-0.1964776034096391,0.980493523416264))
push(move(2.2723607463979363,24.579736208428326,20.465932743966995))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.005385340951572939,-0.1964776034096391,0.980493523416264,0.0025418879669100673,0.05117816695143648,0.9986863041180922))
push(move(2.2858162046433637,24.08883020774737,22.9157292903465))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.0025418879669100673,0.05117816695143648,0.9986863041180922,-0.007009591510214671,0.8530170455930834,0.5218359757189104))
push(move(2.2893055418863097,24.92090135171987,27.123399713642982))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.007009591510214671,0.8530170455930834,0.5218359757189104,0.5397330474600904,0.7798233011504508,-0.317118048149671))
push(move(2.257220000095184,27.568783338156905,25.04460203286097))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5397330474600904,0.7798233011504508,-0.317118048149671,0.9980845087199754,-0.0579019598004977,-0.021787071957169352))
push(move(5.693676917382478,29.83964430599085,25.123174582248218))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9980845087199754,-0.0579019598004977,-0.021787071957169352,0.5488352919689858,-0.7453065801222557,0.3785471224508061))
push(move(8.402877600557758,27.212254791505107,24.91044917987548))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5488352919689858,-0.7453065801222557,0.3785471224508061,0.802187539486534,0.12327815635223223,0.5842068534850778))
push(move(9.084472617678873,25.235016316025575,27.4619016538271))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.802187539486534,0.12327815635223223,0.5842068534850778,0.6614329875539957,0.7359681340013535,-0.14442059655728254))
push(move(11.255445286173794,27.650630193568556,26.98788059078177))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub121 inherits .../COPOLYFF



DPDPoly_sub122 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.07925944979613725,-0.976265925028582,0.2015509445428143))
push(move(13.920433514935642,27.628757664403164,26.437643473471955))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.07925944979613725,-0.976265925028582,0.2015509445428143,0.3472362326672854,-0.8999287187646124,-0.26373338784786826))
push(move(13.55421982347738,23.11797757232315,27.368897924616537))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3472362326672854,-0.8999287187646124,-0.26373338784786826,-0.14297285107369972,0.6987630680069099,-0.7009200658031046))
push(move(15.779462949885588,22.810729416921184,25.025670629445504))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.14297285107369972,0.6987630680069099,-0.7009200658031046,-0.994574522280196,0.10340705790499723,0.011335784337758368))
push(move(13.098148711672458,25.346971726953623,25.13302313232875))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.994574522280196,0.10340705790499723,0.011335784337758368,-0.45028825060650157,-0.6697275721094225,-0.5905128876850654))
push(move(8.78929444894332,23.53750528212778,25.105341926906057))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.45028825060650157,-0.6697275721094225,-0.5905128876850654,-0.001230152785582845,-0.25400051129859114,-0.9672033017851925))
push(move(11.434650810785074,22.87280010717487,22.95149397231191))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.001230152785582845,-0.25400051129859114,-0.9672033017851925,0.00562438147697282,-0.5225363689363188,-0.8525984456189494))
push(move(8.7835508980333,22.351583594259147,20.58949522131885))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.00562438147697282,-0.5225363689363188,-0.8525984456189494,0.7794918917744703,-0.5006601972644069,-0.3764727845847861))
push(move(11.458755662348683,20.633325124660672,19.297446134491793))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub122 inherits .../COPOLYFF



DPDPoly_sub123 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.0007912301948103628,-0.7110364469433886,0.7031547092019654))
push(move(15.800550329946299,20.536795589411494,18.138305028316474))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.0007912301948103628,-0.7110364469433886,0.7031547092019654,-0.6254595164335407,0.35194480791233845,0.6963729212758555))
push(move(15.803249995914518,18.110749527763776,20.537458714912646))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6254595164335407,0.35194480791233845,0.6963729212758555,-0.43975287254433637,0.7169994339514066,0.5408597071351935))
push(move(13.790509199287104,21.667841677989024,20.376240781573973))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.43975287254433637,0.7169994339514066,0.5408597071351935,0.46206286892236403,-0.7148215249300993,0.5249076991813338))
push(move(13.786834968263241,21.39843341501641,23.01748263154668))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.46206286892236403,-0.7148215249300993,0.5249076991813338,0.7985084861359417,0.5473566113788557,-0.25056922705859724))
push(move(15.984461148100127,18.27374926512866,22.86859051798905))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7985084861359417,0.5473566113788557,-0.25056922705859724,-0.17047055413007606,0.9488003345590961,-0.26592802656946896))
push(move(15.986983087055698,22.906577210283206,22.327083690130298))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.17047055413007606,0.9488003345590961,-0.26592802656946896,-0.35420414301015474,0.660230389783892,-0.66229544576439))
push(move(14.696866608202418,25.440207639512938,20.8599886408851))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.35420414301015474,0.660230389783892,-0.66229544576439,-0.28942576967597466,0.5021613684237073,-0.8149028677764606))
push(move(13.697491442238746,27.174149995339885,18.04616287257109))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub123 inherits .../COPOLYFF



DPDPoly_sub124 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.8018167788567606,-0.25355563926327734,0.5411094075522613))
push(move(11.221123912180984,27.434103819789144,20.7802277863875))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8018167788567606,-0.25355563926327734,0.5411094075522613,0.03663526071553909,-0.9594098577130001,0.27962579029021145))
push(move(14.151467600847788,26.507451763068147,22.757782483558866))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.03663526071553909,-0.9594098577130001,0.27962579029021145,-0.5120140490799604,0.1754373581758922,-0.8408705886764074))
push(move(11.304402031028017,25.253203599806554,21.415864310917723))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5120140490799604,0.1754373581758922,-0.8408705886764074,0.42013468609825244,0.4247169334383308,-0.8019366383872627))
push(move(11.433611548311248,27.438702549284184,18.294301016711))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.42013468609825244,0.4247169334383308,-0.8019366383872627,-0.03493474290591446,0.8679955182892538,-0.4953416436843036))
push(move(14.098326021192014,28.07759984374042,16.08293159500845))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.03493474290591446,0.8679955182892538,-0.4953416436843036,-0.16981414543174872,0.8352755409829163,-0.522951170423187))
push(move(11.289774694651385,31.012501408426534,16.254830346892707))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.16981414543174872,0.8352755409829163,-0.522951170423187,0.8589405087354864,-0.252176442126666,-0.4456772873835505))
push(move(13.310455442245743,31.952948522030397,13.656644666116868))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8589405087354864,-0.252176442126666,-0.4456772873835505,0.7692563934443907,-0.6386863622775005,0.018009213910169592))
push(move(16.16823796618202,29.58023281898565,13.723548779259001))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub124 inherits .../COPOLYFF



DPDPoly_sub125 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.9802592625911494,-0.17510454169822687,0.09181599850195074))
push(move(20.54402140740587,30.62501057419651,13.73649467266698))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9802592625911494,-0.17510454169822687,0.09181599850195074,0.5061025153414277,-0.6992963126445475,-0.5048216626560502))
push(move(23.0076813686089,30.184924910260623,13.967253419806184))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5061025153414277,-0.6992963126445475,-0.5048216626560502,0.10814377739826843,-0.08064823944880756,-0.9908586099357676))
push(move(22.86781382397523,27.41416016543685,11.418583348696055))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.10814377739826843,-0.08064823944880756,-0.9908586099357676,0.5613963498102233,0.734326658222773,-0.3815737116772227))
push(move(23.52746023391743,29.797299737566192,9.204821624429965))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5613963498102233,0.734326658222773,-0.3815737116772227,0.8772697226783954,0.326903431427287,0.3514711655212077))
push(move(26.54669687082814,32.226271777315226,8.918094951347891))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8772697226783954,0.326903431427287,0.3514711655212077,0.8525421133583639,-0.05230207785938385,-0.5200350349755731))
push(move(29.486029602808795,32.01768501102695,11.592075244136804))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8525421133583639,-0.05230207785938385,-0.5200350349755731,0.30725863930520114,-0.006623776062010231,-0.9516029918842189))
push(move(30.0443322706761,32.01169751037847,6.7846015801797614))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.30725863930520114,-0.006623776062010231,-0.9516029918842189,0.5190735489101269,-0.012669407638433853,-0.8546356749702985))
push(move(32.16645044788362,31.95990142040158,3.29061136520446))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub125 inherits .../COPOLYFF



DPDPoly_sub126 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.023949797374282742,0.572229578956682,0.8197436893156234))
push(move(29.61262205207984,30.306099319696305,2.0813279594093106))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.023949797374282742,0.572229578956682,0.8197436893156234,-0.8903318895427129,0.4477906236802807,-0.08241773963976333))
push(move(29.685429963027772,32.045689829601365,4.573366810473265))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8903318895427129,0.4477906236802807,-0.08241773963976333,-0.8770417523660354,-0.4795899915746728,0.02812835914373951))
push(move(27.463018801139825,31.387237928466096,1.8823398706464138))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8770417523660354,-0.4795899915746728,0.02812835914373951,-0.5058832066912394,-0.851666818368511,0.13691534493199273))
push(move(26.023600566308662,30.0433031418722,4.690808485417642))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5058832066912394,-0.851666818368511,0.13691534493199273,-0.17741501974224147,-0.9821708355444589,0.06216398133774402))
push(move(25.166507442123663,27.521004583277826,2.5038818406131))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.17741501974224147,-0.9821708355444589,0.06216398133774402,0.0061827957153042295,-0.18243407738602965,0.9831986474998076))
push(move(25.153972394627264,25.229035278676413,4.995515209311254))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.0061827957153042295,-0.18243407738602965,0.9831986474998076,0.5240508818913742,0.6394536287089141,0.5625564237655413))
push(move(25.210930423598,26.210227709323057,9.568099601417495))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5240508818913742,0.6394536287089141,0.5625564237655413,0.5102287624400352,0.3534582011992865,-0.7840496859152964))
push(move(26.93935942208723,27.407587501007647,6.912086626155959))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub126 inherits .../COPOLYFF



DPDPoly_sub127 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.7369830961765037,0.042528367607712156,0.6745719041723556))
push(move(27.513056176860808,27.441528943764975,2.2291843574978234))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7369830961765037,0.042528367607712156,0.6745719041723556,0.6853646308880038,-0.5557782774966301,0.4705165554904832))
push(move(30.312501848868617,27.60307383570976,4.791559814127155))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6853646308880038,-0.5557782774966301,0.4705165554904832,0.4378711117481211,-0.6943649988917543,0.5710745466316272))
push(move(30.567879187410597,24.964301210754236,4.326381580375572))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.4378711117481211,-0.6943649988917543,0.5710745466316272,0.1958666217945596,0.07357032413010457,0.9778668998765518))
push(move(31.864491790775034,25.141967210087554,6.81567588086801))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.1958666217945596,0.07357032413010457,0.9778668998765518,0.148287929818988,0.8914436326568796,0.42818096602430306))
push(move(32.03294737825223,25.514601923991528,11.640755396393727))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.148287929818988,0.8914436326568796,0.42818096602430306,-0.5586950361991024,0.49418185921535607,-0.6660661728003741))
push(move(32.23897130155123,27.39317791785993,7.8969843789783445))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5586950361991024,0.49418185921535607,-0.6660661728003741,-0.5062878125549679,-0.44254998578921345,0.7401500935190596))
push(move(29.61752761918313,27.651110305098555,8.761135406256175))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5062878125549679,-0.44254998578921345,0.7401500935190596,0.02353900364309273,-0.6565301137373697,0.7539324406493509))
push(move(29.706153808421842,25.179223092570933,11.599749995527517))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub127 inherits .../COPOLYFF



DPDPoly_sub128 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.8294866699199327,0.36843917755130423,-0.41976712218855267))
push(move(32.42848758901147,25.87255776596771,13.6253312101853))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8294866699199327,0.36843917755130423,-0.41976712218855267,-0.4223121179749641,0.6135304529576624,-0.6672577150584814))
push(move(29.562990856832474,27.145346464768483,12.175227958949709))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4223121179749641,0.6135304529576624,-0.6672577150584814,0.3971973300686599,0.38286427424282166,-0.8340558905102495))
push(move(29.75149181196147,29.761668122390404,9.395648922163717))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3971973300686599,0.38286427424282166,-0.8340558905102495,0.29591248106704043,-0.12745998426334312,-0.9466729931503998))
push(move(32.2152730006126,29.7019197375295,6.605826107903606))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.29591248106704043,-0.12745998426334312,-0.9466729931503998,-0.033741821605424625,-0.8229529798911258,-0.5671065881852053))
push(move(32.02553655454039,28.78215652471102,2.120603492338155))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.033741821605424625,-0.8229529798911258,-0.5671065881852053,-0.27701751826347554,-0.9606712617654664,0.019287856104079543))
push(move(31.95796714258441,23.426306491631163,2.281227128843921))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.27701751826347554,-0.9606712617654664,0.019287856104079543,-0.2383533466230963,-0.9711783440401709,0.0005533723532917287))
push(move(29.63933200112108,20.507018715615743,2.286747389481426))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2383533466230963,-0.9711783440401709,0.0005533723532917287,0.04649480193500562,-0.9989185230662359,-0.00013292176138468635))
push(move(29.89474308757592,15.019634005108477,2.2860172069647606))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub128 inherits .../COPOLYFF



DPDPoly_sub129 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.9851093878913548,-0.1715804481671656,-0.010938176039675663))
push(move(27.44294409952598,12.2259962521274,2.2737391287273003))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9851093878913548,-0.1715804481671656,-0.010938176039675663,-0.6612466627863027,-0.12369254178474308,0.7399006731047129))
push(move(22.93845902236136,11.441432042505378,2.223723514880006))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6612466627863027,-0.12369254178474308,0.7399006731047129,0.7708682069578005,0.0011198698381607506,0.6369936839507998))
push(move(23.202311928548152,11.432745258931966,7.01878628628097))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7708682069578005,0.0011198698381607506,0.6369936839507998,0.8235179517692182,0.02556624615387408,-0.5667138168171226))
push(move(28.769049098418733,11.449902364547357,7.041731338567664))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8235179517692182,0.02556624615387408,-0.5667138168171226,-0.27982591531932494,-0.41452669842242174,-0.8659475003778859))
push(move(29.662486478191024,11.633302408145694,2.5731392078321895))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.27982591531932494,-0.41452669842242174,-0.8659475003778859,-0.9414535938547385,-0.3333426159417093,0.05047604397271325))
push(move(27.2332420078241,9.174798423758165,2.2890324698963993))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9414535938547385,-0.3333426159417093,0.05047604397271325,-0.597319148542314,-0.0011761579497187188,0.8020027752053992))
push(move(22.65577145440562,9.152418878216677,2.9488043048198933))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.597319148542314,-0.0011761579497187188,0.8020027752053992,-0.006892909054499969,0.0024001228106282084,0.999973363252872))
push(move(22.617600862937046,9.165709943941545,8.48631748341947))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub129 inherits .../COPOLYFF



DPDPoly_sub130 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.6474563832829472,-0.761346046080374,-0.033947457400320236))
push(move(25.19518906778694,9.221068676374426,6.938448903196719))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6474563832829472,-0.761346046080374,-0.033947457400320236,0.7208484317488751,-0.668598424690181,-0.18262991251981578))
push(move(27.54517247419115,6.45771562122592,6.815234484990106))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7208484317488751,-0.668598424690181,-0.18262991251981578,-0.0465044503989475,-0.8795691638858247,-0.4734927898440302))
push(move(30.200041568614566,4.5789881078676125,5.67044895460398))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0465044503989475,-0.8795691638858247,-0.4734927898440302,-0.6176740546769672,0.02190116597664697,-0.7861291885611286))
push(move(27.346176730337834,2.693978633983493,4.789126249845208))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6176740546769672,0.02190116597664697,-0.7861291885611286,0.8835128759415234,0.18605203007584692,-0.4298716554393816))
push(move(27.566696598592454,4.6723598867622025,2.3189250743146195))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8835128759415234,0.18605203007584692,-0.4298716554393816,0.5262698958158537,-0.6987331867129997,0.48457396808316777))
push(move(32.3697297496871,3.751849167502964,2.3449252524189945))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5262698958158537,-0.6987331867129997,0.48457396808316777,-0.07320385256425138,-0.31493238434832815,0.9462868430124283))
push(move(29.331313326650232,2.3294626784553953,3.9437326813225946))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.07320385256425138,-0.31493238434832815,0.9462868430124283,0.6919304911914235,-0.011840227128084812,0.7218670268000547))
push(move(32.02837818295429,2.2833108454543245,6.757486683628167))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub130 inherits .../COPOLYFF



DPDPoly_sub131 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.3714124021271005,0.4446723063923833,-0.8150578920996076))
push(move(31.974067446015685,2.77018585977574,11.735035842451108))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3714124021271005,0.4446723063923833,-0.8150578920996076,-0.6409910457463605,0.6598400913077531,-0.39209888188563247))
push(move(30.700663870751395,4.294764203250937,8.940574408468517))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6409910457463605,0.6598400913077531,-0.39209888188563247,-0.9990179868194118,0.021192783174684305,0.038909227088190335))
push(move(27.73197861801686,7.137017967926506,9.140119271688206))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9990179868194118,0.021192783174684305,0.038909227088190335,-0.741176666782736,-0.6600857675473398,0.12224536023208608))
push(move(25.057324495459245,4.414479833339331,9.160368222179562))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.741176666782736,-0.6600857675473398,0.12224536023208608,0.11168725553049463,-0.3164541977146897,0.9420099244173695))
push(move(22.407448420674484,2.395035712335623,10.018316253881576))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.11168725553049463,-0.3164541977146897,0.9420099244173695,0.5224614441264835,0.8381195970686109,-0.15681065145843362))
push(move(25.314290861153257,3.686392418986532,11.327713686757928))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5224614441264835,0.8381195970686109,-0.15681065145843362,-0.785637130552965,0.14468386675366526,-0.601532108700534))
push(move(25.190015750046513,6.858760710854322,9.183161429442228))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.785637130552965,0.14468386675366526,-0.601532108700534,-0.7269009233359559,-0.6863628185335467,-0.022828249780048607))
push(move(22.398893998695634,4.223295366642511,9.09550653389752))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub131 inherits .../COPOLYFF



DPDPoly_sub132 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.5735111101140432,-0.7637720518490009,-0.2962047592293631))
push(move(20.57685502361743,7.3152632109561315,7.858736229477369))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5735111101140432,-0.7637720518490009,-0.2962047592293631,-0.36439974545861437,-0.7610023906627035,-0.5367384716184846))
push(move(18.58608106398443,4.664054742450432,6.830549135985979))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.36439974545861437,-0.7610023906627035,-0.5367384716184846,-0.018833308293377843,-0.221220212079197,-0.9750420115391757))
push(move(18.287002386026742,2.533198038877906,4.485923761166885))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.018833308293377843,-0.221220212079197,-0.9750420115391757,-0.954974438979821,-0.1789025845148957,-0.23668055718429146))
push(move(18.49420522027636,3.5848607254756715,2.073933566087674))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.954974438979821,-0.1789025845148957,-0.23668055718429146,-0.9251835090403748,0.3699183881712168,0.08482841913266728))
push(move(15.877555480379543,2.0818181264142903,3.888767216596171))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9251835090403748,0.3699183881712168,0.08482841913266728,-0.8327592537720578,0.001621438873452997,-0.5536329074332423))
push(move(16.021659663938184,4.573464670469472,2.3006368403334707))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8327592537720578,0.001621438873452997,-0.5536329074332423,-0.8757719040566028,-0.193608000718544,0.4421985008147822))
push(move(13.224581069855592,2.0869836479260777,2.125023458011173))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8757719040566028,-0.193608000718544,0.4421985008147822,-0.5041034365908206,0.45367311237803415,0.7348880406718783))
push(move(11.55814518988229,3.5867098893473868,4.5543736862520054))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub132 inherits .../COPOLYFF



DPDPoly_sub133 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.09809918864342923,-0.7285006672864681,-0.6779847542169896))
push(move(13.457521345917788,4.511514023569461,7.083401694015063))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.09809918864342923,-0.7285006672864681,-0.6779847542169896,-0.7947099500704412,-0.6040267637598414,-0.05989794588171866))
push(move(13.77883377220909,2.1253952370882847,4.862741876350361))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7947099500704412,-0.6040267637598414,-0.05989794588171866,-0.732352816680181,0.4055894802814402,0.5469520320701224))
push(move(10.235658509993042,2.0627069060931635,6.840567228726896))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.732352816680181,0.4055894802814402,0.5469520320701224,-0.5429320046788076,0.40326068226877665,0.7366177166153227))
push(move(9.107165152885704,4.712644994585888,8.35174142178803))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5429320046788076,0.40326068226877665,0.7366177166153227,-0.9625356705290659,-0.0259978614878146,0.26990589870771997))
push(move(6.85560757961857,4.573226883806363,11.42641845304159))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9625356705290659,-0.0259978614878146,0.26990589870771997,-0.519581686828547,0.05580758342803707,0.852596261042895))
push(move(4.321481151159348,4.583384798199665,9.69370139373081))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.519581686828547,0.05580758342803707,0.852596261042895,0.0821108684769951,-0.48090836338282383,0.8729174939857762))
push(move(4.575238577650993,4.8181583095092275,15.168340337823564))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.0821108684769951,-0.48090836338282383,0.8729174939857762,0.051894709478618635,-0.906078774849915,-0.41991450664939733))
push(move(4.723559313042365,2.2284864227512275,13.968178913788522))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub133 inherits .../COPOLYFF



DPDPoly_sub134 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.01011830763004035,0.7057385033759924,0.7084001585991623))
push(move(2.3318211346338438,2.222623189464407,16.463277671201205))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.01011830763004035,0.7057385033759924,0.7084001585991623,-0.007188277701457572,-0.010476263301242739,0.9999192850280115))
push(move(2.2916113578996335,5.02720165169991,19.27843345191528))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.007188277701457572,-0.010476263301242739,0.9999192850280115,-0.0014205189790471235,-0.3166450461070206,0.9485430390349786))
push(move(2.291256537400063,2.1635039652246726,22.105981632850714))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0014205189790471235,-0.3166450461070206,0.9485430390349786,0.3366880823916629,0.01539747550387937,0.9414903360754864))
push(move(2.2793188269722116,2.2870981545284077,27.48669734371473))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3366880823916629,0.01539747550387937,0.9414903360754864,0.5096157864229774,-0.040842659269207056,-0.8594321540484214))
push(move(4.812306004041257,2.2787970196474303,29.155663025641577))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5096157864229774,-0.040842659269207056,-0.8594321540484214,-0.029399334847712205,0.5645768993652214,-0.8248567171416286))
push(move(4.58879276223696,2.1020076225195665,23.591927574444146))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.029399334847712205,0.5645768993652214,-0.8248567171416286,-0.11476679451929439,0.8200690767133434,0.5606382900714957))
push(move(4.583548474499711,6.671794936233429,22.73741629262911))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.11476679451929439,0.8200690767133434,0.5606382900714957,-0.09596049681604811,-0.6736996139348322,0.7327485334238993))
push(move(4.263608048113984,4.425623345944592,25.18046198325909))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub134 inherits .../COPOLYFF



DPDPoly_sub135 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.056476423384744005,0.271090580418897,0.960895577474375))
push(move(2.335243164598056,5.5884864924054,22.46480615398945))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.056476423384744005,0.271090580418897,0.960895577474375,0.342176524743924,0.5538283040052935,0.7590714298383195))
push(move(2.0649812988682013,6.885761384384333,27.06306886214001))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.342176524743924,0.5538283040052935,0.7590714298383195,0.4218025297128615,0.38970676668788506,-0.8186643157763167))
push(move(4.561452562688664,9.191707888811436,27.40334468229084))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.4218025297128615,0.38970676668788506,-0.8186643157763167,0.027450952475231827,0.15450954998022712,-0.9876098643559157))
push(move(4.580058417302094,9.209461463809602,22.181628512104645))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.027450952475231827,0.15450954998022712,-0.9876098643559157,-0.3698616300176289,0.678598681139654,-0.6345913682017938))
push(move(4.8193399200914895,10.643244391009402,18.125265960122224))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3698616300176289,0.678598681139654,-0.6345913682017938,-0.7174021440179943,0.10545852569911121,0.6886310065018527))
push(move(2.2394075276389396,13.503939392374583,18.165648669904495))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7174021440179943,0.10545852569911121,0.6886310065018527,0.1555012588777363,-0.9283070157726911,0.33773575907007514))
push(move(2.3138153937367236,11.011557930152811,20.530307387424514))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.1555012588777363,-0.9283070157726911,0.33773575907007514,0.24216955632042103,-0.9701264434024256,0.014442638364600724))
push(move(3.3567893865930536,6.833424784002201,20.592508831864446))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub135 inherits .../COPOLYFF



DPDPoly_sub136 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.6656220359286126,-0.10591295767497096,-0.7387352372012511))
push(move(4.600309000866586,2.637296313786415,20.81400195342885))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6656220359286126,-0.10591295767497096,-0.7387352372012511,0.38103911074539215,0.45685698582236806,-0.8037977921017583))
push(move(6.922561921948382,2.2677822922171345,18.23666831677526))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.38103911074539215,0.45685698582236806,-0.8037977921017583,-0.0382896568359597,0.8869249568783081,-0.4603238241127606))
push(move(6.865933270581073,5.353726847237321,16.03469260073221))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0382896568359597,0.8869249568783081,-0.4603238241127606,0.525481928998974,0.8486337361491864,-0.06074145343166168))
push(move(6.619154649552229,9.29577638313827,14.58906195426923))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.525481928998974,0.8486337361491864,-0.06074145343166168,0.8302670664737392,-0.024433850658578702,0.5568299428650421))
push(move(9.215949348096887,9.148915252045043,15.763049782475825))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8302670664737392,-0.024433850658578702,0.5568299428650421,0.592079737628866,0.013824702672910548,-0.805760796939972))
push(move(11.632516669929352,9.14823862830049,17.951341635221336))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.592079737628866,0.013824702672910548,-0.805760796939972,-0.38158050593710097,0.24899316405468933,-0.8901678053843671))
push(move(11.659350191885954,9.205967179394221,12.437827711847591))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.38158050593710097,0.24899316405468933,-0.8901678053843671,-0.8097800960551652,0.5069041160575326,-0.29547320209592415))
push(move(8.825906846148918,10.979638947281297,11.403958662212075))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub136 inherits .../COPOLYFF



DPDPoly_sub137 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.19945081671410014,0.5845214775962498,0.7864820493442779))
push(move(11.406794757255437,11.535713811013297,9.043103304076938))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.19945081671410014,0.5845214775962498,0.7864820493442779,-0.948148956194121,0.3166136516807582,-0.02773720312819131))
push(move(10.69920270081969,13.60942181169832,11.833307224089143))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.948148956194121,0.3166136516807582,-0.02773720312819131,-0.8659016977303305,-0.3157080918659367,-0.38799826107612995))
push(move(9.39139988219327,12.208710945908075,8.98414482854636))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8659016977303305,-0.3157080918659367,-0.38799826107612995,-0.9251837926334133,-0.10897043369088216,0.3635387110469451))
push(move(4.755808056251551,11.442457839504796,9.17015643800558))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9251837926334133,-0.10897043369088216,0.3635387110469451,0.6712805056902911,-0.26832885258236927,0.6909284402541381))
push(move(2.6321171446569003,11.41258591949348,11.640115408199046))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6712805056902911,-0.26832885258236927,0.6909284402541381,0.6622971914988071,-0.7010276259406146,0.26442900332765706))
push(move(7.031598181738843,10.53276338552637,11.512557428976956))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6622971914988071,-0.7010276259406146,0.26442900332765706,-0.017248928623410997,-0.9695640351975,0.24422951523696987))
push(move(6.862632579544191,6.934674447284699,13.329192448489547))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.017248928623410997,-0.9695640351975,0.24422951523696987,0.0044583074095979535,-0.9982622506984112,0.05875884891302576))
push(move(6.88369308991403,2.2190031058711273,13.606762215031102))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub137 inherits .../COPOLYFF



DPDPoly_sub138 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.35301143107394567,0.4343225409587986,-0.8287019125995896))
push(move(3.5506737844968708,2.322138924090471,11.66909008333972))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.35301143107394567,0.4343225409587986,-0.8287019125995896,-0.3928815546471989,0.7044507731992993,0.591094909601588))
push(move(2.3205268692749907,3.8356325023193256,8.78129379209351))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3928815546471989,0.7044507731992993,0.591094909601588,-0.0045651930638456765,0.4276352007381495,0.9039398730567937))
push(move(2.287044658931633,4.587871443248666,13.570234931986645))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0045651930638456765,0.4276352007381495,0.9039398730567937,-0.004205658988784367,0.5142970957395295,-0.8576017780685598))
push(move(2.2860536497005506,7.064841424403232,15.607230239943993))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.004205658988784367,0.5142970957395295,-0.8576017780685598,-0.0380783420047878,0.4302067318778526,-0.9019269414521022))
push(move(2.2702385341100584,6.643040730492812,10.143194706456931))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0380783420047878,0.4302067318778526,-0.9019269414521022,0.6234174933758867,0.6987947572840644,-0.3507656142572013))
push(move(2.093332861766002,9.242188860691876,11.042428789445141))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6234174933758867,0.6987947572840644,-0.3507656142572013,0.7150007232721008,0.01413394650918508,-0.6989808275456831))
push(move(4.504551215423634,9.14750363765386,8.886059530702294))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7150007232721008,0.01413394650918508,-0.6989808275456831,0.6870572310899269,0.05124197802437955,-0.7247941920953781))
push(move(7.10150349503241,9.341189062419673,6.146468352215839))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub138 inherits .../COPOLYFF



DPDPoly_sub139 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.005392271733998738,-0.9883065068633283,0.15238494642566447))
push(move(6.8666531226681915,6.871407309483793,6.21914613361595))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.005392271733998738,-0.9883065068633283,0.15238494642566447,-0.4736658041617582,-0.822238194997666,-0.3155393107915006))
push(move(6.841905095485086,2.3355386619748595,6.918522385866088))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4736658041617582,-0.822238194997666,-0.3155393107915006,-0.8659811505416556,0.1822171779692336,-0.46569684018627294))
push(move(4.472683740557306,2.71570713790393,4.624368882967611))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8659811505416556,0.1822171779692336,-0.46569684018627294,-0.6291829812505605,0.39820529469412197,0.6675037972792548))
push(move(2.0493305209118495,3.3439779491806014,4.341229757337369))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6291829812505605,0.39820529469412197,0.6675037972792548,0.030967026391486577,0.9233648754008363,0.38267264097720227))
push(move(2.2825658098767145,4.101816714911451,6.947877431010329))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.030967026391486577,0.9233648754008363,0.38267264097720227,0.4311897208410547,0.9022414350836309,-0.005984768938183839))
push(move(2.253021108929063,9.417558668462851,6.85832049357207))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.4311897208410547,0.9022414350836309,-0.005984768938183839,0.6977007983157836,0.681611591421604,0.2204976971971057))
push(move(5.6700801702960115,11.190009383209658,6.9008598660221265))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6977007983157836,0.681611591421604,0.2204976971971057,0.3539352419559795,0.8293876723057013,0.4322567911888638))
push(move(6.816024984781347,13.875338193712768,8.300388281591879))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub139 inherits .../COPOLYFF



DPDPoly_sub140 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.9940208369587802,0.10279687893221526,0.036815450201806356))
push(move(6.826185005392018,13.717753686111136,13.678045385226422))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9940208369587802,0.10279687893221526,0.036815450201806356,0.8778016623373219,0.2982615873734431,-0.3748389882273565))
push(move(11.630655956581561,14.214609084247279,13.855988094748193))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8778016623373219,0.2982615873734431,-0.3748389882273565,0.32709704890287045,0.6659365580134248,-0.6704744747566947))
push(move(12.701819327813114,15.714191030698618,11.169031197732314))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.32709704890287045,0.6659365580134248,-0.6704744747566947,0.15864243041705473,0.761794683041095,-0.6280934963535982))
push(move(13.698037338321338,18.423588792485617,9.618326976456206))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.15864243041705473,0.761794683041095,-0.6280934963535982,0.15918339924089056,0.9812741538273306,-0.10845128139663131))
push(move(13.732114925972832,20.661629786997075,7.089908337444297))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.15918339924089056,0.9812741538273306,-0.10845128139663131,0.8917231271359958,0.3149107263021578,0.3250555321643488))
push(move(14.461475079089004,23.12974362172112,9.098198611013347))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8917231271359958,0.3149107263021578,0.3250555321643488,0.8635211283185182,-0.05835828254038959,-0.500924716705464))
push(move(20.0100974724383,22.878690198752214,9.37839104632508))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8635211283185182,-0.05835828254038959,-0.500924716705464,-0.5491412801698519,-0.0037726334744769205,-0.8357210190309224))
push(move(18.345500607530646,22.867254318622937,6.845092898012466))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub140 inherits .../COPOLYFF



DPDPoly_sub141 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.1493756101667098,0.9852509332234813,0.08347170580251882))
push(move(16.55435951346859,22.72723072106218,4.348904332602376))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.1493756101667098,0.9852509332234813,0.08347170580251882,-0.10282768989263916,0.9942138891565054,0.031067809701348474))
push(move(16.92687050834487,25.184236954732153,4.5570650098228))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.10282768989263916,0.9942138891565054,0.031067809701348474,0.5388596540994924,0.8355972945201361,0.1068055924303795))
push(move(15.85576817847366,29.481726604627326,4.559972992000384))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5388596540994924,0.8355972945201361,0.1068055924303795,0.6117202376619715,0.1652441876302251,0.7736231054520076))
push(move(18.253637357995906,27.241623848690846,4.820039085383861))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6117202376619715,0.1652441876302251,0.7736231054520076,0.3949595241882601,0.0002851603425322914,0.9186984777044982))
push(move(18.343704840300703,30.153793747820718,7.706387264392196))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3949595241882601,0.0002851603425322914,0.9186984777044982,0.3384026264944648,-0.7539296263042246,0.5630930482277507))
push(move(19.994590068364875,27.242880814634994,8.8695948165912))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3384026264944648,-0.7539296263042246,0.5630930482277507,-0.7565516452333458,-0.48239011959309247,0.4415080753663283))
push(move(20.584728552060735,25.161001029133637,11.435391634357586))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7565516452333458,-0.48239011959309247,0.4415080753663283,-0.9925685377761305,-0.1177839985660944,-0.03057167804907845))
push(move(15.847938687263694,24.598905788946826,11.289495800245046))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub141 inherits .../COPOLYFF



DPDPoly_sub142 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.9133082614574759,-0.4024712319749916,-0.062329182459385984))
push(move(16.2568150686911,24.190447589982252,13.930950405247469))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9133082614574759,-0.4024712319749916,-0.062329182459385984,-0.8619923946312976,-0.2885195878947589,0.41680398150550285))
push(move(13.81165813210229,23.112930429379063,13.764079438155518))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8619923946312976,-0.2885195878947589,0.41680398150550285,-0.5416183076410208,-0.8333943252915048,-0.11001594157209171))
push(move(11.493324106810688,22.596047850701485,16.23426770960312))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5416183076410208,-0.8333943252915048,-0.11001594157209171,0.7189308967448409,-0.29204167346579535,-0.6307535387653063))
push(move(12.2090358338676,20.64695704906332,13.438547603951756))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7189308967448409,-0.29204167346579535,-0.6307535387653063,0.45016532316293284,0.6659076590743608,-0.5949102213004221))
push(move(16.334996715542257,20.62928000496052,11.986429502443185))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.45016532316293284,0.6659076590743608,-0.5949102213004221,-0.7970107984785961,0.5999882448307946,-0.06919460364344278))
push(move(13.726924762766618,22.892296286382127,11.432600916952188))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7970107984785961,0.5999882448307946,-0.06919460364344278,-0.5494357514984788,0.019478055002298798,-0.8353089011549137))
push(move(11.191009991856266,24.501663630964995,11.539840669303125))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.5494357514984788,0.019478055002298798,-0.8353089011549137,0.00017192468201933148,-0.3581253191164664,-0.933673511592587))
push(move(11.19173945230703,22.982171178548274,7.578350715489021))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub142 inherits .../COPOLYFF



DPDPoly_sub143 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.696015056785259,0.15155752572975564,0.7018499534251514))
push(move(13.924381084966566,24.921508626887388,6.908379268540155))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.696015056785259,0.15155752572975564,0.7018499534251514,-0.6904096483009751,0.6632981500931882,-0.28873877747174576))
push(move(11.474823151435036,25.454900736610487,9.37847255862216))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6904096483009751,0.6632981500931882,-0.28873877747174576,-0.22763126532570585,0.23034079239197883,-0.9461115824290777))
push(move(11.38480484976276,27.361358972224643,5.846293680290403))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.22763126532570585,0.23034079239197883,-0.9461115824290777,0.0163725524300901,0.555442332574349,-0.8313938625653247))
push(move(9.739908751095912,27.210466067825294,2.167588735895895))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.0163725524300901,0.555442332574349,-0.8313938625653247,0.8265502042117485,0.4572643898429678,0.3282134026804133))
push(move(11.454250872919213,29.717330116903376,2.3198430747188277))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8265502042117485,0.4572643898429678,0.3282134026804133,0.8082845922400113,0.5887816926247407,0.0034837303776606766))
push(move(14.016389817976885,29.576302402700083,3.8657292666310243))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8082845922400113,0.5887816926247407,0.0034837303776606766,0.5905902009883478,-0.6293893427801209,-0.5050467995060955))
push(move(15.12629404515001,32.39216991354666,2.3356696888470645))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5905902009883478,-0.6293893427801209,-0.5050467995060955,0.15149316242012853,-0.988413506897354,-0.009410691941769132))
push(move(15.858818003901234,27.612834903378374,2.2901656066452856))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub143 inherits .../COPOLYFF



DPDPoly_sub144 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.32637115761421936,0.5699548317839263,0.7540778190635969))
push(move(18.26926695259351,30.224933161399985,2.203645809931535))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.32637115761421936,0.5699548317839263,0.7540778190635969,0.8780569836758706,-0.1319483538580843,0.4600060492343267))
push(move(19.39129284697926,32.184371258095254,4.79607721703337))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8780569836758706,-0.1319483538580843,0.4600060492343267,0.8772423267511583,-0.369435737839227,0.30653406949864453))
push(move(22.384728907792258,29.606489893537425,4.3596988110246775))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8772423267511583,-0.369435737839227,0.30653406949864453,0.7530456681707308,0.4653969588237066,0.4651106237949663))
push(move(25.26160185058032,29.712190115033746,6.847334495911576))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7530456681707308,0.4653969588237066,0.4651106237949663,-0.3895103470479185,0.6060759655691818,-0.6935081928153365))
push(move(26.671948711197572,32.25607562604739,7.007654388475647))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3895103470479185,0.6060759655691818,-0.6935081928153365,-0.8779186061651034,-0.05815018774237957,0.47526569055071494))
push(move(23.773964808302193,32.02694520087047,4.198653954882109))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.8779186061651034,-0.05815018774237957,0.47526569055071494,-0.827152590466117,-0.0020704025699303276,0.5619735808010822))
push(move(23.008733194422863,32.01343733527037,8.990754689562795))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.827152590466117,-0.0020704025699303276,0.5619735808010822,-0.753733596488843,0.0012861440590518308,-0.6571788275328515))
push(move(20.25479659897548,32.018136554208915,6.589602835211677))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub144 inherits .../COPOLYFF



DPDPoly_sub145 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.2741780127790741,-0.9616731093167219,-0.0033538225394577287))
push(move(17.28191176701576,32.17969017038207,9.381928399381026))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2741780127790741,-0.9616731093167219,-0.0033538225394577287,-0.3536136125604037,-0.6366341866278079,-0.6853133045758928))
push(move(16.041024017822636,27.8273047694377,9.366749511548273))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3536136125604037,-0.6366341866278079,-0.6853133045758928,-0.11254121129440435,0.6158699801735494,-0.779768326672365))
push(move(16.000464500757158,29.872615134005695,6.898446911435153))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.11254121129440435,0.6158699801735494,-0.779768326672365,-0.921297359342476,0.3800199844210185,0.08243777719728629))
push(move(15.290872144655514,31.932432250658945,4.169145325829414))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.921297359342476,0.3800199844210185,0.08243777719728629,-0.22864347612556166,-0.6554961789777795,0.7197547639097296))
push(move(13.774226077673548,30.790901811242566,7.097650941761676))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.22864347612556166,-0.6554961789777795,0.7197547639097296,0.3704187497195722,-0.8883749379351907,0.27125618795676315))
push(move(13.751249538939067,27.51850034139807,9.01577696328306))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3704187497195722,-0.8883749379351907,0.27125618795676315,0.8697835553648214,-0.4521506376711643,-0.19757623255465245))
push(move(16.10157060236014,25.209233633706972,8.801956148521498))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.8697835553648214,-0.4521506376711643,-0.19757623255465245,0.9369907358336939,-0.026760996907707824,-0.34832773361640124))
push(move(18.315104090947532,25.14601383805927,7.9790717016676895))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub145 inherits .../COPOLYFF



DPDPoly_sub146 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.024833233980649287,0.9975130205192065,-0.06596274997838916))
push(move(20.69620102815569,24.998957152656644,7.249171016107064))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.024833233980649287,0.9975130205192065,-0.06596274997838916,-0.03471403696907443,0.7832319794216981,0.6207596975065942))
push(move(20.576768298266735,29.796387210828723,6.931930365652897))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.03471403696907443,0.7832319794216981,0.6207596975065942,0.6373892168368002,0.34474514246945615,0.6891195636490703))
push(move(20.45274077837133,30.492004634255604,11.602750265494215))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6373892168368002,0.34474514246945615,0.6891195636490703,0.7229646276147267,0.22683144577948955,0.6525868849612948))
push(move(24.582220014575206,31.96281862528871,11.262463525059413))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.7229646276147267,0.22683144577948955,0.6525868849612948,-0.2878033295461527,-0.4785709233785377,0.829541508785885))
push(move(25.237873815929966,31.99334868858056,15.92206955696291))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.2878033295461527,-0.4785709233785377,0.829541508785885,-0.3085144636283161,-0.9377433429255926,0.15955014425210293))
push(move(22.922904621987445,29.203642416802204,16.04514271257785))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3085144636283161,-0.9377433429255926,0.15955014425210293,-0.034851892783644596,0.0819411241690736,0.9960276089242234))
push(move(22.86993280761504,24.795887373888302,17.146664751022527))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.034851892783644596,0.0819411241690736,0.9960276089242234,-0.003787514424676124,0.98046912007544,0.1966366174266006))
push(move(22.852264242516288,29.36972671361586,18.063964723047697))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub146 inherits .../COPOLYFF



DPDPoly_sub147 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.5349796559311294,-0.8433402791160682,0.05073402566564912))
push(move(22.998153345504743,27.369782322067724,20.556073089176348))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5349796559311294,-0.8433402791160682,0.05073402566564912,0.348692453008998,-0.8667017185562781,-0.3567095516889923))
push(move(25.10034886745824,24.05588778685377,20.75543177577794))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.348692453008998,-0.8667017185562781,-0.3567095516889923,-0.6226619663866567,-0.3456260558013466,-0.7020218694362068))
push(move(25.39519548057305,21.411751054147217,18.103918423936786))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6226619663866567,-0.3456260558013466,-0.7020218694362068,-0.47306101710990517,0.7111203486652532,0.5201164521577362))
push(move(22.844042308155938,22.803461303675732,18.2115530192602))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.47306101710990517,0.7111203486652532,0.5201164521577362,0.386292407852728,0.3184700809538546,0.8656529230428249))
push(move(22.759852025173693,25.373283053349958,21.001399803005853))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.386292407852728,0.3184700809538546,0.8656529230428249,0.6670311918550205,0.3391455449794165,0.6633624110643332))
push(move(25.425310866023256,24.931530066810858,23.995986331571807))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6670311918550205,0.3391455449794165,0.6633624110643332,0.9597975008623337,0.02626645009697939,0.27946168062494975))
push(move(26.904105999242354,27.480388822511824,25.122859701538843))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9597975008623337,0.02626645009697939,0.27946168062494975,0.7349476114429929,-0.6778213171269902,0.02025513471867788))
push(move(29.545521323409506,25.044286457894138,25.19565703077152))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub147 inherits .../COPOLYFF



DPDPoly_sub148 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,-0.3606117999628034,0.931480926265507,0.04798347352099723))
push(move(27.44876290676344,25.788181362322167,22.61946054454647))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.3606117999628034,0.931480926265507,0.04798347352099723,-0.9392972556175702,0.34053068745330906,0.041946590944649635))
push(move(25.783909737309365,30.088592420804193,22.840988065224074))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.9392972556175702,0.34053068745330906,0.041946590944649635,-0.4642001408075891,-0.40070678291569983,0.7899065156077424))
push(move(22.938678016073574,27.423257265199823,22.820869294443252))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.4642001408075891,-0.40070678291569983,0.7899065156077424,0.3603127910235635,0.005738724198186812,0.9328138933728352))
push(move(22.721043518855335,27.444665456967684,28.05291664883585))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.3603127910235635,0.005738724198186812,0.9328138933728352,0.9639015195093058,0.038161141989739765,0.2635101287041741))
push(move(25.13462418933702,27.45823223627044,28.50595500483396))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9639015195093058,0.038161141989739765,0.2635101287041741,0.6532982588508752,-0.6787489790849586,-0.3354119979570518))
push(move(27.53029424660909,27.63506509445295,29.367663282792993))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6532982588508752,-0.6787489790849586,-0.3354119979570518,0.10243972958288086,-0.9555315874802498,-0.2765239359087384))
push(move(27.450383643439018,25.052257103192883,27.317013361771075))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.10243972958288086,-0.9555315874802498,-0.2765239359087384,0.181148640741651,-0.9834228723639229,-0.008038909686266341))
push(move(28.304001517259923,20.418121633353152,27.27913200110431))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub148 inherits .../COPOLYFF



DPDPoly_sub149 inherits .../COPOLYFF {



create_var {$mol}
# The line above forces all monomer subunits to share the same molecule-ID
# (Note: Setting the molecule-ID number is optional and is usually ignored.)




# ------------ List of Monomers: ------------
#
# (Note: move(), rot(), and rotvv() commands control the position
#  of each monomer.  (See the moltemplate manual for an explanation
#  of what they do.)  Commands enclosed in push() are cumulative
#  and remain in effect until removed by pop().)



push(move(0,0,0))
pop()
push(rotvv(1.0,0.0,0.0,0.014142896679885972,-0.836850742989392,-0.547248401031565))
push(move(29.685626991563225,20.808298102604763,31.465573335796872))
mon[0] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.014142896679885972,-0.836850742989392,-0.547248401031565,-0.05390074443655413,-0.7839441209209194,-0.6184871259959357))
push(move(29.72850043570041,18.271429284794277,29.806618718376853))
mon[1] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.05390074443655413,-0.7839441209209194,-0.6184871259959357,-0.7544980074503371,-0.530004570761962,-0.38707610585632807))
push(move(29.33851819141972,15.759872407617982,27.482653870531337))
mon[2] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.7544980074503371,-0.530004570761962,-0.38707610585632807,-0.6449675487973584,-0.6973399755936422,-0.31262408646389583))
push(move(24.996040843663334,14.947066344192292,27.378750106505517))
mon[3] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.6449675487973584,-0.6973399755936422,-0.31262408646389583,0.0382215003425878,0.5273710461236766,-0.8487749387334552))
push(move(25.152689376552836,11.23414740169906,25.453728676105538))
mon[4] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.0382215003425878,0.5273710461236766,-0.8487749387334552,0.30639027810215497,0.9512501823998962,-0.03532828850437321))
push(move(25.09669959699654,16.33593155280603,25.143447294538667))
mon[5] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.30639027810215497,0.9512501823998962,-0.03532828850437321,0.11237981964898604,0.9928756631224256,0.039606738250770504))
push(move(27.63584202593904,18.943593749953802,25.167409104409906))
mon[6] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.11237981964898604,0.9928756631224256,0.039606738250770504,-0.04731012132802974,0.8632744394013212,-0.5025126811298014))
push(move(25.84842668549267,22.977440088848766,25.408383277912517))
mon[7] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.04731012132802974,0.8632744394013212,-0.5025126811298014,0.27300793131410644,0.4889203367873855,-0.8285068338374171))
push(move(27.420591318806807,22.87130368419625,22.881086285533094))
mon[8] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.27300793131410644,0.4889203367873855,-0.8285068338374171,-0.17904615639782898,0.92931809954431,-0.32297111904706877))
push(move(27.418456636561295,25.789151707437526,20.643757805207173))
mon[9] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.17904615639782898,0.92931809954431,-0.32297111904706877,-0.34335321101364363,0.8936920407998553,-0.2888305882305578))
push(move(26.113914867007423,29.653454730250367,20.52404738360659))
mon[10] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.34335321101364363,0.8936920407998553,-0.2888305882305578,0.5285232856229537,0.845762982429207,0.07313080135463235))
push(move(24.9982393953669,32.088579865038376,18.607857900976665))
mon[11] = new ABEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.5285232856229537,0.845762982429207,0.07313080135463235,0.9494786086350803,-0.13602269239662307,0.28282185010632704))
push(move(27.57591274364376,31.992999113790038,20.72634135854691))
mon[12] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.9494786086350803,-0.13602269239662307,0.28282185010632704,0.6724860404845109,-0.37192233343223585,-0.6398720991321512))
push(move(32.187241264665474,31.0586805276409,20.74925086191519))
mon[13] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(0.6724860404845109,-0.37192233343223585,-0.6398720991321512,-0.0658575082148009,0.3615191930095133,-0.930035838931752))
push(move(32.02062319368,29.534826032878037,16.497188581412342))
mon[14] = new BBEADALCHEMICAL.rot(0.0,1,0,0)
pop()
push(rotvv(-0.0658575082148009,0.3615191930095133,-0.930035838931752,-0.0023815968224890037,0.8097281471212517,0.5868003542570162))
push(move(32.013333333333335,32.01333333333297,18.293333333334584))
mon[15] = new BBEADALCHEMICAL.rot(0.0,1,0,0)


write("Data Bonds") {
  $bond:genpoly1 @bond:COPOLYFF/Backbone $atom:mon[0]/monomer $atom:mon[1]/monomer
  $bond:genpoly2 @bond:COPOLYFF/Backbone $atom:mon[1]/monomer $atom:mon[2]/monomer
  $bond:genpoly3 @bond:COPOLYFF/Backbone $atom:mon[2]/monomer $atom:mon[3]/monomer
  $bond:genpoly4 @bond:COPOLYFF/Backbone $atom:mon[3]/monomer $atom:mon[4]/monomer
  $bond:genpoly5 @bond:COPOLYFF/Backbone $atom:mon[4]/monomer $atom:mon[5]/monomer
  $bond:genpoly6 @bond:COPOLYFF/Backbone $atom:mon[5]/monomer $atom:mon[6]/monomer
  $bond:genpoly7 @bond:COPOLYFF/Backbone $atom:mon[6]/monomer $atom:mon[7]/monomer
  $bond:genpoly8 @bond:COPOLYFF/Backbone $atom:mon[7]/monomer $atom:mon[8]/monomer
  $bond:genpoly9 @bond:COPOLYFF/Backbone $atom:mon[8]/monomer $atom:mon[9]/monomer
  $bond:genpoly10 @bond:COPOLYFF/Backbone $atom:mon[9]/monomer $atom:mon[10]/monomer
  $bond:genpoly11 @bond:COPOLYFF/Backbone $atom:mon[10]/monomer $atom:mon[11]/monomer
  $bond:genpoly12 @bond:COPOLYFF/Backbone $atom:mon[11]/monomer $atom:mon[12]/monomer
  $bond:genpoly13 @bond:COPOLYFF/Backbone $atom:mon[12]/monomer $atom:mon[13]/monomer
  $bond:genpoly14 @bond:COPOLYFF/Backbone $atom:mon[13]/monomer $atom:mon[14]/monomer
  $bond:genpoly15 @bond:COPOLYFF/Backbone $atom:mon[14]/monomer $atom:mon[15]/monomer
}  # write("Data Bonds") {...


}  # DPDPoly_sub149 inherits .../COPOLYFF





# Now instantiate all the polymers (once each)

polymers[0] = new DPDPoly_sub1
polymers[1] = new DPDPoly_sub2
polymers[2] = new DPDPoly_sub3
polymers[3] = new DPDPoly_sub4
polymers[4] = new DPDPoly_sub5
polymers[5] = new DPDPoly_sub6
polymers[6] = new DPDPoly_sub7
polymers[7] = new DPDPoly_sub8
polymers[8] = new DPDPoly_sub9
polymers[9] = new DPDPoly_sub10
polymers[10] = new DPDPoly_sub11
polymers[11] = new DPDPoly_sub12
polymers[12] = new DPDPoly_sub13
polymers[13] = new DPDPoly_sub14
polymers[14] = new DPDPoly_sub15
polymers[15] = new DPDPoly_sub16
polymers[16] = new DPDPoly_sub17
polymers[17] = new DPDPoly_sub18
polymers[18] = new DPDPoly_sub19
polymers[19] = new DPDPoly_sub20
polymers[20] = new DPDPoly_sub21
polymers[21] = new DPDPoly_sub22
polymers[22] = new DPDPoly_sub23
polymers[23] = new DPDPoly_sub24
polymers[24] = new DPDPoly_sub25
polymers[25] = new DPDPoly_sub26
polymers[26] = new DPDPoly_sub27
polymers[27] = new DPDPoly_sub28
polymers[28] = new DPDPoly_sub29
polymers[29] = new DPDPoly_sub30
polymers[30] = new DPDPoly_sub31
polymers[31] = new DPDPoly_sub32
polymers[32] = new DPDPoly_sub33
polymers[33] = new DPDPoly_sub34
polymers[34] = new DPDPoly_sub35
polymers[35] = new DPDPoly_sub36
polymers[36] = new DPDPoly_sub37
polymers[37] = new DPDPoly_sub38
polymers[38] = new DPDPoly_sub39
polymers[39] = new DPDPoly_sub40
polymers[40] = new DPDPoly_sub41
polymers[41] = new DPDPoly_sub42
polymers[42] = new DPDPoly_sub43
polymers[43] = new DPDPoly_sub44
polymers[44] = new DPDPoly_sub45
polymers[45] = new DPDPoly_sub46
polymers[46] = new DPDPoly_sub47
polymers[47] = new DPDPoly_sub48
polymers[48] = new DPDPoly_sub49
polymers[49] = new DPDPoly_sub50
polymers[50] = new DPDPoly_sub51
polymers[51] = new DPDPoly_sub52
polymers[52] = new DPDPoly_sub53
polymers[53] = new DPDPoly_sub54
polymers[54] = new DPDPoly_sub55
polymers[55] = new DPDPoly_sub56
polymers[56] = new DPDPoly_sub57
polymers[57] = new DPDPoly_sub58
polymers[58] = new DPDPoly_sub59
polymers[59] = new DPDPoly_sub60
polymers[60] = new DPDPoly_sub61
polymers[61] = new DPDPoly_sub62
polymers[62] = new DPDPoly_sub63
polymers[63] = new DPDPoly_sub64
polymers[64] = new DPDPoly_sub65
polymers[65] = new DPDPoly_sub66
polymers[66] = new DPDPoly_sub67
polymers[67] = new DPDPoly_sub68
polymers[68] = new DPDPoly_sub69
polymers[69] = new DPDPoly_sub70
polymers[70] = new DPDPoly_sub71
polymers[71] = new DPDPoly_sub72
polymers[72] = new DPDPoly_sub73
polymers[73] = new DPDPoly_sub74
polymers[74] = new DPDPoly_sub75
polymers[75] = new DPDPoly_sub76
polymers[76] = new DPDPoly_sub77
polymers[77] = new DPDPoly_sub78
polymers[78] = new DPDPoly_sub79
polymers[79] = new DPDPoly_sub80
polymers[80] = new DPDPoly_sub81
polymers[81] = new DPDPoly_sub82
polymers[82] = new DPDPoly_sub83
polymers[83] = new DPDPoly_sub84
polymers[84] = new DPDPoly_sub85
polymers[85] = new DPDPoly_sub86
polymers[86] = new DPDPoly_sub87
polymers[87] = new DPDPoly_sub88
polymers[88] = new DPDPoly_sub89
polymers[89] = new DPDPoly_sub90
polymers[90] = new DPDPoly_sub91
polymers[91] = new DPDPoly_sub92
polymers[92] = new DPDPoly_sub93
polymers[93] = new DPDPoly_sub94
polymers[94] = new DPDPoly_sub95
polymers[95] = new DPDPoly_sub96
polymers[96] = new DPDPoly_sub97
polymers[97] = new DPDPoly_sub98
polymers[98] = new DPDPoly_sub99
polymers[99] = new DPDPoly_sub100
polymers[100] = new DPDPoly_sub101
polymers[101] = new DPDPoly_sub102
polymers[102] = new DPDPoly_sub103
polymers[103] = new DPDPoly_sub104
polymers[104] = new DPDPoly_sub105
polymers[105] = new DPDPoly_sub106
polymers[106] = new DPDPoly_sub107
polymers[107] = new DPDPoly_sub108
polymers[108] = new DPDPoly_sub109
polymers[109] = new DPDPoly_sub110
polymers[110] = new DPDPoly_sub111
polymers[111] = new DPDPoly_sub112
polymers[112] = new DPDPoly_sub113
polymers[113] = new DPDPoly_sub114
polymers[114] = new DPDPoly_sub115
polymers[115] = new DPDPoly_sub116
polymers[116] = new DPDPoly_sub117
polymers[117] = new DPDPoly_sub118
polymers[118] = new DPDPoly_sub119
polymers[119] = new DPDPoly_sub120
polymers[120] = new DPDPoly_sub121
polymers[121] = new DPDPoly_sub122
polymers[122] = new DPDPoly_sub123
polymers[123] = new DPDPoly_sub124
polymers[124] = new DPDPoly_sub125
polymers[125] = new DPDPoly_sub126
polymers[126] = new DPDPoly_sub127
polymers[127] = new DPDPoly_sub128
polymers[128] = new DPDPoly_sub129
polymers[129] = new DPDPoly_sub130
polymers[130] = new DPDPoly_sub131
polymers[131] = new DPDPoly_sub132
polymers[132] = new DPDPoly_sub133
polymers[133] = new DPDPoly_sub134
polymers[134] = new DPDPoly_sub135
polymers[135] = new DPDPoly_sub136
polymers[136] = new DPDPoly_sub137
polymers[137] = new DPDPoly_sub138
polymers[138] = new DPDPoly_sub139
polymers[139] = new DPDPoly_sub140
polymers[140] = new DPDPoly_sub141
polymers[141] = new DPDPoly_sub142
polymers[142] = new DPDPoly_sub143
polymers[143] = new DPDPoly_sub144
polymers[144] = new DPDPoly_sub145
polymers[145] = new DPDPoly_sub146
polymers[146] = new DPDPoly_sub147
polymers[147] = new DPDPoly_sub148
polymers[148] = new DPDPoly_sub149


}  # DPDPoly

